# Generated by Django 3.0.2 on 2020-10-06 11:48

import DjangoAppCenter.extensions.fields.snowflake.core
import DjangoAppCenter.extensions.fields.snowflake.field
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import lzlab_blogs.extensions.mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', DjangoAppCenter.extensions.fields.snowflake.field.SnowFlakeField(default=DjangoAppCenter.extensions.fields.snowflake.core.get_snowflake_id, primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='首字母缩写')),
                ('pinyin', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='拼音全拼')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('alias', models.CharField(max_length=32, null=True, verbose_name='笔名')),
                ('moto', models.CharField(blank=True, max_length=64, null=True, verbose_name='座右铭')),
                ('wechat_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='微信ID')),
                ('user', models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '作者',
                'verbose_name_plural': '作者',
                'db_table': 'blogs_author',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', DjangoAppCenter.extensions.fields.snowflake.field.SnowFlakeField(default=DjangoAppCenter.extensions.fields.snowflake.core.get_snowflake_id, primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='首字母缩写')),
                ('pinyin', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='拼音全拼')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('public', models.BooleanField(default=False, verbose_name='是否公开')),
                ('foreword', lzlab_blogs.extensions.mdeditor.fields.MDTextField(verbose_name='序言')),
                ('author', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='topic', to='lzlab_blogs.Author', verbose_name='创建作者')),
            ],
            options={
                'verbose_name': '主题',
                'verbose_name_plural': '主题',
                'db_table': 'blogs_topic',
            },
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', DjangoAppCenter.extensions.fields.snowflake.field.SnowFlakeField(default=DjangoAppCenter.extensions.fields.snowflake.core.get_snowflake_id, primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='首字母缩写')),
                ('pinyin', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='拼音全拼')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('foreword', lzlab_blogs.extensions.mdeditor.fields.MDTextField(verbose_name='概述')),
                ('author', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='set', to='lzlab_blogs.Author', verbose_name='创建作者')),
                ('topic', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='set', to='lzlab_blogs.Topic', verbose_name='隶属主题')),
            ],
            options={
                'verbose_name': '文集',
                'verbose_name_plural': '文集',
                'db_table': 'blogs_set',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', DjangoAppCenter.extensions.fields.snowflake.field.SnowFlakeField(default=DjangoAppCenter.extensions.fields.snowflake.core.get_snowflake_id, primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='首字母缩写')),
                ('pinyin', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='拼音全拼')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('public', models.BooleanField(default=False, verbose_name='是否公开')),
                ('summary', models.TextField(verbose_name='摘要')),
                ('body', lzlab_blogs.extensions.mdeditor.fields.MDTextField(verbose_name='正文')),
                ('author', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='article', to='lzlab_blogs.Author', verbose_name='作者')),
                ('set', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article', to='lzlab_blogs.Set', verbose_name='隶属文集')),
                ('topic', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article', to='lzlab_blogs.Topic', verbose_name='隶属主题')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'db_table': 'blogs_article',
            },
        ),
    ]
