Metadata-Version: 2.1
Name: supwsd
Version: 1.2.9
Summary: Python binding to the SupWSD RESTful service.
Home-page: https://supwsd.net
Author: Simone Papandrea
Author-email: papandrea.simone@gmail.com
License: CC BY-NC-SA 3.0
Keywords: Supervised Word Sense Disambiguation Translation
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Description-Content-Type: text/markdown

# SupWSD

SupWSD is a Python binding to an HTTP RESTful service that gives you programmatic access to SupWSD, a framework for supervised Word Sense Disambiguation (WSD). 

Before using the services, you must first register on SupWSD. At the end of the registration process, you will receive an email with the API key. 

The SupWSD service is available for English, French, German, Italian and Spanish and enforces a default limit of 10.000 free requests per 1 hour period.

The SupWSD Python API requires python 2.7 or above.

LICENSES: All the data of the external resources are released under the terms of the respective <a target="_blank" href="https://supwsd.net/supwsd/licenses">licenses</a>.

## Installation
```
pip install supwsd
```

## Code Example
```
from it.si3p.supwsd.api import SupWSD
from it.si3p.supwsd.config import Model, Language

text="The human " + SupWSD.SENSE_TAG + "brain" + SupWSD.SENSE_TAG + " is quite proficient at word-sense disambiguation. The fact that natural language is formed "+ SupWSD.SENSE_TAG+"in a way"+ SupWSD.SENSE_TAG+" that requires so much of it is a " + SupWSD.SENSE_TAG + "reflection" + SupWSD.SENSE_TAG + " of that neurologic reality."

for result in SupWSD('apiKey').disambiguate(text,Language.EN,Model.SEMCOR_EXAMPLES_GLOSSES_ONESEC_OMSTI, False, Language.IT,Language.FR):
        token=result.token
        print("Word: {}\tLemma: {}\tPOS: {}\tTag: {}".format(token.word, token.lemma,token.pos,token.tag))

        if not result.miss():
            for sense in result.senses:
                print("Sense {}\tProbability: {}".format(sense.id, sense.probability))   

            for translation in result.translations:
            	print(translation)  
```

## Links

* <a target="_blank" href="https://supwsd.net">SupWSD.net</a>

