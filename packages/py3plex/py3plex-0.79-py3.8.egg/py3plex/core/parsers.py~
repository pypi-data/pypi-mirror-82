## these are the parser methods
# Conventions:
# 1.) node types are given as "type"
# 2.) edge types are given as "type"
# 3.) node classes are given as "labels", e.g. "1;5;7" indicates the node is labeled as 1 5 and with 7th class
# 3.) edge classes are given as "labels", e.g. "1;5;7" indicates the edge is labeled as 1 5 and with 7th class

import networkx as nx

def parse_gml(file_name,directed):
    H = nx.read_gml(file_name)
    if directed:
        H.to_directed()
    return H

def parse_nx(nx_object,directed):

    ## check if the network is in correct shape.
    if directed:
        nx_object.to_directed()

    ## check the nx object for possible classes
    return nx_object

def parse_matrix(file_name,directed):
            
    pass

## main parser method
def parse_network(input_name,f_type,directed=False,label_delimiter=None):

    if f_type == "gml":
        return parse_gml(input_name,directed)
    
    elif f_type == "nx":
        return parse_nx(input_name,directed)

    elif f_type == "sparse":
        return parse_matrix(input_name,directed)
        
        

if __name__ == "__main__":
    print ("Testing gml parser")
    print (nx.info(parse_gml("../../datasets/imdb_gml.gml",directed=False)))
