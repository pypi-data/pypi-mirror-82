## converters
import networkx as nx
from collections import defaultdict

def prepare_for_visualization(multinet):

    layers = defaultdict(list)
    for node in multinet.nodes(data=True):
        layers[node[1]['type']].append(node[0])

    networks = [(layer_name,multinet.subgraph(v)) for layer_name,v in layers.items()]
    inverse_mapping = {}

    ## construct the inverse mapping
    for k,v in layers.items():
        for x in v:
            inverse_mapping[x] = k

    multiedges = defaultdict(list)
    for edge in multinet.edges(data=True):
        if inverse_mapping[edge[0]] != inverse_mapping[edge[1]]:
            multiedges[edge[2]['type']].append((edge[0],edge[1]))

    return (networks,multiedges)


