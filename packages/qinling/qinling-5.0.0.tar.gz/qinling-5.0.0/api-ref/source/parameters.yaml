####################
# Header Variables #
####################

x-auth-token:
  description: |
    Token used to identify the user from Keystone
  in: header
  required: false
  type: string

####################
#  Path Variables  #
####################

path_alias_name:
  description: |
    Name of the alias
  in: path
  required: true
  type: string

path_execution_filter:
  description: |
    Execution filter, e.g. "``function_id``, ``function_version``, etc..."
  in: path
  required: true
  type: string

path_execution_id:
  description: |
    ID for the execution
  in: path
  required: true
  type: uuid

path_function_id:
  description: |
    ID for the function
  in: path
  required: true
  type: uuid

path_job_id:
  description: |
    ID for the job
  in: path
  required: true
  type: uuid

path_runtime_id:
  description: |
    ID for the runtime
  in: path
  required: true
  type: uuid

path_version_number:
  description: |
    Version number
  in: path
  required: true
  type: integer

path_webhook_id:
  description: |
    ID for the webhook
  in: path
  required: true
  type: uuid

####################
#  Body Variables  #
####################

alias_description:
  description: |
    Description for the alias
  in: body
  required: false
  type: string

alias_name:
  description: |
    Name of the alias
  in: body
  required: true
  type: string

alias_version:
  description: |
    Version of the function to point the alias
  in: body
  required: true
  type: integer

created_at:
  description: |
    Date / Time when resource was created
  in: body
  required: false
  type: datestamp

execution_description:
  description: |
    Description for the execution
  in: body
  required: false
  type: string

execution_function_alias:
  description: |
    Alias name of the function (if an alias has been created)
  in: body
  required: false
  type: string

execution_function_id:
  description: |
    ID for the function, if an alias is used then ``function_id`` is
    not required
  in: body
  required: true
  type: uuid

execution_function_version:
  description: |
    Version of the function to execute, default is ``0``. If an alias is
    used then ``function_version`` is not required
  in: body
  required: false
  type: integer

execution_input:
  description: |
    Input data to pass to the function, e.g. ``{"name": "foo"}``
  in: body
  required: false
  type: JSON

execution_sync:
  description: |
    Execution is sync or async, default is ``true``
  in: body
  required: false
  type: bool

function_code:
  description: |
    Source code type, e.g. "``package``", "``swift``", "``image``"
  in: body
  required: true
  type: JSON

function_code_update:
  description: |
    Source code type, e.g. "``package``", "``swift``", "``image``"

    Package function can't have this value updated.
  in: body
  required: false
  type: JSON

function_count:
  description: |
    Total of time the function has been executed
  in: body
  required: true
  type: integer

function_cpu:
  description: |
    Max CPU usage during the execution
  in: body
  required: false
  type: integer

function_description:
  description: |
    Description for the function
  in: body
  required: false
  type: string

function_entry:
  description: |
    Function entry point, e.g. "``hello_world.main``"

    Not required if the source is "``image``"
  in: body
  required: true
  type: string

function_entry_update:
  description: |
    Function entry point, e.g. "``hello_world.main``"
  in: body
  required: false
  type: string

function_id:
  description: |
    ID for the function
  in: body
  required: true
  type: uuid

function_latest_version:
  description: |
    Latest version created based on this function
  in: body
  required: false
  type: integer
  
function_memory:
  description: |
    Max memory usage during the execution
  in: body
  required: false
  type: integer

function_name:
  description: |
    Function name
  in: body
  required: true
  type: string

function_name_update:
  description: |
    Function name
  in: body
  required: false
  type: string

function_package:
  description: |
    Package to upload, e.g. "``package=@./hello_world.zip``"

    Required only if '``"code": {"source": "package"}``'
  in: body
  required: false
  type: string

function_runtime_id:
  description: |
    Runtime ID used by the function
  in: body
  required: true
  type: uuid

function_runtime_id_update:
  description: |
    Runtime ID used by the function
  in: body
  required: false
  type: uuid

function_scale_count_down:
  description: |
    Number of workers to scale down a function, default is ``1``
  in: body
  required: false
  type: integer

function_scale_count_up:
  description: |
    Number of workers to scale up a function, default is ``1``
  in: body
  required: false
  type: integer

function_timeout:
  description: |
    Timeout in second before the execution fails
  in: body
  required: false
  type: integer

id:
  description: |
    ID for the resource
  in: body
  required: true
  type: uuid

job_count:
  description: |
    Number of time the function should be executed, default is ``unlimited``
  in: body
  required: false
  type: integer

job_first_execution:
  description: |
    First time the function will be executed
  in: body
  required: true
  type: string

job_function_alias:
  description: |
    Alias name of the function (if an alias has been created)
  in: body
  required: false
  type: string

job_function_id:
  description: |
    ID for the function, if an alias is used then ``function_id`` is
    not required
  in: body
  required: true
  type: uuid

job_function_version:
  description: |
    Version of the function to execute, default is ``0``. If an alias is
    used then ``function_version`` is not required
  in: body
  required: false
  type: integer

job_input:
  description: |
    Input data to pass to the function, e.g. ``{"name": "foo"}``
  in: body
  required: false
  type: JSON

job_name:
  description: |
    Name of the job
  in: body
  required: true
  type: string

job_next_execution:
  description: |
    Next time the function will be executed
  in: body
  required: true
  type: string

job_next_execution_update:
  description: |
    Next time the function will be executed, e.g. "``2019-06-07 22:41:00``"
  in: body
  required: true
  type: string

job_pattern:
  description: |
    Cron pattern, e.g. "``* * * * *``" is equal to every minutes
  in: body
  required: true
  type: string

job_pattern_update:
  description: |
    Cron pattern, e.g. "``* * * * *``" is equal to every minutes
  in: body
  required: false
  type: string

job_status_update:
  description: |
    Status of the job, e.g. "``paused``, ``running``, ``canceled``, ``done``"
  in: body
  required: false
  type: string

project_id:
  description: |
    ID for the project that owns the resource
  in: body
  required: true
  type: uuid

runtime_capacity:
  description: |
    Number of workers available and currently used
  in: body
  required: false
  type: string

runtime_description:
  description: |
    Description for the runtime
  in: body
  required: false
  type: string

runtime_id:
  description: |
    ID for the runtime
  in: body
  required: true
  type: uuid

runtime_image:
  description: |
    Docker image used to build the runtime, e.g. "openstackqinling/python3-runtime"
  in: body
  required: true
  type: string

runtime_image_update:
  description: |
    Docker image used to build the runtime, e.g. "openstackqinling/python3-runtime"
  in: body
  required: false
  type: string

runtime_is_public:
  description: |
    Make the runtime public or not, if public then the runtime will be
    available for all the tenant.
    The runtime is public by default.
  in: body
  required: false
  type: bool

runtime_name:
  description: |
    Runtime name
  in: body
  required: true
  type: string

runtime_name_update:
  description: |
    Runtime name
  in: body
  required: false
  type: string

runtime_trusted:
  description: |
    Define the runtime as trusted or not, depending the value Kubernetes
    will apply some annotations like ``io.kubernetes.cri-o.TrustedSandbox``
    in the pod specification to choose the underlying container runtime.
    The runtime is trusted by default.
  in: body
  required: false
  type: bool

status:
  description: |
    Status of the resource
  in: body
  required: true
  type: enum

updated_at:
  description: |
    Date / Time when resource last updated
  in: body
  required: false
  type: datestamp

version_count:
  description: |
    Total of time the version has been executed
  in: body
  required: false
  type: integer

version_description:
  description: |
    Description for the version
  in: body
  required: false
  type: string

version_number:
  description: |
    Version of the function
  in: body
  required: false
  type: integer

webhook_description:
  description: |
    Description for the webhook
  in: body
  required: false
  type: string

webhook_function_alias:
  description: |
    Alias name of the function (if an alias has been created)
  in: body
  required: false
  type: string

webhook_function_id:
  description: |
    ID for the function, if an alias is used then ``function_id`` is
    not required
  in: body
  required: true
  type: uuid

webhook_function_version:
  description: |
    Version of the function
  in: body
  required: false
  type: integer

webhook_url:
  description: |
    Webhook URL
  in: body
  required: true
  type: string
