Metadata-Version: 2.1
Name: logicbank
Version: 0.0.7
Summary: Declare multi-table rules for SQLAlchemy update logic -- 40X more concise, Python for extensibility.
Home-page: https://github.com/valhuber/logicbank
Author: Val Huber
Author-email: valjhuber@gmail.com
License: BSD
Project-URL: Docs, https://github.com/valhuber/logicbank/wiki
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: ~=3.8
Description-Content-Type: text/x-rst
Requires-Dist: apispec[yaml] (<4,>=3.3)
Requires-Dist: colorama (<1,>=0.3.9)
Requires-Dist: click (<8,>=6.7)
Requires-Dist: email-validator (<2,>=1.0.5)
Requires-Dist: Flask (<2,>=0.12)
Requires-Dist: Flask-Babel (<2,>=1)
Requires-Dist: Flask-Login (<0.5,>=0.3)
Requires-Dist: Flask-OpenID (<2,>=1.2.5)
Requires-Dist: Flask-SQLAlchemy (<3,>=2.4)
Requires-Dist: Flask-WTF (<1,>=0.14.2)
Requires-Dist: Flask-JWT-Extended (<4,>=3.18)
Requires-Dist: jsonschema (<4,>=3.0.1)
Requires-Dist: marshmallow (<4,>=3)
Requires-Dist: marshmallow-enum (<2,>=1.5.1)
Requires-Dist: marshmallow-sqlalchemy (<1,>=0.22.0)
Requires-Dist: python-dateutil (<3,>=2.3)
Requires-Dist: prison (<1.0.0,>=0.1.3)
Requires-Dist: PyJWT (>=1.7.1)
Requires-Dist: sqlalchemy-utils (<1,>=0.32.21)
Provides-Extra: jmespath
Requires-Dist: jmespath (>=0.9.5) ; extra == 'jmespath'

Python Rules - Logic for SQLAlchemy
===================================

This package enables you to declare rules that govern SQLAlchemy
update transaction logic (multi-table derivations, constraints,
and actions such as sending mail or messages).

Logic is stated in Python, and is over an **40X
more concise than code.**


Features
--------

Logic is declared in Python (example below), and is:

- **Extensible:** logic consists of rules (see below), plus standard Python code

- **Multi-table:** rules like `sum` automate multi-table transactions

- **Scalable:** rules are pruned and optimized; for example, sums are processed as *1 row adjustment updates,* rather than expensive SQL aggregate queries

- **Manageable:** develop and debug your rules in IDEs, manage it in SCS systems (such as `git`) using existing procedures


Example:
--------
The following 5 rules represent the same logic as 200 lines
of Python:

.. image:: https://github.com/valhuber/LogicBank/raw/main/images/example.png
    :width: 800px
    :align: center



To activate the rules declared above:

.. code-block:: Python

    LogicBank.activate(session=session, activator=declare_logic)

Depends on:
-----------
- SQLAlchemy
- Python 3.8


More information:
-----------------
The github project includes documentation and examples.


Acknowledgements
----------------
Many thanks to

- Tyler Band, for testing and the Banking sample
- Max Tardiveau, for testing
- Nishanth Shyamsundar, for testing



Change Log
----------

0.0.6 - Initial Version
0.0.7 - Class Name can differ from Table Name


