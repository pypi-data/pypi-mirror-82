# The region for which all metrics passing through this server will be persisted
region: useast

# Whether this server is running on a secure port
accessedViaHttps: false

# Topic for publishing metrics to
metricsTopic: metrics

# Topic for publishing domain events to
eventsTopic: events

# Maximum rows (Mysql and Vertica) or points (Influxdb) to return when listing elements.
# If not set or set to any value less than or equal to 0, then defaults to 10,000.
maxQueryLimit: 10000

# Valid periods for notification
validNotificationPeriods:
  - 60

kafka:
  brokerUris:
    - 192.168.10.6:9092
  zookeeperUris:
    - 192.168.10.6:2181
  healthCheckTopic: healthcheck

mysql:
  driverClass: com.mysql.jdbc.Driver
  url: jdbc:mysql://192.168.10.6:3306/mon?connectTimeout=5000&autoReconnect=true&useLegacyDatetimeCode=false&characterEncoding=utf8
  user: monapi
  password: password
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 8
  maxSize: 32
  checkConnectionWhileIdle: false
  checkConnectionOnBorrow: true

databaseConfiguration:
# databaseType can be (vertica | influxdb)
  databaseType: influxdb

# Uncomment if databaseType is influxDB
influxDB:
  maxHttpConnections: 100
  name: mon
  replicationFactor: 1
  url: http://192.168.10.6:8086
  user: mon_api
  password: password

# Uncomment if databaseType is vertica
# As of 7/10 there is a bug in the monasca-api that requires this section even if databaseType is set to influxdb
vertica:
  driverClass: com.vertica.jdbc.Driver
  url: jdbc:vertica://192.168.10.6/mon
  user: dbadmin
  password: password
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 4
  maxSize: 32
  checkConnectionWhileIdle: false
  #
  # vertica database hint to be added to SELECT
  # statements.  For example, the hint below is used
  # to tell vertica that the query can be satisfied
  # locally (replicated projection).
  #
  # dbHint: "/*+KV(01)*/"
  dbHint: ""

middleware:
  enabled: true
  serverVIP: 192.168.10.6
  serverPort: 5000
  connTimeout: 2000
  connSSLClientAuth: false
  connPoolMaxActive: 3
  connPoolMaxIdle: 3
  connPoolEvictPeriod: 600000
  connPoolMinIdleTime: 600000
  connRetryTimes: 2
  connRetryInterval: 50
  defaultAuthorizedRoles: [user, domainuser, domainadmin, monasca-user]
  agentAuthorizedRoles: [monasca-agent]
  adminAuthMethod: password
  adminUser: admin
  adminPassword: secretadmin
  adminProjectId:
  adminProjectName: admin
  adminUserDomainId:
  adminUserDomainName:
  adminToken:
  timeToCacheToken: 600
  maxTokenCacheSize: 1048576

server:
  applicationConnectors:
    - type: http
      maxRequestHeaderSize: 16KiB  # Allow large headers used by keystone tokens

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: debug

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: # TODO

    - type: file
      currentLogFilename: /var/log/monasca/monasca-api.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: /var/log/monasca/monasca-api-%d.log.gz
      archivedFileCount: 5
      timeZone: UTC
      logFormat: # TODO

    - type: syslog
      host: 192.168.10.4
      port: 514
      facility: local0
      threshold: ALL
      logFormat: # TODO

hibernate:
  supportEnabled: false
  providerClass: com.zaxxer.hikari.hibernate.HikariConnectionProvider
  dataSourceClassName: org.postgresql.ds.PGPoolingDataSource
  serverName: localhost
  portNumber: 5432
  databaseName: mon
  user: mon
  password: mon
  initialConnections: 25
  maxConnections: 100
  autoConfig: validate
