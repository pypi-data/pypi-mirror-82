EEA Geotags vocabularies
========================
This package provides a sort of vocabularies encapsulated in adapters in order
to easily override them.

eea.geotags.interfaces.IGeoGroups
---------------------------------
Returns a SimpleVocabulary instance with Country Groups

    >>> from zope.component import queryAdapter
    >>> from eea.geotags.interfaces import IGeoGroups
    >>> voc = queryAdapter(folder, IGeoGroups)
    >>> values = [term.value for term in voc()]
    >>> values.sort()
    >>> values
    [u'eea32', u'eea32_2020', u'eea33', u'eea38_2020', u'eea39', u'efta4', u'eu15', u'eu25', u'eu27', u'eu27_2020', u'eu28', u'pan-europe']

eea.geotags.interfaces.IBioGroups
---------------------------------
Returns a SimpleVocabulary instance with Biogeographical regions

    >>> from zope.component import queryAdapter
    >>> from eea.geotags.interfaces import IBioGroups
    >>> voc = queryAdapter(folder, IBioGroups)
    >>> values = [term.value for term in voc()]
    >>> values.sort()
    >>> values
    [u'ALP', u'ANA', u'ARC', u'ATL', u'BLS', u'BOR', u'CON', u'MAC', u'MARC', u'MATL', u'MBAL', u'MBLS', u'MCAS', u'MED', u'MMAC', u'MMED', u'MNOS', u'PAN', u'STE']

eea.geotags.interfaces.IGeoCountries
------------------------------------
Returns a SimpleVocabulary instance of Countries for given group

    >>> from eea.geotags.interfaces import IGeoCountries
    >>> voc = queryAdapter(folder, IGeoCountries)
    >>> voc = voc('efta4')
    >>> values = [term.value for term in voc]
    >>> values.sort()
    >>> values
    [u'geo-2629691', u'geo-2658434', u'geo-3042058', u'geo-3144096']

    >>> titles = [term.title for term in voc]
    >>> titles.sort()
    >>> titles
    [u'Iceland', u'Liechtenstein', u'Norway', u'Switzerland']
