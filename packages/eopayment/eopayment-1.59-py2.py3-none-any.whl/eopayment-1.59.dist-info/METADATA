Metadata-Version: 2.1
Name: eopayment
Version: 1.59
Summary: Common API to use all French online payment credit card processing services
Home-page: http://dev.entrouvert.org/projects/eopayment/
Author: Entr'ouvert
Author-email: info@entrouvert.com
Maintainer: Benjamin Dauvergne
Maintainer-email: bdauvergne@entrouvert.com
License: GPLv3 or later
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/plain
Requires-Dist: pycrypto (>=2.5)
Requires-Dist: pytz
Requires-Dist: requests
Requires-Dist: six
Requires-Dist: click
Requires-Dist: zeep (>=2.5)

Interface with French's bank online credit card processing services
===================================================================

Services supported are:
- ATOS/SIPS v2 used by:
  - BNP under the name Mercanet,
  - Banque Populaire (before 2010/2011) under the name Cyberplus,
  - CCF under the name Elysnet,
  - HSBC under the name Elysnet,
  - Crédit Agricole under the name e-Transactions,
  - La Banque Postale under the name ScelliusNet,
  - LCL under the name Sherlocks,
  - Société Générale under the name Sogenactif
  - and Crédit du Nord under the name Webaffaires,
- Payzen/SystemPay v2 by Banque Populaire (since 2010/2011) and Caisse d'Épargne (Natixis)
- TIPI/PayFiP Régie
- PayFiP Régie Web-service
- Ogone
- Paybox
- Payzen

You can emit payment request under a simple API which takes as input a
dictionnary as configuration and an amount to pay. You get back a
transaction_id. Another unique API allows to handle the notifications coming
from those services, reporting whether the transaction was successful and which
one it was. The full content (which is specific to the service) is also
reported for logging purpose.

The spplus and paybox module also depend upon the python Crypto library for DES
decoding of the merchant key and RSA signature validation on the responses.

Some backends allow to specify the order and transaction ids in different
fields, in order to allow to match them in payment system backoffice. They are:
- Payzen
- SIPS
- SystemPay
- PayFiP Régie Web-Service

For other backends, the order and transaction ids, separated by '!' are sent in
order id field, so they can be matched in backoffice.

PayFiP Régie Web-Service
========================

You can test your PayFiP regie web-service connection with an integrated CLI utility:

    $ python3 -m eopayment.payfip_ws info-client --help
    Usage: payfip_ws.py info-client [OPTIONS] NUMCLI

    Options:
      --help  Show this message and exit.

    $ python3 -m eopayment.payfip_ws get-idop --help
    Usage: payfip_ws.py get-idop [OPTIONS] NUMCLI

    Options:
      --saisie [T|X|W]         [required]
      --exer TEXT              [required]
      --montant INTEGER        [required]
      --refdet TEXT            [required]
      --mel TEXT               [required]
      --url-notification TEXT  [required]
      --url-redirect TEXT      [required]
      --objet TEXT
      --help                   Show this message and exit.

    $ python3 -m eopayment.payfip_ws info-paiement --help
    Usage: payfip_ws.py info-paiement [OPTIONS] IDOP

    Options:
      --help  Show this message and exit.


