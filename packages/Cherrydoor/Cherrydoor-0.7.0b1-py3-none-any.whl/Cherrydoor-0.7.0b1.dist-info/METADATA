Metadata-Version: 2.1
Name: Cherrydoor
Version: 0.7.0b1
Summary: An overengineered rfid lock manager created for my school community. Made for Raspberry Pi connected with another microcontroler that send and recieved rfid data via UART
Home-page: https://github.com/oplik0/cherrydoor
Author: oplik0
License: MIT
Keywords: wisniowasu mongodb flask rfid lock cherrydoor
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Home Automation
Classifier: Topic :: Terminals :: Serial
Classifier: Topic :: Internet :: WWW/HTTP
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: aiohttp (>=3.6)
Requires-Dist: aioserial (>=1.3)
Requires-Dist: argon2-cffi (>=19)
Requires-Dist: motor (>=2.1)
Requires-Dist: confuse (>=1.3)
Requires-Dist: pybranca (>=0.3)
Requires-Dist: msgpack (>=1.0)
Requires-Dist: aiohttp-csrf-fixed (>=0.0.3)
Requires-Dist: aiohttp-jinja2 (>=1.2)
Requires-Dist: aiohttp-rest-api-redoc (>=0.2.3)
Requires-Dist: aiohttp-security (>=0.4.0)
Requires-Dist: aiohttp-session (>=2.9.0)
Requires-Dist: aiohttp-session-mongo (>=0.0.1)
Requires-Dist: secure (>=0.2.1)
Requires-Dist: sentry-sdk (>=0.16.5)
Requires-Dist: packaging (>=20)
Requires-Dist: aiojobs (>=0.2.2)
Requires-Dist: python-socketio (>=4.6.0)
Provides-Extra: speedups
Requires-Dist: aiodns (>=1.1) ; extra == 'speedups'
Requires-Dist: Brotli ; extra == 'speedups'
Requires-Dist: cchardet ; extra == 'speedups'
Requires-Dist: uvloop (>=0.14) ; extra == 'speedups'

[![python tests](https://github.com/wisniowa56/cherrydoor/workflows/python%20tests/badge.svg)](https://github.com/wisniowa56/cherrydoor/actions?query=workflow%3A%22python+tests%22)
[![Maintainability](https://api.codeclimate.com/v1/badges/7b05467561774c611f8c/maintainability)](https://codeclimate.com/github/oplik0/cherrydoor/maintainability)
[![HitCount](http://hits.dwyl.io/wisniowa56/cherrydoor.svg)](http://hits.dwyl.io/wisniowa56/cherrydoor)

<h1 align="center">cherrydoor</h1>
<p align="center">
  <img src="https://raw.githubusercontent.com/wisniowa56/cherrydoor/v0.7.0b1/cherrydoor/static//images/logo/logo.svg">
</p>
Prosta webaplikacja do zarządzania i przeglądania statystyk wykorzystania zamka RFID korzystająca z Flaska i MongoDB.

## Instalacja i uruchamianie:

1. Zaintaluj `Cherrydoor` korzystając z pip i pypi:

```bash
pip3 install Cherrydoor
```

Albo pobierz wheel danego wydania i zainstaluj:

```bash
pip3 install ./Cherrydoor-<version>-py3-none-any.whl
```

2. Doinstaluj dodatkowe zależności i skonfiguruj trochę rzeczy korzystając z wbudowanego skryptu instalacyjnego:

```bash
cherrydoor install
```

3. Program powinien być już uruchomiony przez systemd na porcie 5000. Możesz go restartować/zatrzymywać/itp. korzystając z `systemctl --user <komenda> cherrydoor`. Jeśli chcesz go uruchomić bez korzystania z usługi, skorzystaj ze skryptu `cherrydoor start`.


