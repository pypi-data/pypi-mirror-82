{"version":3,"sources":["utils/HttpRequestContainer.tsx","utils/index.tsx","ui/Table.tsx","components/DeploymentDetail/DeploymentStatusTag.tsx","components/DeploymentsTable.tsx","components/BentoServiceTable.tsx","ui/Layout.ts","pages/HomePage.tsx","pages/DeploymentsList.tsx","components/DeploymentDetail/ConfigurationTable.tsx","components/BentoServiceDetail/ApisTable.tsx","components/DeploymentDetail/ApisTable.tsx","components/DeploymentDetail/InfoTable.tsx","components/DeploymentDetail/ErrorCard.tsx","pages/DeploymentDetails.tsx","pages/Repository.tsx","pages/BentoServiceList.tsx","components/BentoServiceDetail/EnvTable.tsx","components/BentoServiceDetail/ArtifactsTable.tsx","pages/BentoServiceDetail.tsx","components/Breadcrumbs.tsx","components/NavigationBar.tsx","app.tsx","index.tsx","assets/bentoml-logo.png"],"names":["DisplayHttpError","error","JSON","stringify","fetch","options","props","callback","Object","assign","url","data","method","headers","params","axios","then","response","isLoading","catch","undefined","HttpRequestContainer","React","info","setInfo","children","displayTimeInFromNowFormat","seconds","displayAgoString","moment","fromNow","TableContainer","styled","div","width","margin","backgroundColor","Row","display","flexWrap","borderBottom","showBottomBorder","TableHeader","fontWeight","Cell","color","textAlign","padding","flex","height","position","whiteSpace","overflowWrap","minWidth","Table","content","header","ratio","finalHeader","zip","map","h","i","key","row","r","link","to","style","textDecoration","cell","j","DeploymentStatusTag","statusColor","state","Intent","SUCCESS","DANGER","PRIMARY","NONE","intent","verticalAlign","DEPLOYMENTS_TABLE_HEADERS","DEPLOYMENTS_TABLE_RATIO","DeploymentsTable","parsedDeployments","deployments","deployment","name","namespace","spec","operator","bento_name","bento_version","Number","created_at","last_updated_at","BENTO_TABLE_HEADERS","BENTO_TABLE_RATIO","BentoServiceTable","parsedBentoServices","bentos","bento","metadata","bento_service_metadata","apis","api","input_type","join","apisToDisplayFormat","artifacts","artifact","artifact_type","artifactsToDisplayFormat","version","Layout","maxWidth","marginBottom","Section","section","HomePage","limit","deploymentDisplay","href","target","rel","DeploymentsList","requestParams","match","activeDeploymentCount","lodash","length","parseKeyForDisplay","replace","ConfigurationTable","parsedConfiguration","aws_lambda_operator_config","value","push","inputConfigToTableContent","input_config","config","fields","displayInputList","configureKeys","keys","index","valueObject","valueType","values","APIS_TABLE_HEADER","APIS_TABLE_RATIO","ApisTable","apisTableContent","docs","DeploymentApisTable","apiName","api_name","sagemaker_opeartor_config","deployedApi","find","displayTimestampForDeployment","toISOString","displayTimeISOString","InfoTable","endpointValues","info_json","parse","endpoints","parsedInfo","ErrorCard","indexOf","elevation","error_message","DeploymentDetails","deployment_name","detailDisplay","Repository","queryString","query","location","search","qs","ignoreQueryPrefix","offset","bentoDisplay","hasBento","justifyContent","marginTop","BentoServicesList","ENV_TABLE_RATIO","EnvTable","env","parsedEnv","ARTIFACTS_TABLE_HEADER","ARTIFACTS_TABLE_RATIO","ArtifactsTable","artifactsTableContent","BentoServiceDetail","displayBentoServiceDetail","toDate","toLocaleString","uri","HOME_CRUMB","text","getBreadcrumbs","pathname","pathSnippets","split","filter","isLastOne","slice","formattedName","includes","capitalize","Breadcrumbs","breadcrumbs","setBreadcrumbs","useLocation","parsedBreadcrumbs","unshift","items","getHighlightStyle","highlight","path","NavigationBar","setHighlight","currentLocation","paddingLeft","marginLeft","align","Alignment","LEFT","src","logo","alt","className","Classes","MINIMAL","large","App","component","exact","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d50d590a.chunk.js","sourcesContent":["import * as React from \"react\";\nimport axios, { Method } from \"axios\";\nimport { Card, Spinner } from \"@blueprintjs/core\";\n\ninterface IHttpRequestContainerProps {\n  url: string;\n  data?: any;\n  method?: Method;\n  headers?: any;\n  params?: any;\n  children?: any;\n}\n\nconst HttpRequestContainer: React.FC<IHttpRequestContainerProps> = (props) => {\n  const [info, setInfo] = React.useState({\n    data: undefined,\n    error: undefined,\n    isLoading: true,\n  });\n\n  React.useEffect(() => {\n    fetch(undefined, props, setInfo);\n  }, [props]);\n\n  if (info.isLoading) {\n    return <Spinner />;\n  }\n  if (info.error) {\n    return <DisplayHttpError error={info.error} />;\n  }\n  return props.children({\n    data: info.data,\n  });\n};\n\nconst DisplayHttpError = ({ error }) => {\n  return (\n    <Card>\n      <h3>Encounter HTTP Request Error</h3>\n      <div>{JSON.stringify(error)}</div>\n    </Card>\n  );\n};\n\nconst fetch = (options = {}, props, callback) => {\n  const { url, data, method, headers, params } = Object.assign(\n    {},\n    props,\n    options\n  );\n\n  return axios({ method, url, data, headers, params })\n    .then((response) => {\n      callback({ data: response.data, isLoading: false, error: false });\n    })\n    .catch((error) => {\n      callback({ error: error.response, isLoading: false, data: undefined });\n    });\n};\n\nexport default HttpRequestContainer;\n","import * as moment from \"../../node_modules/moment/moment\";\nimport * as qs from \"qs\";\n\nexport const displayTimeInFromNowFormat = (\n  seconds: number,\n  displayAgoString: boolean = false\n) => {\n  return moment.unix(seconds).fromNow(!displayAgoString);\n};\n\nexport const displayTimeISOString = (seconds: number) => {\n  return moment.unix(seconds).toISOString();\n};\n\nexport const getQueryObject = (queryString) => {\n  return qs.parse(queryString, { ignoreQueryPrefix: true });\n};\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { zip } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nconst TableContainer = styled.div({\n  width: \"100%\",\n  margin: \"auto\",\n  backgroundColor: \"#F5F8FA\",\n});\n\nconst Row = styled.div<{ showBottomBorder?: boolean }>((props) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  borderBottom: props.showBottomBorder ? \"2px solid #D8E1E8\" : \"none\",\n  \":hover\": {\n    backgroundColor: \"#EBF1F5\",\n  },\n}));\n\nconst TableHeader = styled(Row)({\n  borderBottom: \"2px solid #D8E1E8\",\n  fontWeight: 600,\n  \":hover\": {\n    backgroundColor: \"#F5F8FA\",\n  },\n});\n\nconst Cell = styled.div<{\n  flex?: number;\n}>((props) => ({\n  color: \"#394B59\",\n  textAlign: \"left\",\n  padding: \"20px\",\n  flex: props.flex ? props.flex : 1,\n  height: \"auto\",\n  position: \"relative\",\n  whiteSpace: \"pre-wrap\",\n  overflowWrap: \"break-word\",\n  minWidth: \"100px\",\n}));\n\nexport interface ITableProps {\n  content: Array<{ content: any[]; link?: string }>;\n  header?: Array<string>;\n  ratio?: Array<number>;\n}\n\nconst Table: React.FC<ITableProps> = (props) => {\n  const { content, header, ratio } = props;\n  const finalHeader = ratio && header ? zip(header, ratio) : header;\n  return (\n    <TableContainer>\n      {finalHeader && (\n        <TableHeader>\n          {\n            // @ts-ignore\n            finalHeader.map((h, i) => (\n              <Cell key={i} flex={h[1]}>\n                {h[0]}\n              </Cell>\n            ))\n          }\n        </TableHeader>\n      )}\n      {content.map((row, i) => {\n        const r = zip(row.content, ratio);\n        if (row.link) {\n          return (\n            <Link key={i} to={row.link} style={{ textDecoration: \"none\" }}>\n              <Row key={i}>\n                {r.map((cell, j) => (\n                  <Cell key={j} flex={cell[1]}>\n                    {cell[0]}\n                  </Cell>\n                ))}\n              </Row>\n            </Link>\n          );\n        }\n\n        return (\n          <Row key={i}>\n            {r.map((cell, j) => (\n              <Cell key={j} flex={cell[1]}>\n                {cell[0]}\n              </Cell>\n            ))}\n          </Row>\n        );\n      })}\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import * as React from \"react\";\nimport { Tag, Intent } from \"@blueprintjs/core\";\n\nconst DeploymentStatusTag = ({ state }) => {\n  let statusColor;\n  state = state || \"PENDING\";\n  switch (state) {\n    case \"RUNNING\":\n    case \"SUCCESSED\":\n      statusColor = Intent.SUCCESS;\n      break;\n    case \"FAILED\":\n    case \"ERROR\":\n    case \"CRASH_LOOP_BACK_OFF\":\n      statusColor = Intent.DANGER;\n      break;\n    case \"PENDING\":\n      statusColor = Intent.PRIMARY;\n      break;\n    default:\n      statusColor = Intent.NONE;\n  }\n\n  return (\n    <Tag intent={statusColor} style={{ verticalAlign: \"middle\" }}>\n      {state}\n    </Tag>\n  );\n};\n\nexport default DeploymentStatusTag;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { displayTimeInFromNowFormat } from \"../utils\";\nimport Table from \"../ui/Table\";\nimport DeploymentStatusTag from \"./DeploymentDetail/DeploymentStatusTag\";\n\nconst DEPLOYMENTS_TABLE_HEADERS = [\n  \"Name\",\n  \"Namespace\",\n  \"Platform\",\n  \"BentoService\",\n  \"Status\",\n  \"Age\",\n  \"Last updated at\",\n  \"\",\n];\nconst DEPLOYMENTS_TABLE_RATIO = [3, 2, 2, 5, 2, 1, 2, 1];\n\nconst DeploymentsTable = (props) => {\n  const { deployments } = props;\n  const parsedDeployments = deployments.map((deployment) => ({\n    content: [\n      deployment.name,\n      deployment.namespace,\n      deployment.spec.operator,\n      `${deployment.spec.bento_name}:${deployment.spec.bento_version}`,\n      <DeploymentStatusTag state={deployment.state.state} />,\n      displayTimeInFromNowFormat(Number(deployment.created_at.seconds)),\n      displayTimeInFromNowFormat(\n        Number(deployment.last_updated_at.seconds),\n        true\n      ),\n      <Link to={`/deployments/${deployment.namespace}/${deployment.name}`}>\n        Detail\n      </Link>,\n    ],\n    link: `/deployments/${deployment.namespace}/${deployment.name}`,\n  }));\n\n  return (\n    <Table\n      content={parsedDeployments}\n      ratio={DEPLOYMENTS_TABLE_RATIO}\n      header={DEPLOYMENTS_TABLE_HEADERS}\n    />\n  );\n};\n\nexport default DeploymentsTable;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { displayTimeInFromNowFormat } from \"../utils\";\nimport Table from \"../ui/Table\";\n\nconst apisToDisplayFormat = (apis: any) => {\n  if (!apis) {\n    return \"\";\n  }\n  return apis.map((api: any) => `${api.name}<${api.input_type}>`).join(\"\\n\");\n};\n\nconst artifactsToDisplayFormat = (artifacts) => {\n  if (!artifacts) {\n    return \"\";\n  }\n  return artifacts\n    .map((artifact) => `${artifact.name}<${artifact.artifact_type}>`)\n    .join(\"\\n\");\n};\n\nconst BENTO_TABLE_HEADERS = [\n  \"BentoService(name:version)\",\n  \"Age\",\n  \"APIs\",\n  \"Artifacts\",\n  \"\",\n];\nconst BENTO_TABLE_RATIO = [6, 2, 4, 4, 1];\n\nconst BentoServiceTable = (props) => {\n  const { bentos } = props;\n  const parsedBentoServices = bentos.map((bento) => {\n    const metadata = bento.bento_service_metadata;\n    const apis = apisToDisplayFormat(metadata.apis);\n    const artifacts = artifactsToDisplayFormat(metadata.artifacts);\n\n    return {\n      content: [\n        `${bento.name}:${bento.version}`,\n        displayTimeInFromNowFormat(Number(metadata.created_at.seconds)),\n        apis,\n        artifacts,\n        <Link to={`/repository/${bento.name}/${bento.version}`}>Detail</Link>,\n      ],\n      link: `/repository/${bento.name}/${bento.version}`,\n    };\n  });\n\n  return (\n    <Table\n      content={parsedBentoServices}\n      ratio={BENTO_TABLE_RATIO}\n      header={BENTO_TABLE_HEADERS}\n    />\n  );\n};\n\nexport default BentoServiceTable;\n","import styled from \"@emotion/styled\";\n\nconst Layout = styled.div({\n  margin: \"0 auto\",\n  maxWidth: \"80%\",\n  marginBottom: \"100px\",\n  minWidth: \"960px\",\n});\n\nexport const Section = styled.section({\n  margin: \"30px 0 0\",\n});\n\nexport default Layout;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport DeploymentsTable from \"../components/DeploymentsTable\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\nimport { Section } from \"../ui/Layout\";\n\nconst HomePage = () => (\n  <div>\n    <HttpRequestContainer\n      url=\"/api/ListDeployments\"\n      method=\"get\"\n      params={{ limit: 5 }}\n    >\n      {({ data }) => {\n        let deploymentDisplay;\n        if (data && data.deployments) {\n          deploymentDisplay = (\n            <DeploymentsTable deployments={data.deployments} />\n          );\n        } else {\n          deploymentDisplay = (\n            <a\n              href=\"https://docs.bentoml.org/en/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn about managing model serving deployments with BentoML 🔗\n            </a>\n          );\n        }\n\n        return (\n          <Section>\n            <h2>Latest Deployments</h2>\n            {deploymentDisplay}\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n    <HttpRequestContainer\n      url=\"/api/ListBento\"\n      method=\"get\"\n      params={{ limit: 5 }}\n    >\n      {({ data }) => {\n        if (data && data.bentos) {\n          return (\n            <Section>\n              <h2>Latest Models</h2>\n              <BentoServiceTable bentos={data.bentos} />\n            </Section>\n          );\n        } else {\n          return (\n            <Section>\n              <h2>No model found</h2>\n              <a\n                href=\"https://docs.bentoml.org/en/latest\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn about packaging ML model for serving with BentoML 🔗\n              </a>\n            </Section>\n          );\n        }\n      }}\n    </HttpRequestContainer>\n  </div>\n);\n\nexport default HomePage;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport DeploymentsTable from \"../components/DeploymentsTable\";\n\nconst getActiveDeploymentCount = (deployments) => {\n  return (\n    lodash.filter(\n      deployments,\n      (deployment) =>\n        deployment.state &&\n        deployment.state.state &&\n        deployment.state.state === \"RUNNING\"\n    ).length || 0\n  );\n};\n\nconst DeploymentsList = (props) => {\n  const params = props.match.params;\n  let requestParams;\n  if (params.namespace) {\n    requestParams = { namespace: params.namespace };\n  }\n  return (\n    <HttpRequestContainer\n      url=\"/api/ListDeployments\"\n      method=\"get\"\n      params={requestParams}\n    >\n      {({ data }) => {\n        let activeDeploymentCount = 0;\n        let deploymentDisplay;\n\n        if (data && data.deployments) {\n          activeDeploymentCount = getActiveDeploymentCount(data.deployments);\n          deploymentDisplay = (\n            <DeploymentsTable deployments={data.deployments} />\n          );\n        } else {\n          deploymentDisplay = (\n            <a\n              href=\"https://docs.bentoml.org/en/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn more about managing model serving deployments with BentoML\n            </a>\n          );\n        }\n\n        return (\n          <div>\n            <h2>Active Deployments: {activeDeploymentCount}</h2>\n            {deploymentDisplay}\n          </div>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentsList;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\n\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst parseKeyForDisplay = (key: string) => {\n  return lodash.capitalize(key).replace(\"_\", \" \");\n};\n\nconst ConfigurationTable = ({ spec }) => {\n  const parsedConfiguration = [{ content: [\"Platform\", spec.operator] }];\n  switch (spec.operator) {\n    case \"AWS_LAMBDA\":\n      lodash.each(spec.aws_lambda_operator_config, (value, key) => {\n        switch (key) {\n          case \"memory_size\":\n            value = value + \" MB\";\n            break;\n          case \"timeout\":\n            value = value + \" seconds\";\n            break;\n        }\n\n        parsedConfiguration.push({ content: [parseKeyForDisplay(key), value] });\n      });\n      break;\n    case \"AWS_SAGEMAKER\":\n      lodash.each(spec.aws_lambda_operator_config, (value, key) => {\n        parsedConfiguration.push({ content: [parseKeyForDisplay(key), value] });\n      });\n      break;\n  }\n\n  return (\n    <Section>\n      <h2>Configuration</h2>\n      <Table content={parsedConfiguration} ratio={[1, 4]} />\n    </Section>\n  );\n};\n\nexport default ConfigurationTable;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst inputConfigToTableContent = (\n  input_config: any\n): string | null | undefined | Array<any> => {\n  if (!input_config) {\n    return [\"None\"];\n  }\n  const config = input_config.fields;\n  /*\n    grpc format for JSON:\n    example\n    fields {\n      input_type: {\n        nullValue: 'NULL_VALUE',\n      },\n      orient: {\n        stringValue: 'frame',\n      }\n    }\n    */\n\n  const displayInputList : React.ReactNode[]= [];\n  const configureKeys = Object.keys(config);\n  for (let index = 0; index < configureKeys.length; index++) {\n    const key = configureKeys[index];\n    const valueObject = config[key];\n    const valueType = Object.keys(valueObject)[0];\n    let value = Object.values(valueObject)[0];\n    if (valueType === \"nullValue\") {\n      value = \"null\";\n    }\n\n    displayInputList.push(<p key={index}>{`${key}: ${value}`}</p>);\n  }\n  return displayInputList;\n};\n\ninterface IApiProps {\n  name: string;\n  input_type: string;\n  docs: string;\n  input_config: { [key: string]: string };\n}\n\nconst APIS_TABLE_HEADER = [\n  \"API name\",\n  \"Input type\",\n  \"Input Config\",\n  \"Documentation\",\n];\n\nconst APIS_TABLE_RATIO = [1, 1, 1, 4];\n\nconst ApisTable: React.FC<{ apis: Array<IApiProps> }> = ({ apis }) => {\n  const apisTableContent = apis.map((api) => ({\n    content: [\n      api.name,\n      api.input_type,\n      inputConfigToTableContent(api.input_config),\n      api.docs,\n    ],\n  }));\n  return (\n    <Section>\n      <h2>APIs</h2>\n      <Table\n        content={apisTableContent}\n        header={APIS_TABLE_HEADER}\n        ratio={APIS_TABLE_RATIO}\n      />\n    </Section>\n  );\n};\nexport default ApisTable;\n","import * as React from \"react\";\nimport HttpRequestContainer from \"../../utils/HttpRequestContainer\";\nimport ApisTable from \"../BentoServiceDetail/ApisTable\";\nimport { Section } from \"../../ui/Layout\";\n\nconst DeploymentApisTable = ({ deployment }) => {\n  let apiName;\n  switch (deployment.spec.operator) {\n    case \"AWS_LAMBDA\":\n      apiName = deployment.spec.aws_lambda_operator_config.api_name;\n      break;\n    case \"AWS_SAGEMAKER\":\n      apiName = deployment.spec.sagemaker_opeartor_config.api_name;\n      break;\n  }\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetBento\"\n      params={{\n        bento_name: deployment.spec.bento_name,\n        bento_version: deployment.spec.bento_version,\n      }}\n    >\n      {(data) => {\n        if (data && data.data && data.data.bento) {\n          const bento = data.data.bento;\n          let { apis } = bento.bento_service_metadata;\n          if (apiName) {\n            const deployedApi = apis.find((api) => {\n              return api.name === apiName;\n            });\n            apis = [deployedApi];\n          }\n          return <ApisTable apis={apis} />;\n        } else {\n          return (\n            <Section>\n              <h3>APIs</h3>\n              <div>No APIs</div>\n            </Section>\n          );\n        }\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentApisTable;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { displayTimeInFromNowFormat, displayTimeISOString } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { Section } from \"../../ui/Layout\";\n\nconst displayTimestampForDeployment = (seconds: number) => {\n  return `${displayTimeInFromNowFormat(seconds, true)} (${displayTimeISOString(\n    seconds\n  )})`;\n};\n\nconst InfoTable = ({ deployment }) => {\n  let endpointValues = \"Not Available\";\n  if (deployment.state.state === \"RUNNING\" && deployment.state.info_json) {\n    const infoJson = JSON.parse(deployment.state.info_json);\n    endpointValues = infoJson.endpoints.join(\"\\n\");\n  }\n  const parsedInfo = [\n    {\n      content: [\n        \"Created at\",\n        displayTimestampForDeployment(Number(deployment.created_at.seconds)),\n      ],\n    },\n    {\n      content: [\n        \"Updated at\",\n        displayTimestampForDeployment(\n          Number(deployment.last_updated_at.seconds)\n        ),\n      ],\n    },\n    {\n      content: [\n        \"BentoService\",\n        <Link\n          to={`/repository/${deployment.spec.bento_name}/${deployment.spec.bento_version}`}\n        >\n          {`${deployment.spec.bento_name}:${deployment.spec.bento_version}`}\n        </Link>,\n      ],\n    },\n    {\n      content: [\"Endpoint\", endpointValues],\n    },\n  ];\n  return (\n    <Section>\n      <h2>Info</h2>\n      <Table content={parsedInfo} ratio={[1, 4]} />\n    </Section>\n  );\n};\n\nexport default InfoTable;\n","import * as React from \"react\";\nimport { Card } from \"@blueprintjs/core\";\n\nconst ErrorCard = ({ state }) => {\n  if ([\"FAILED\", \"ERROR\", \"CRASH_LOOP_BACK_OFF\"].indexOf(state.state) !== -1) {\n    return (\n      <Card elevation={3} style={{ backgroundColor: \"orange\" }}>\n        {state.error_message}\n      </Card>\n    );\n  }\n  return null;\n};\n\nexport default ErrorCard;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport ConfigurationTable from \"../components/DeploymentDetail/ConfigurationTable\";\nimport DeploymentApisTable from \"../components/DeploymentDetail/ApisTable\";\nimport InfoTable from \"../components/DeploymentDetail/InfoTable\";\nimport DeploymentStatusTag from \"../components/DeploymentDetail/DeploymentStatusTag\";\nimport ErrorCard from \"../components/DeploymentDetail/ErrorCard\";\n\nconst DeploymentDetails = (props) => {\n  const params = props.match.params;\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetDeployment\"\n      params={{ deployment_name: params.name, namespace: params.namespace }}\n    >\n      {(data) => {\n        let detailDisplay;\n\n        if (data.data && data.data.deployment) {\n          const deployment = data.data.deployment;\n          detailDisplay = (\n            <div>\n              <h1>\n                Deployment: {deployment.name}{\" \"}\n                <DeploymentStatusTag state={deployment.state.state} />\n              </h1>\n              <ErrorCard state={deployment.state} />\n              <InfoTable deployment={deployment} />\n              <ConfigurationTable spec={deployment.spec} />\n              <DeploymentApisTable deployment={deployment} />\n            </div>\n          );\n        } else {\n          detailDisplay = <div>{JSON.stringify(data)}</div>;\n        }\n        return <div>{detailDisplay}</div>;\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentDetails;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getQueryObject } from \"../utils\";\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\nimport { Section } from \"../ui/Layout\";\n\nconst DEFAULT_BENTO_SERVICE_LIMIT_PER_PAGE = 30;\n\nconst Repository = (props) => {\n  const query = getQueryObject(props.location.search);\n  const offset = Number(query.offset) || 0;\n  return (\n    <HttpRequestContainer\n      url=\"/api/ListBento\"\n      method=\"get\"\n      params={{ limit: DEFAULT_BENTO_SERVICE_LIMIT_PER_PAGE, offset }}\n    >\n      {({ data }) => {\n        let hasBento = false;\n        let bentoDisplay;\n        if (data && data.bentos) {\n          hasBento = true;\n\n          bentoDisplay = <BentoServiceTable bentos={data.bentos} />;\n        } else {\n          bentoDisplay = <Section>No more models found</Section>;\n        }\n        return (\n          <Section>\n            {bentoDisplay}\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div>\n                {offset > 0 && (\n                  <Link to={`/repository?offset=${offset - 10}`}>Previous</Link>\n                )}\n              </div>\n              <div>\n                {hasBento && (\n                  <Link to={`/repository?offset=${offset + 10}`}>Next</Link>\n                )}\n              </div>\n            </div>\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default Repository;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\n\nconst BentoServicesList = (props) => {\n  const params = props.match.params;\n  return (\n    <div>\n      <HttpRequestContainer\n        url=\"/api/ListBento\"\n        method=\"get\"\n        params={{ bento_name: params.name }}\n      >\n        {({ data }) => {\n          if (data && data.bentos) {\n            return (\n              <div>\n                <h2>{params.name}</h2>\n                <BentoServiceTable bentos={data.bentos} />\n              </div>\n            );\n          } else {\n            return <div>{JSON.stringify(data)}</div>;\n          }\n        }}\n      </HttpRequestContainer>\n    </div>\n  );\n};\n\nexport default BentoServicesList;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst ENV_TABLE_RATIO = [1, 4];\n\nconst EnvTable: React.FC<{ env: { [key: string]: string } }> = ({ env }) => {\n  const envKeys = Object.keys(env);\n\n  const parsedEnv = envKeys.map((key) => {\n    return { content: [key, env[key]] };\n  });\n\n  return (\n    <Section>\n      <h2>Environments</h2>\n      <Table content={parsedEnv} ratio={ENV_TABLE_RATIO} />\n    </Section>\n  );\n};\n\nexport default EnvTable;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\ninterface IArtifactProps {\n  name: string;\n  artifact_type: string;\n}\n\nconst ARTIFACTS_TABLE_HEADER = [\"Name\", \"Type\"];\nconst ARTIFACTS_TABLE_RATIO = [1, 4];\n\nconst ArtifactsTable: React.FC<{ artifacts: Array<IArtifactProps> }> = ({\n  artifacts,\n}) => {\n  const artifactsTableContent = artifacts.map((artifact) => {\n    return { content: [artifact.name, artifact.artifact_type] };\n  });\n  return (\n    <Section>\n      <h2>Artifacts</h2>\n      <Table\n        content={artifactsTableContent}\n        ratio={ARTIFACTS_TABLE_RATIO}\n        header={ARTIFACTS_TABLE_HEADER}\n      />\n    </Section>\n  );\n};\n\nexport default ArtifactsTable;\n","import * as React from \"react\";\nimport * as moment from \"moment\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport EnvTable from \"../components/BentoServiceDetail/EnvTable\";\nimport ApisTable from \"../components/BentoServiceDetail/ApisTable\";\nimport ArtifactsTable from \"../components/BentoServiceDetail/ArtifactsTable\";\nimport { Section } from \"../ui/Layout\";\n\nconst BentoServiceDetail = (props) => {\n  const params = props.match.params;\n\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetBento\"\n      params={{ bento_name: params.name, bento_version: params.version }}\n    >\n      {({ data }) => {\n        let displayBentoServiceDetail;\n\n        if (data && data && data.bento) {\n          const bento = data.bento;\n\n          displayBentoServiceDetail = (\n            <div>\n              <p>\n                <b>Created at: </b>\n                {moment\n                  .unix(Number(bento.bento_service_metadata.created_at.seconds))\n                  .toDate()\n                  .toLocaleString()}\n              </p>\n              <p>\n                <b>Storage: </b> {bento.uri.uri}\n              </p>\n              <ApisTable apis={bento.bento_service_metadata.apis} />\n              <ArtifactsTable\n                artifacts={bento.bento_service_metadata.artifacts}\n              />\n              <EnvTable env={bento.bento_service_metadata.env} />\n            </div>\n          );\n        } else {\n          displayBentoServiceDetail = <div>{JSON.stringify(data)}</div>;\n        }\n\n        return (\n          <Section>\n            <h2>\n              {params.name}:{params.version}\n            </h2>\n            {displayBentoServiceDetail}\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default BentoServiceDetail;\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { capitalize } from \"lodash\";\n\nimport {\n  Breadcrumbs as BlueprintBreadcrumbs,\n  IBreadcrumbProps,\n} from \"@blueprintjs/core\";\nimport { Section } from \"../ui/Layout\";\n\nconst HOME_CRUMB: IBreadcrumbProps = {\n  text: \"Home\",\n  href: \"/\",\n};\n\nconst Breadcrumbs: React.FC = () => {\n  const [breadcrumbs, setBreadcrumbs] = React.useState<Array<IBreadcrumbProps>>(\n    []\n  );\n  const location = useLocation();\n\n  React.useEffect(() => {\n    const parsedBreadcrumbs = getBreadcrumbs(location.pathname);\n    setBreadcrumbs(parsedBreadcrumbs);\n  }, [location]);\n\n  breadcrumbs.length > 0 && breadcrumbs.unshift(HOME_CRUMB);\n  if (breadcrumbs.length === 0) {\n    return null;\n  }\n  return (\n    <Section>\n      <BlueprintBreadcrumbs items={breadcrumbs} />\n    </Section>\n  );\n};\n\nconst getBreadcrumbs = (pathname: string): Array<IBreadcrumbProps> => {\n  const pathSnippets = pathname.split(\"/\").filter((i) => i);\n\n  return pathSnippets.map((name, index) => {\n    const isLastOne = index === pathSnippets.length - 1;\n    const url = `/${pathSnippets.slice(0, index + 1).join(\"/\")}`;\n\n    let formattedName = name;\n    if ([\"repository\", \"deployments\"].includes(name)) {\n      formattedName = capitalize(name);\n    }\n    return isLastOne\n      ? { text: formattedName }\n      : { text: formattedName, href: url };\n  });\n};\n\nexport default Breadcrumbs;\n","import * as React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport {\n  Navbar,\n  NavbarGroup,\n  NavbarHeading,\n  NavbarDivider,\n  Alignment,\n  AnchorButton,\n  Classes,\n} from \"@blueprintjs/core\";\n\nimport logo from \"../assets/bentoml-logo.png\";\n\nconst NavigationBar = () => {\n  const [highlight, setHighlight] = React.useState(\"\");\n  const location = useLocation();\n\n  React.useEffect(() => {\n    const currentLocation = location.pathname.split(\"/\")[1];\n    setHighlight(currentLocation);\n  }, [location]);\n\n  return (\n    <Navbar style={{ paddingLeft: \"10%\", marginLeft: 0 }}>\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavbarHeading>\n          <Link to=\"/\">\n            <img src={logo} width={150}  alt={\"\"}/>{\" \"}\n          </Link>\n        </NavbarHeading>\n        <NavbarDivider />\n        <AnchorButton\n          className={Classes.MINIMAL}\n          large\n          text=\"Repository\"\n          href=\"/repository\"\n          style={getHighlightStyle(highlight, \"repository\")}\n        />\n        <AnchorButton\n          className={Classes.MINIMAL}\n          large\n          text=\"Deployments\"\n          href=\"/deployments\"\n          style={getHighlightStyle(highlight, \"deployments\")}\n        />\n      </NavbarGroup>\n    </Navbar>\n  );\n};\n\nconst getHighlightStyle = (highlight, path) => ({\n  fontWeight: highlight === path ? (\"bold\" as \"bold\") : (\"normal\" as \"normal\"),\n});\n\nexport default NavigationBar;\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport DeploymentsList from \"./pages/DeploymentsList\";\nimport DeploymentDetails from \"./pages/DeploymentDetails\";\nimport Repository from \"./pages/Repository\";\nimport BentoServicesList from \"./pages/BentoServiceList\";\nimport BentoServiceDetail from \"./pages/BentoServiceDetail\";\nimport Layout from \"./ui/Layout\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport NavigationBar from \"./components/NavigationBar\";\n\nexport const App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <Layout>\n      <Breadcrumbs />\n      <div>\n        <Switch>\n          <Route\n            path=\"/deployments/:namespace/:name\"\n            component={DeploymentDetails}\n          />\n          <Route path=\"/deployments/:namespace\" component={DeploymentsList} />\n          <Route path=\"/deployments\" component={DeploymentsList} />\n\n          <Route\n            path=\"/repository/:name/:version\"\n            component={BentoServiceDetail}\n          />\n          <Route path=\"/repository/:name\" component={BentoServicesList} />\n          <Route path=\"/repository\" component={Repository} />\n\n          <Route path=\"/about\" component={HomePage} />\n          <Route path=\"/config\" component={HomePage} />\n          <Route exact path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </Layout>\n  </BrowserRouter>\n);\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n\nimport { App } from \"./app\";\n\nrender(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/bentoml-logo.21d67caf.png\";"],"sourceRoot":""}