from ._4 import *

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemExtension(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ListExtensionActiveCallsResponseRecordsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ListExtensionActiveCallsResponseRecordsItemTransport(Enum):
    """ For 'Detailed' view only. Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class ListExtensionActiveCallsResponseRecordsItemLegsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Call = 'Phone Call'
    Phone_Login = 'Phone Login'
    Incoming_Fax = 'Incoming Fax'
    Accept_Call = 'Accept Call'
    External_Application = 'External Application'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    Outgoing_Fax = 'Outgoing Fax'
    CallOut_CallMe = 'CallOut-CallMe'
    Call_Return = 'Call Return'
    Calling_Card = 'Calling Card'
    Monitoring = 'Monitoring'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    Text_Relay = 'Text Relay'
    VoIP_Call = 'VoIP Call'
    RingOut_PC = 'RingOut PC'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    OBJECT_411_Info = '411 Info'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    RingOut_Mobile = 'RingOut Mobile'
    MeetingsCall = 'MeetingsCall'
    SilentMonitoring = 'SilentMonitoring'

class ListExtensionActiveCallsResponseRecordsItemLegsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemExtension(DataClassJsonMixin):
    """ Information on extension """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ListExtensionActiveCallsResponseRecordsItemLegsItemLegType(Enum):
    """ Leg type """
    
    SipForwarding = 'SipForwarding'
    ServiceMinus2 = 'ServiceMinus2'
    ServiceMinus3 = 'ServiceMinus3'
    PstnToSip = 'PstnToSip'
    Accept = 'Accept'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    TestCall = 'TestCall'
    FaxSent = 'FaxSent'
    CallBack = 'CallBack'
    CallingCard = 'CallingCard'
    RingDirectly = 'RingDirectly'
    RingOutWebToSubscriber = 'RingOutWebToSubscriber'
    RingOutWebToCaller = 'RingOutWebToCaller'
    SipToPstnMetered = 'SipToPstnMetered'
    RingOutClientToSubscriber = 'RingOutClientToSubscriber'
    RingOutClientToCaller = 'RingOutClientToCaller'
    RingMe = 'RingMe'
    TransferCall = 'TransferCall'
    SipToPstnUnmetered = 'SipToPstnUnmetered'
    RingOutDeviceToSubscriber = 'RingOutDeviceToSubscriber'
    RingOutDeviceToCaller = 'RingOutDeviceToCaller'
    RingOutOneLegToCaller = 'RingOutOneLegToCaller'
    ExtensionToExtension = 'ExtensionToExtension'
    CallPark = 'CallPark'
    PagingServer = 'PagingServer'
    Hunting = 'Hunting'
    OutgoingFreeSpDl = 'OutgoingFreeSpDl'
    ParkLocation = 'ParkLocation'
    ConferenceCall = 'ConferenceCall'
    MobileApp = 'MobileApp'
    Monitoring = 'Monitoring'
    MoveToConference = 'MoveToConference'
    Unknown = 'Unknown'

class ListExtensionActiveCallsResponseRecordsItemLegsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ListExtensionActiveCallsResponseRecordsItemLegsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ListExtensionActiveCallsResponseRecordsItemLegsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Not_Allowed = 'Not Allowed'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemToDevice] = None

class ListExtensionActiveCallsResponseRecordsItemLegsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class ListExtensionActiveCallsResponseRecordsItemLegsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if the call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemLegsItem(DataClassJsonMixin):
    action: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemAction] = None
    """ Action description of the call operation """
    
    direction: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemDirection] = None
    """ Call direction """
    
    billing: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemBilling] = None
    """ Billing information related to the call """
    
    delegate: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    extension: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemExtension] = None
    """ Information on extension """
    
    leg_type: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemLegType] = None
    """ Leg type """
    
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    type: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemType] = None
    """ Call type """
    
    result: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemReason] = None
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    """
    
    reason_description: Optional[str] = None
    from_: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemTo] = None
    """ Callee information """
    
    transport: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemTransport] = None
    """ Call transport """
    
    recording: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemRecording] = None
    """ Call recording data. Returned if the call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    master: Optional[bool] = None
    """ Returned for 'Detailed' call log. Specifies if the leg is master-leg """
    
    message: Optional[ListExtensionActiveCallsResponseRecordsItemLegsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

class ListExtensionActiveCallsResponseRecordsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

class ListExtensionActiveCallsResponseRecordsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if a call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ListExtensionActiveCallsResponseRecordsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

class ListExtensionActiveCallsResponseRecordsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Login = 'Phone Login'
    Calling_Card = 'Calling Card'
    VoIP_Call = 'VoIP Call'
    Phone_Call = 'Phone Call'
    Paging = 'Paging'
    Hunting = 'Hunting'
    Call_Park = 'Call Park'
    Monitoring = 'Monitoring'
    Text_Relay = 'Text Relay'
    External_Application = 'External Application'
    Park_Location = 'Park Location'
    CallOut_CallMe = 'CallOut-CallMe'
    Conference_Call = 'Conference Call'
    Move = 'Move'
    RC_Meetings = 'RC Meetings'
    Accept_Call = 'Accept Call'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    Call_Return = 'Call Return'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    RingOut_PC = 'RingOut PC'
    RingOut_Mobile = 'RingOut Mobile'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    Incoming_Fax = 'Incoming Fax'
    Outgoing_Fax = 'Outgoing Fax'

class ListExtensionActiveCallsResponseRecordsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ListExtensionActiveCallsResponseRecordsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a cal log record """
    
    uri: Optional[str] = None
    """ Canonical URI of a call log record """
    
    session_id: Optional[str] = None
    """ Internal identifier of a call session """
    
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    
    from_: Optional[ListExtensionActiveCallsResponseRecordsItemFrom] = field(metadata=config(field_name='from'), default=None)
    to: Optional[ListExtensionActiveCallsResponseRecordsItemTo] = None
    extension: Optional[ListExtensionActiveCallsResponseRecordsItemExtension] = None
    type: Optional[ListExtensionActiveCallsResponseRecordsItemType] = None
    """ Call type """
    
    transport: Optional[ListExtensionActiveCallsResponseRecordsItemTransport] = None
    """ For 'Detailed' view only. Call transport """
    
    legs: Optional[List[ListExtensionActiveCallsResponseRecordsItemLegsItem]] = None
    """ For 'Detailed' view only. Leg description """
    
    billing: Optional[ListExtensionActiveCallsResponseRecordsItemBilling] = None
    """ Billing information related to the call """
    
    direction: Optional[ListExtensionActiveCallsResponseRecordsItemDirection] = None
    """ Call direction """
    
    message: Optional[ListExtensionActiveCallsResponseRecordsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    start_time: Optional[str] = None
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    delegate: Optional[ListExtensionActiveCallsResponseRecordsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    deleted: Optional[bool] = None
    """ Indicates whether the record is deleted. Returned for deleted records, for ISync requests """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    last_modified_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    For 'Detailed' view only. The datetime when the call log record was modified in (ISO
    8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example
    2016-03-10T18:07:52.534Z
    """
    
    recording: Optional[ListExtensionActiveCallsResponseRecordsItemRecording] = None
    """ Call recording data. Returned if a call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    action: Optional[ListExtensionActiveCallsResponseRecordsItemAction] = None
    """ Action description of the call operation """
    
    result: Optional[ListExtensionActiveCallsResponseRecordsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ListExtensionActiveCallsResponseRecordsItemReason] = None
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    """
    
    reason_description: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListExtensionActiveCallsResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListExtensionActiveCallsResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListExtensionActiveCallsResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListExtensionActiveCallsResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = 100
    """
    Current page size, describes how many items are in each page. Maximum value is 1000. If perPage
    value in the request is greater than 1000, the maximum value (1000) is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionActiveCallsResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
    
    Generated by Python OpenAPI Parser
    """
    
    records: List[ListExtensionActiveCallsResponseRecordsItem]
    """ List of call log records """
    
    navigation: ListExtensionActiveCallsResponseNavigation
    """ Information on navigation """
    
    paging: ListExtensionActiveCallsResponsePaging
    """ Information on paging """
    
    uri: Optional[str] = None
    """ Link to the list of user active call records """
    

class ReadCompanyCallLogDirectionItem(Enum):
    Inbound = 'Inbound'
    Outbound = 'Outbound'

class ReadCompanyCallLogTypeItem(Enum):
    Voice = 'Voice'
    Fax = 'Fax'

class ReadCompanyCallLogView(Enum):
    Simple = 'Simple'
    Detailed = 'Detailed'

class ReadCompanyCallLogRecordingType(Enum):
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'
    All = 'All'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemExtension(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ReadCompanyCallLogResponseRecordsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallLogResponseRecordsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallLogResponseRecordsItemToDevice] = None

class ReadCompanyCallLogResponseRecordsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ReadCompanyCallLogResponseRecordsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

class ReadCompanyCallLogResponseRecordsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Login = 'Phone Login'
    Calling_Card = 'Calling Card'
    VoIP_Call = 'VoIP Call'
    Phone_Call = 'Phone Call'
    Paging = 'Paging'
    Hunting = 'Hunting'
    Call_Park = 'Call Park'
    Monitoring = 'Monitoring'
    Text_Relay = 'Text Relay'
    External_Application = 'External Application'
    Park_Location = 'Park Location'
    CallOut_CallMe = 'CallOut-CallMe'
    Conference_Call = 'Conference Call'
    Move = 'Move'
    RC_Meetings = 'RC Meetings'
    Accept_Call = 'Accept Call'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    Call_Return = 'Call Return'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    RingOut_PC = 'RingOut PC'
    RingOut_Mobile = 'RingOut Mobile'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    Incoming_Fax = 'Incoming Fax'
    Outgoing_Fax = 'Outgoing Fax'

class ReadCompanyCallLogResponseRecordsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ReadCompanyCallLogResponseRecordsItemReason(Enum):
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

class ReadCompanyCallLogResponseRecordsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if a call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ReadCompanyCallLogResponseRecordsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

class ReadCompanyCallLogResponseRecordsItemLegsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Call = 'Phone Call'
    Phone_Login = 'Phone Login'
    Incoming_Fax = 'Incoming Fax'
    Accept_Call = 'Accept Call'
    External_Application = 'External Application'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    Outgoing_Fax = 'Outgoing Fax'
    CallOut_CallMe = 'CallOut-CallMe'
    Call_Return = 'Call Return'
    Calling_Card = 'Calling Card'
    Monitoring = 'Monitoring'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    Text_Relay = 'Text Relay'
    VoIP_Call = 'VoIP Call'
    RingOut_PC = 'RingOut PC'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    OBJECT_411_Info = '411 Info'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    RingOut_Mobile = 'RingOut Mobile'
    MeetingsCall = 'MeetingsCall'
    SilentMonitoring = 'SilentMonitoring'

class ReadCompanyCallLogResponseRecordsItemLegsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemExtension(DataClassJsonMixin):
    """ Information on extension """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ReadCompanyCallLogResponseRecordsItemLegsItemLegType(Enum):
    """ Leg type """
    
    SipForwarding = 'SipForwarding'
    ServiceMinus2 = 'ServiceMinus2'
    ServiceMinus3 = 'ServiceMinus3'
    PstnToSip = 'PstnToSip'
    Accept = 'Accept'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    TestCall = 'TestCall'
    FaxSent = 'FaxSent'
    CallBack = 'CallBack'
    CallingCard = 'CallingCard'
    RingDirectly = 'RingDirectly'
    RingOutWebToSubscriber = 'RingOutWebToSubscriber'
    RingOutWebToCaller = 'RingOutWebToCaller'
    SipToPstnMetered = 'SipToPstnMetered'
    RingOutClientToSubscriber = 'RingOutClientToSubscriber'
    RingOutClientToCaller = 'RingOutClientToCaller'
    RingMe = 'RingMe'
    TransferCall = 'TransferCall'
    SipToPstnUnmetered = 'SipToPstnUnmetered'
    RingOutDeviceToSubscriber = 'RingOutDeviceToSubscriber'
    RingOutDeviceToCaller = 'RingOutDeviceToCaller'
    RingOutOneLegToCaller = 'RingOutOneLegToCaller'
    ExtensionToExtension = 'ExtensionToExtension'
    CallPark = 'CallPark'
    PagingServer = 'PagingServer'
    Hunting = 'Hunting'
    OutgoingFreeSpDl = 'OutgoingFreeSpDl'
    ParkLocation = 'ParkLocation'
    ConferenceCall = 'ConferenceCall'
    MobileApp = 'MobileApp'
    Monitoring = 'Monitoring'
    MoveToConference = 'MoveToConference'
    Unknown = 'Unknown'

class ReadCompanyCallLogResponseRecordsItemLegsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ReadCompanyCallLogResponseRecordsItemLegsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ReadCompanyCallLogResponseRecordsItemLegsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Not_Allowed = 'Not Allowed'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemToDevice] = None

class ReadCompanyCallLogResponseRecordsItemLegsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class ReadCompanyCallLogResponseRecordsItemLegsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if the call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemLegsItem(DataClassJsonMixin):
    action: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemAction] = None
    """ Action description of the call operation """
    
    direction: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemDirection] = None
    """ Call direction """
    
    billing: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemBilling] = None
    """ Billing information related to the call """
    
    delegate: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    extension: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemExtension] = None
    """ Information on extension """
    
    leg_type: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemLegType] = None
    """ Leg type """
    
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    type: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemType] = None
    """ Call type """
    
    result: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemReason] = None
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    """
    
    reason_description: Optional[str] = None
    from_: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemTo] = None
    """ Callee information """
    
    transport: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemTransport] = None
    """ Call transport """
    
    recording: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemRecording] = None
    """ Call recording data. Returned if the call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    master: Optional[bool] = None
    """ Returned for 'Detailed' call log. Specifies if the leg is master-leg """
    
    message: Optional[ReadCompanyCallLogResponseRecordsItemLegsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a cal log record """
    
    uri: Optional[str] = None
    """ Canonical URI of a call log record """
    
    session_id: Optional[str] = None
    """ Internal identifier of a call session """
    
    extension: Optional[ReadCompanyCallLogResponseRecordsItemExtension] = None
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    
    transport: Optional[ReadCompanyCallLogResponseRecordsItemTransport] = None
    """ Call transport """
    
    from_: Optional[ReadCompanyCallLogResponseRecordsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[ReadCompanyCallLogResponseRecordsItemTo] = None
    """ Callee information """
    
    type: Optional[ReadCompanyCallLogResponseRecordsItemType] = None
    """ Call type """
    
    direction: Optional[ReadCompanyCallLogResponseRecordsItemDirection] = None
    """ Call direction """
    
    message: Optional[ReadCompanyCallLogResponseRecordsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    delegate: Optional[ReadCompanyCallLogResponseRecordsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    deleted: Optional[bool] = None
    """ Indicates whether the record is deleted. Returned for deleted records, for ISync requests """
    
    action: Optional[ReadCompanyCallLogResponseRecordsItemAction] = None
    """ Action description of the call operation """
    
    result: Optional[ReadCompanyCallLogResponseRecordsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ReadCompanyCallLogResponseRecordsItemReason] = None
    reason_description: Optional[str] = None
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    recording: Optional[ReadCompanyCallLogResponseRecordsItemRecording] = None
    """ Call recording data. Returned if a call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    legs: Optional[List[ReadCompanyCallLogResponseRecordsItemLegsItem]] = None
    """ For 'Detailed' view only. Leg description """
    
    billing: Optional[ReadCompanyCallLogResponseRecordsItemBilling] = None
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    last_modified_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    For 'Detailed' view only. The datetime when the call log record was modified in (ISO
    8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example
    2016-03-10T18:07:52.534Z
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ReadCompanyCallLogResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ReadCompanyCallLogResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ReadCompanyCallLogResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ReadCompanyCallLogResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = 100
    """
    Current page size, describes how many items are in each page. Maximum value is 1000. If perPage
    value in the request is greater than 1000, the maximum value (1000) is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallLogResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the list of company call log records """
    
    records: Optional[List[ReadCompanyCallLogResponseRecordsItem]] = None
    """ List of call log records """
    
    navigation: Optional[ReadCompanyCallLogResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ReadCompanyCallLogResponsePaging] = None
    """ Information on paging """
    

class SyncAccountCallLogSyncType(Enum):
    FSync = 'FSync'
    ISync = 'ISync'

class SyncAccountCallLogStatusGroup(Enum):
    Missed = 'Missed'
    All = 'All'

class SyncAccountCallLogView(Enum):
    Simple = 'Simple'
    Detailed = 'Detailed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemExtension(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class SyncAccountCallLogResponseRecordsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[SyncAccountCallLogResponseRecordsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[SyncAccountCallLogResponseRecordsItemToDevice] = None

class SyncAccountCallLogResponseRecordsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class SyncAccountCallLogResponseRecordsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

class SyncAccountCallLogResponseRecordsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Login = 'Phone Login'
    Calling_Card = 'Calling Card'
    VoIP_Call = 'VoIP Call'
    Phone_Call = 'Phone Call'
    Paging = 'Paging'
    Hunting = 'Hunting'
    Call_Park = 'Call Park'
    Monitoring = 'Monitoring'
    Text_Relay = 'Text Relay'
    External_Application = 'External Application'
    Park_Location = 'Park Location'
    CallOut_CallMe = 'CallOut-CallMe'
    Conference_Call = 'Conference Call'
    Move = 'Move'
    RC_Meetings = 'RC Meetings'
    Accept_Call = 'Accept Call'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    Call_Return = 'Call Return'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    RingOut_PC = 'RingOut PC'
    RingOut_Mobile = 'RingOut Mobile'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    Incoming_Fax = 'Incoming Fax'
    Outgoing_Fax = 'Outgoing Fax'

class SyncAccountCallLogResponseRecordsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class SyncAccountCallLogResponseRecordsItemReason(Enum):
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

class SyncAccountCallLogResponseRecordsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if a call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[SyncAccountCallLogResponseRecordsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

class SyncAccountCallLogResponseRecordsItemLegsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Call = 'Phone Call'
    Phone_Login = 'Phone Login'
    Incoming_Fax = 'Incoming Fax'
    Accept_Call = 'Accept Call'
    External_Application = 'External Application'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    Outgoing_Fax = 'Outgoing Fax'
    CallOut_CallMe = 'CallOut-CallMe'
    Call_Return = 'Call Return'
    Calling_Card = 'Calling Card'
    Monitoring = 'Monitoring'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    Text_Relay = 'Text Relay'
    VoIP_Call = 'VoIP Call'
    RingOut_PC = 'RingOut PC'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    OBJECT_411_Info = '411 Info'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    RingOut_Mobile = 'RingOut Mobile'
    MeetingsCall = 'MeetingsCall'
    SilentMonitoring = 'SilentMonitoring'

class SyncAccountCallLogResponseRecordsItemLegsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemExtension(DataClassJsonMixin):
    """ Information on extension """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class SyncAccountCallLogResponseRecordsItemLegsItemLegType(Enum):
    """ Leg type """
    
    SipForwarding = 'SipForwarding'
    ServiceMinus2 = 'ServiceMinus2'
    ServiceMinus3 = 'ServiceMinus3'
    PstnToSip = 'PstnToSip'
    Accept = 'Accept'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    TestCall = 'TestCall'
    FaxSent = 'FaxSent'
    CallBack = 'CallBack'
    CallingCard = 'CallingCard'
    RingDirectly = 'RingDirectly'
    RingOutWebToSubscriber = 'RingOutWebToSubscriber'
    RingOutWebToCaller = 'RingOutWebToCaller'
    SipToPstnMetered = 'SipToPstnMetered'
    RingOutClientToSubscriber = 'RingOutClientToSubscriber'
    RingOutClientToCaller = 'RingOutClientToCaller'
    RingMe = 'RingMe'
    TransferCall = 'TransferCall'
    SipToPstnUnmetered = 'SipToPstnUnmetered'
    RingOutDeviceToSubscriber = 'RingOutDeviceToSubscriber'
    RingOutDeviceToCaller = 'RingOutDeviceToCaller'
    RingOutOneLegToCaller = 'RingOutOneLegToCaller'
    ExtensionToExtension = 'ExtensionToExtension'
    CallPark = 'CallPark'
    PagingServer = 'PagingServer'
    Hunting = 'Hunting'
    OutgoingFreeSpDl = 'OutgoingFreeSpDl'
    ParkLocation = 'ParkLocation'
    ConferenceCall = 'ConferenceCall'
    MobileApp = 'MobileApp'
    Monitoring = 'Monitoring'
    MoveToConference = 'MoveToConference'
    Unknown = 'Unknown'

class SyncAccountCallLogResponseRecordsItemLegsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class SyncAccountCallLogResponseRecordsItemLegsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class SyncAccountCallLogResponseRecordsItemLegsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Not_Allowed = 'Not Allowed'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[SyncAccountCallLogResponseRecordsItemLegsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[SyncAccountCallLogResponseRecordsItemLegsItemToDevice] = None

class SyncAccountCallLogResponseRecordsItemLegsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class SyncAccountCallLogResponseRecordsItemLegsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if the call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[SyncAccountCallLogResponseRecordsItemLegsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemLegsItem(DataClassJsonMixin):
    action: Optional[SyncAccountCallLogResponseRecordsItemLegsItemAction] = None
    """ Action description of the call operation """
    
    direction: Optional[SyncAccountCallLogResponseRecordsItemLegsItemDirection] = None
    """ Call direction """
    
    billing: Optional[SyncAccountCallLogResponseRecordsItemLegsItemBilling] = None
    """ Billing information related to the call """
    
    delegate: Optional[SyncAccountCallLogResponseRecordsItemLegsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    extension: Optional[SyncAccountCallLogResponseRecordsItemLegsItemExtension] = None
    """ Information on extension """
    
    leg_type: Optional[SyncAccountCallLogResponseRecordsItemLegsItemLegType] = None
    """ Leg type """
    
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    type: Optional[SyncAccountCallLogResponseRecordsItemLegsItemType] = None
    """ Call type """
    
    result: Optional[SyncAccountCallLogResponseRecordsItemLegsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[SyncAccountCallLogResponseRecordsItemLegsItemReason] = None
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    """
    
    reason_description: Optional[str] = None
    from_: Optional[SyncAccountCallLogResponseRecordsItemLegsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[SyncAccountCallLogResponseRecordsItemLegsItemTo] = None
    """ Callee information """
    
    transport: Optional[SyncAccountCallLogResponseRecordsItemLegsItemTransport] = None
    """ Call transport """
    
    recording: Optional[SyncAccountCallLogResponseRecordsItemLegsItemRecording] = None
    """ Call recording data. Returned if the call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    master: Optional[bool] = None
    """ Returned for 'Detailed' call log. Specifies if the leg is master-leg """
    
    message: Optional[SyncAccountCallLogResponseRecordsItemLegsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a cal log record """
    
    uri: Optional[str] = None
    """ Canonical URI of a call log record """
    
    session_id: Optional[str] = None
    """ Internal identifier of a call session """
    
    extension: Optional[SyncAccountCallLogResponseRecordsItemExtension] = None
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    
    transport: Optional[SyncAccountCallLogResponseRecordsItemTransport] = None
    """ Call transport """
    
    from_: Optional[SyncAccountCallLogResponseRecordsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[SyncAccountCallLogResponseRecordsItemTo] = None
    """ Callee information """
    
    type: Optional[SyncAccountCallLogResponseRecordsItemType] = None
    """ Call type """
    
    direction: Optional[SyncAccountCallLogResponseRecordsItemDirection] = None
    """ Call direction """
    
    message: Optional[SyncAccountCallLogResponseRecordsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    delegate: Optional[SyncAccountCallLogResponseRecordsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    deleted: Optional[bool] = None
    """ Indicates whether the record is deleted. Returned for deleted records, for ISync requests """
    
    action: Optional[SyncAccountCallLogResponseRecordsItemAction] = None
    """ Action description of the call operation """
    
    result: Optional[SyncAccountCallLogResponseRecordsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[SyncAccountCallLogResponseRecordsItemReason] = None
    reason_description: Optional[str] = None
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    recording: Optional[SyncAccountCallLogResponseRecordsItemRecording] = None
    """ Call recording data. Returned if a call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    legs: Optional[List[SyncAccountCallLogResponseRecordsItemLegsItem]] = None
    """ For 'Detailed' view only. Leg description """
    
    billing: Optional[SyncAccountCallLogResponseRecordsItemBilling] = None
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    last_modified_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    For 'Detailed' view only. The datetime when the call log record was modified in (ISO
    8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example
    2016-03-10T18:07:52.534Z
    """
    

class SyncAccountCallLogResponseSyncInfoSyncType(Enum):
    """ Type of synchronization """
    
    FSync = 'FSync'
    ISync = 'ISync'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponseSyncInfo(DataClassJsonMixin):
    """ Sync information (type, token and time) """
    
    sync_type: Optional[SyncAccountCallLogResponseSyncInfoSyncType] = None
    """ Type of synchronization """
    
    sync_token: Optional[str] = None
    """ Synchronization token """
    
    sync_time: Optional[str] = None
    """
    Time of last synchronization in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format
    including timezone, for example *2016-03-10T18:07:52.534Z*
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SyncAccountCallLogResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to account call log sync resource """
    
    records: Optional[List[SyncAccountCallLogResponseRecordsItem]] = None
    """
    List of call log records with synchronization information. For 'ISync' the total number of
    returned records is limited to 250; this includes both new records and the old ones, specified
    by the recordCount parameter
    """
    
    sync_info: Optional[SyncAccountCallLogResponseSyncInfo] = None
    """ Sync information (type, token and time) """
    

class ReadCompanyCallRecordView(Enum):
    Simple = 'Simple'
    Detailed = 'Detailed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseExtension(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ReadCompanyCallRecordResponseTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallRecordResponseFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallRecordResponseToDevice] = None

class ReadCompanyCallRecordResponseType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ReadCompanyCallRecordResponseDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

class ReadCompanyCallRecordResponseAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Login = 'Phone Login'
    Calling_Card = 'Calling Card'
    VoIP_Call = 'VoIP Call'
    Phone_Call = 'Phone Call'
    Paging = 'Paging'
    Hunting = 'Hunting'
    Call_Park = 'Call Park'
    Monitoring = 'Monitoring'
    Text_Relay = 'Text Relay'
    External_Application = 'External Application'
    Park_Location = 'Park Location'
    CallOut_CallMe = 'CallOut-CallMe'
    Conference_Call = 'Conference Call'
    Move = 'Move'
    RC_Meetings = 'RC Meetings'
    Accept_Call = 'Accept Call'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    Call_Return = 'Call Return'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    RingOut_PC = 'RingOut PC'
    RingOut_Mobile = 'RingOut Mobile'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    Incoming_Fax = 'Incoming Fax'
    Outgoing_Fax = 'Outgoing Fax'

class ReadCompanyCallRecordResponseResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ReadCompanyCallRecordResponseReason(Enum):
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

class ReadCompanyCallRecordResponseRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseRecording(DataClassJsonMixin):
    """ Call recording data. Returned if a call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ReadCompanyCallRecordResponseRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

class ReadCompanyCallRecordResponseLegsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Call = 'Phone Call'
    Phone_Login = 'Phone Login'
    Incoming_Fax = 'Incoming Fax'
    Accept_Call = 'Accept Call'
    External_Application = 'External Application'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    Outgoing_Fax = 'Outgoing Fax'
    CallOut_CallMe = 'CallOut-CallMe'
    Call_Return = 'Call Return'
    Calling_Card = 'Calling Card'
    Monitoring = 'Monitoring'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    Text_Relay = 'Text Relay'
    VoIP_Call = 'VoIP Call'
    RingOut_PC = 'RingOut PC'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    OBJECT_411_Info = '411 Info'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    RingOut_Mobile = 'RingOut Mobile'
    MeetingsCall = 'MeetingsCall'
    SilentMonitoring = 'SilentMonitoring'

class ReadCompanyCallRecordResponseLegsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemExtension(DataClassJsonMixin):
    """ Information on extension """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ReadCompanyCallRecordResponseLegsItemLegType(Enum):
    """ Leg type """
    
    SipForwarding = 'SipForwarding'
    ServiceMinus2 = 'ServiceMinus2'
    ServiceMinus3 = 'ServiceMinus3'
    PstnToSip = 'PstnToSip'
    Accept = 'Accept'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    TestCall = 'TestCall'
    FaxSent = 'FaxSent'
    CallBack = 'CallBack'
    CallingCard = 'CallingCard'
    RingDirectly = 'RingDirectly'
    RingOutWebToSubscriber = 'RingOutWebToSubscriber'
    RingOutWebToCaller = 'RingOutWebToCaller'
    SipToPstnMetered = 'SipToPstnMetered'
    RingOutClientToSubscriber = 'RingOutClientToSubscriber'
    RingOutClientToCaller = 'RingOutClientToCaller'
    RingMe = 'RingMe'
    TransferCall = 'TransferCall'
    SipToPstnUnmetered = 'SipToPstnUnmetered'
    RingOutDeviceToSubscriber = 'RingOutDeviceToSubscriber'
    RingOutDeviceToCaller = 'RingOutDeviceToCaller'
    RingOutOneLegToCaller = 'RingOutOneLegToCaller'
    ExtensionToExtension = 'ExtensionToExtension'
    CallPark = 'CallPark'
    PagingServer = 'PagingServer'
    Hunting = 'Hunting'
    OutgoingFreeSpDl = 'OutgoingFreeSpDl'
    ParkLocation = 'ParkLocation'
    ConferenceCall = 'ConferenceCall'
    MobileApp = 'MobileApp'
    Monitoring = 'Monitoring'
    MoveToConference = 'MoveToConference'
    Unknown = 'Unknown'

class ReadCompanyCallRecordResponseLegsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ReadCompanyCallRecordResponseLegsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ReadCompanyCallRecordResponseLegsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Not_Allowed = 'Not Allowed'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallRecordResponseLegsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ReadCompanyCallRecordResponseLegsItemToDevice] = None

class ReadCompanyCallRecordResponseLegsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class ReadCompanyCallRecordResponseLegsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if the call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ReadCompanyCallRecordResponseLegsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseLegsItem(DataClassJsonMixin):
    action: Optional[ReadCompanyCallRecordResponseLegsItemAction] = None
    """ Action description of the call operation """
    
    direction: Optional[ReadCompanyCallRecordResponseLegsItemDirection] = None
    """ Call direction """
    
    billing: Optional[ReadCompanyCallRecordResponseLegsItemBilling] = None
    """ Billing information related to the call """
    
    delegate: Optional[ReadCompanyCallRecordResponseLegsItemDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    extension: Optional[ReadCompanyCallRecordResponseLegsItemExtension] = None
    """ Information on extension """
    
    leg_type: Optional[ReadCompanyCallRecordResponseLegsItemLegType] = None
    """ Leg type """
    
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    type: Optional[ReadCompanyCallRecordResponseLegsItemType] = None
    """ Call type """
    
    result: Optional[ReadCompanyCallRecordResponseLegsItemResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ReadCompanyCallRecordResponseLegsItemReason] = None
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    """
    
    reason_description: Optional[str] = None
    from_: Optional[ReadCompanyCallRecordResponseLegsItemFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[ReadCompanyCallRecordResponseLegsItemTo] = None
    """ Callee information """
    
    transport: Optional[ReadCompanyCallRecordResponseLegsItemTransport] = None
    """ Call transport """
    
    recording: Optional[ReadCompanyCallRecordResponseLegsItemRecording] = None
    """ Call recording data. Returned if the call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    master: Optional[bool] = None
    """ Returned for 'Detailed' call log. Specifies if the leg is master-leg """
    
    message: Optional[ReadCompanyCallRecordResponseLegsItemMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponseBilling(DataClassJsonMixin):
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCompanyCallRecordResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a cal log record """
    
    uri: Optional[str] = None
    """ Canonical URI of a call log record """
    
    session_id: Optional[str] = None
    """ Internal identifier of a call session """
    
    extension: Optional[ReadCompanyCallRecordResponseExtension] = None
    telephony_session_id: Optional[str] = None
    """ Telephony identifier of a call session """
    
    transport: Optional[ReadCompanyCallRecordResponseTransport] = None
    """ Call transport """
    
    from_: Optional[ReadCompanyCallRecordResponseFrom] = field(metadata=config(field_name='from'), default=None)
    """ Caller information """
    
    to: Optional[ReadCompanyCallRecordResponseTo] = None
    """ Callee information """
    
    type: Optional[ReadCompanyCallRecordResponseType] = None
    """ Call type """
    
    direction: Optional[ReadCompanyCallRecordResponseDirection] = None
    """ Call direction """
    
    message: Optional[ReadCompanyCallRecordResponseMessage] = None
    """ Linked message (Fax/Voicemail) """
    
    delegate: Optional[ReadCompanyCallRecordResponseDelegate] = None
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    """
    
    deleted: Optional[bool] = None
    """ Indicates whether the record is deleted. Returned for deleted records, for ISync requests """
    
    action: Optional[ReadCompanyCallRecordResponseAction] = None
    """ Action description of the call operation """
    
    result: Optional[ReadCompanyCallRecordResponseResult] = None
    """ Status description of the call operation """
    
    reason: Optional[ReadCompanyCallRecordResponseReason] = None
    reason_description: Optional[str] = None
    start_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including
    timezone, for example 2016-03-10T18:07:52.534Z
    """
    
    duration: Optional[int] = None
    """ Call duration in seconds """
    
    recording: Optional[ReadCompanyCallRecordResponseRecording] = None
    """ Call recording data. Returned if a call is recorded """
    
    short_recording: Optional[bool] = None
    """
    Indicates that the recording is too short and therefore wouldn't be returned. The flag is not
    returned if the value is false
    """
    
    legs: Optional[List[ReadCompanyCallRecordResponseLegsItem]] = None
    """ For 'Detailed' view only. Leg description """
    
    billing: Optional[ReadCompanyCallRecordResponseBilling] = None
    """ Billing information related to the call. Returned for 'Detailed' view only """
    
    last_modified_time: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    """
    For 'Detailed' view only. The datetime when the call log record was modified in (ISO
    8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example
    2016-03-10T18:07:52.534Z
    """
    

class ListCompanyActiveCallsDirectionItem(Enum):
    Inbound = 'Inbound'
    Outbound = 'Outbound'

class ListCompanyActiveCallsView(Enum):
    Simple = 'Simple'
    Detailed = 'Detailed'

class ListCompanyActiveCallsTypeItem(Enum):
    Voice = 'Voice'
    Fax = 'Fax'

class ListCompanyActiveCallsTransportItem(Enum):
    PSTN = 'PSTN'
    VoIP = 'VoIP'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemExtension(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ListCompanyActiveCallsResponseRecordsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListCompanyActiveCallsResponseRecordsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListCompanyActiveCallsResponseRecordsItemToDevice] = None

class ListCompanyActiveCallsResponseRecordsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ListCompanyActiveCallsResponseRecordsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemMessage(DataClassJsonMixin):
    """ Linked message (Fax/Voicemail) """
    
    id: Optional[str] = None
    """ Internal identifier of a message """
    
    type: Optional[str] = None
    """ Type of a message """
    
    uri: Optional[str] = None
    """ Link to a message resource """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

class ListCompanyActiveCallsResponseRecordsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Login = 'Phone Login'
    Calling_Card = 'Calling Card'
    VoIP_Call = 'VoIP Call'
    Phone_Call = 'Phone Call'
    Paging = 'Paging'
    Hunting = 'Hunting'
    Call_Park = 'Call Park'
    Monitoring = 'Monitoring'
    Text_Relay = 'Text Relay'
    External_Application = 'External Application'
    Park_Location = 'Park Location'
    CallOut_CallMe = 'CallOut-CallMe'
    Conference_Call = 'Conference Call'
    Move = 'Move'
    RC_Meetings = 'RC Meetings'
    Accept_Call = 'Accept Call'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    Call_Return = 'Call Return'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    RingOut_PC = 'RingOut PC'
    RingOut_Mobile = 'RingOut Mobile'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    Incoming_Fax = 'Incoming Fax'
    Outgoing_Fax = 'Outgoing Fax'

class ListCompanyActiveCallsResponseRecordsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ListCompanyActiveCallsResponseRecordsItemReason(Enum):
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

class ListCompanyActiveCallsResponseRecordsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if a call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ListCompanyActiveCallsResponseRecordsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    

class ListCompanyActiveCallsResponseRecordsItemLegsItemAction(Enum):
    """ Action description of the call operation """
    
    Unknown = 'Unknown'
    Phone_Call = 'Phone Call'
    Phone_Login = 'Phone Login'
    Incoming_Fax = 'Incoming Fax'
    Accept_Call = 'Accept Call'
    External_Application = 'External Application'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    Outgoing_Fax = 'Outgoing Fax'
    CallOut_CallMe = 'CallOut-CallMe'
    Call_Return = 'Call Return'
    Calling_Card = 'Calling Card'
    Monitoring = 'Monitoring'
    Ring_Directly = 'Ring Directly'
    RingOut_Web = 'RingOut Web'
    Text_Relay = 'Text Relay'
    VoIP_Call = 'VoIP Call'
    RingOut_PC = 'RingOut PC'
    RingMe = 'RingMe'
    Transfer = 'Transfer'
    OBJECT_411_Info = '411 Info'
    Emergency = 'Emergency'
    E911_Update = 'E911 Update'
    Support = 'Support'
    RingOut_Mobile = 'RingOut Mobile'
    MeetingsCall = 'MeetingsCall'
    SilentMonitoring = 'SilentMonitoring'

class ListCompanyActiveCallsResponseRecordsItemLegsItemDirection(Enum):
    """ Call direction """
    
    Inbound = 'Inbound'
    Outbound = 'Outbound'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemBilling(DataClassJsonMixin):
    """ Billing information related to the call """
    
    cost_included: Optional[float] = None
    """
    Cost per minute, paid and already included in your RingCentral Plan. For example International
    Calls
    """
    
    cost_purchased: Optional[float] = None
    """ Cost per minute, paid and not included in your RingCentral Plan """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemDelegate(DataClassJsonMixin):
    """
    Information on a delegate extension that actually implemented a call action. For Secretary call
    log the field is returned if the current extension implemented a call. For Boss call log the
    field contains information on a Secretary extension which actually implemented a call on behalf
    of the current extension
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a Secretary extension """
    
    name: Optional[str] = None
    """ Custom name of a Secretary extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemExtension(DataClassJsonMixin):
    """ Information on extension """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    

class ListCompanyActiveCallsResponseRecordsItemLegsItemLegType(Enum):
    """ Leg type """
    
    SipForwarding = 'SipForwarding'
    ServiceMinus2 = 'ServiceMinus2'
    ServiceMinus3 = 'ServiceMinus3'
    PstnToSip = 'PstnToSip'
    Accept = 'Accept'
    FindMe = 'FindMe'
    FollowMe = 'FollowMe'
    TestCall = 'TestCall'
    FaxSent = 'FaxSent'
    CallBack = 'CallBack'
    CallingCard = 'CallingCard'
    RingDirectly = 'RingDirectly'
    RingOutWebToSubscriber = 'RingOutWebToSubscriber'
    RingOutWebToCaller = 'RingOutWebToCaller'
    SipToPstnMetered = 'SipToPstnMetered'
    RingOutClientToSubscriber = 'RingOutClientToSubscriber'
    RingOutClientToCaller = 'RingOutClientToCaller'
    RingMe = 'RingMe'
    TransferCall = 'TransferCall'
    SipToPstnUnmetered = 'SipToPstnUnmetered'
    RingOutDeviceToSubscriber = 'RingOutDeviceToSubscriber'
    RingOutDeviceToCaller = 'RingOutDeviceToCaller'
    RingOutOneLegToCaller = 'RingOutOneLegToCaller'
    ExtensionToExtension = 'ExtensionToExtension'
    CallPark = 'CallPark'
    PagingServer = 'PagingServer'
    Hunting = 'Hunting'
    OutgoingFreeSpDl = 'OutgoingFreeSpDl'
    ParkLocation = 'ParkLocation'
    ConferenceCall = 'ConferenceCall'
    MobileApp = 'MobileApp'
    Monitoring = 'Monitoring'
    MoveToConference = 'MoveToConference'
    Unknown = 'Unknown'

class ListCompanyActiveCallsResponseRecordsItemLegsItemType(Enum):
    """ Call type """
    
    Voice = 'Voice'
    Fax = 'Fax'

class ListCompanyActiveCallsResponseRecordsItemLegsItemResult(Enum):
    """ Status description of the call operation """
    
    Unknown = 'Unknown'
    Accepted = 'Accepted'
    CallConnected = 'Call connected'
    In_Progress = 'In Progress'
    Voicemail = 'Voicemail'
    Reply = 'Reply'
    Missed = 'Missed'
    Busy = 'Busy'
    Rejected = 'Rejected'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Blocked = 'Blocked'
    SuspendedAccount = 'Suspended account'
    Call_Failed = 'Call Failed'
    Call_Failure = 'Call Failure'
    Internal_Error = 'Internal Error'
    IP_Phone_Offline = 'IP Phone Offline'
    No_Calling_Credit = 'No Calling Credit'
    Not_Allowed = 'Not Allowed'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    Answered_Not_Accepted = 'Answered Not Accepted'
    Stopped = 'Stopped'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Abandoned = 'Abandoned'
    Declined = 'Declined'
    Received = 'Received'
    FaxOn_Demand = 'Fax on Demand'
    Partial_Receive = 'Partial Receive'
    Receive_Error = 'Receive Error'
    Fax_Receipt_Error = 'Fax Receipt Error'
    Sent = 'Sent'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Send_Error = 'Send Error'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'

class ListCompanyActiveCallsResponseRecordsItemLegsItemReason(Enum):
    """
    Reason of a call result:
    
    * `Accepted` - The call was connected to and accepted by this number
    
    * `Connected` - The call was answered, but there was no response on how to handle the call (for
    example, a voice mail system answered the call and did not push "1" to accept)
    
    * `Line Busy` - The phone number you dialed was busy
    
    * `Not Answered` - The phone number you dialed was not answered
    
    * `No Answer` - You did not answer the call
    
    * `Hang Up` - The caller hung up before the call was answered
    
    * `Stopped` - This attempt was stopped because the call was answered by another phone
    
    * `Internal Error` - An internal error occurred when making the call. Please try again
    
    * `No Credit` - There was not enough Calling Credit on your account to make this call
    
    * `Restricted Number` - The number you dialed is restricted by RingCentral
    
    * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone
    number. Please check the number and try again
    
    * `International Disabled` - International calling is not enabled on your account. Contact
    customer service to activate International Calling
    
    * `International Restricted` - The country and/or area you attempted to call has been
    prohibited by your administrator
    
    * `Bad Number` - An error occurred when making the call. Please check the number before trying
    again
    
    * `Info 411 Restricted` - Calling to 411 Information Services is restricted
    
    * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer
    service at <(888) 555-1212>
    
    * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet
    connection
    
    * `Failed Try Again` - Call failed. Please try again
    
    * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit
    
    * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other
    Phone has reached its limit. Please contact customer service
    
    * `Calls Not Accepted` - Your account was not accepting calls at this time
    
    * `Number Not Allowed` - The number that was dialed to access your account is not allowed
    
    * `Number Blocked` - This number is in your Blocked Numbers list
    
    * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by
    your administrator
    
    * `Resource Error` - An error occurred when making the call. Please try again
    
    * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please
    check that you are not forwarding calls back to your own account
    
    * `Fax Not Received` - An incoming fax could not be received because a proper connection with
    the sender's fax machine could not be established
    
    * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone
    line quality to poor to maintain the connection or the call was dropped
    
    * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the
    receiving fax machine
    
    * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too
    poor to send the fax
    
    * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again
    
    * `Fax Save Error` - An internal error occurred when saving the fax. Please try again
    
    * `Fax Send Error` - An error occurred when sending the fax. Please try again
    
    Generated by Python OpenAPI Parser
    """
    
    Accepted = 'Accepted'
    Connected = 'Connected'
    Line_Busy = 'line Busy'
    Not_Answered = 'Not Answered'
    No_Answer = 'No Answer'
    Hang_Up = 'Hang Up'
    Stopped = 'Stopped'
    Internal_Error = 'Internal Error'
    No_Credit = 'No Credit'
    Restricted_Number = 'Restricted Number'
    Wrong_Number = 'Wrong Number'
    International_Disabled = 'International Disabled'
    International_Restricted = 'International Restricted'
    Bad_Number = 'Bad Number'
    Info_411_Restricted = 'Info 411 Restricted'
    Customer_611_Restricted = 'Customer 611 Restricted'
    No_Digital_Line = 'No Digital Line'
    Failed_Try_Again = 'Failed Try Again'
    Max_Call_Limit = 'Max Call Limit'
    Too_Many_Calls = 'Too Many Calls'
    Calls_Not_Accepted = 'Calls Not Accepted'
    Number_Not_Allowed = 'Number Not Allowed'
    Number_Blocked = 'Number Blocked'
    Number_Disabled = 'Number Disabled'
    Not_Allowed = 'Not Allowed'
    Resource_Error = 'Resource Error'
    Call_Loop = 'Call Loop'
    Fax_Not_Received = 'Fax Not Received'
    Fax_Partially_Sent = 'Fax Partially Sent'
    Fax_Not_Sent = 'Fax Not Sent'
    Fax_Poor_Line = 'Fax Poor Line'
    Fax_Prepare_Error = 'Fax Prepare Error'
    Fax_Save_Error = 'Fax Save Error'
    Fax_Send_Error = 'Fax Send Error'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemFromDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemFrom(DataClassJsonMixin):
    """ Caller information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListCompanyActiveCallsResponseRecordsItemLegsItemFromDevice] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemToDevice(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ string to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemTo(DataClassJsonMixin):
    """ Callee information """
    
    phone_number: Optional[str] = None
    """
    Phone number of a party. Usually it is a plain number including country and area code like
    18661234567. But sometimes it could be returned from database with some formatting applied, for
    example (866)123-4567. This property is filled in all cases where parties communicate by means
    of global phone numbers, for example when calling to direct numbers or sending/receiving SMS
    """
    
    extension_number: Optional[str] = None
    """
    Extension short number (usually 3 or 4 digits). This property is filled when parties
    communicate by means of short internal numbers, for example when calling to other extension or
    sending/receiving Company Pager message
    """
    
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    location: Optional[str] = None
    """
    Contains party location (city, state) if one can be determined from phoneNumber. This property
    is filled only when phoneNumber is not empty and server can calculate location information from
    it (for example, this information is unavailable for US toll-free numbers)
    """
    
    name: Optional[str] = None
    """
    Symbolic name associated with a party. If the phone does not belong to the known extension,
    only the location is returned, the name is not determined then
    """
    
    device: Optional[ListCompanyActiveCallsResponseRecordsItemLegsItemToDevice] = None

class ListCompanyActiveCallsResponseRecordsItemLegsItemTransport(Enum):
    """ Call transport """
    
    PSTN = 'PSTN'
    VoIP = 'VoIP'

class ListCompanyActiveCallsResponseRecordsItemLegsItemRecordingType(Enum):
    """ Indicates recording mode used """
    
    Automatic = 'Automatic'
    OnDemand = 'OnDemand'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCompanyActiveCallsResponseRecordsItemLegsItemRecording(DataClassJsonMixin):
    """ Call recording data. Returned if the call is recorded """
    
    id: Optional[str] = None
    """ Internal identifier of the call recording """
    
    uri: Optional[str] = None
    """ Link to the call recording metadata resource """
    
    type: Optional[ListCompanyActiveCallsResponseRecordsItemLegsItemRecordingType] = None
    """ Indicates recording mode used """
    
    content_uri: Optional[str] = None
    """ Link to the call recording binary content """
    
