from ._13 import *

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadUserVideoConfigurationResponse(DataClassJsonMixin):
    provider: Optional[ReadUserVideoConfigurationResponseProvider] = None
    """ Video provider of the user """
    

class UpdateUserVideoConfigurationRequestProvider(Enum):
    """ Video provider of the user """
    
    RCMeetings = 'RCMeetings'
    RCVideo = 'RCVideo'
    None_ = 'None'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserVideoConfigurationRequest(DataClassJsonMixin):
    provider: Optional[UpdateUserVideoConfigurationRequestProvider] = None
    """ Video provider of the user """
    

class UpdateUserVideoConfigurationResponseProvider(Enum):
    """ Video provider of the user """
    
    RCMeetings = 'RCMeetings'
    RCVideo = 'RCVideo'
    None_ = 'None'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserVideoConfigurationResponse(DataClassJsonMixin):
    provider: Optional[UpdateUserVideoConfigurationResponseProvider] = None
    """ Video provider of the user """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a call queue """
    
    name: Optional[str] = None
    """ Name of a call queue """
    
    extension_number: Optional[str] = None
    """ Extension number of a call queue """
    
    editable_member_status: Optional[bool] = None
    """ Flag allow members to change their queue status """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListCallQueuesResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListCallQueuesResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListCallQueuesResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListCallQueuesResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueuesResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
     - uri
    
    Generated by Python OpenAPI Parser
    """
    
    uri: str
    """ Link to a call queues resource """
    
    records: List[ListCallQueuesResponseRecordsItem]
    """ List of call queues """
    
    navigation: ListCallQueuesResponseNavigation
    """ Information on navigation """
    
    paging: ListCallQueuesResponsePaging
    """ Information on paging """
    

class ReadCallQueueInfoResponseStatus(Enum):
    """ Call queue status """
    
    Enabled = 'Enabled'
    Disabled = 'Disabled'
    NotActivated = 'NotActivated'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCallQueueInfoResponseServiceLevelSettings(DataClassJsonMixin):
    """ Call queue service level settings """
    
    sla_goal: Optional[int] = None
    """
    Target percentage of calls that must be answered by agents within the service level time
    threshold
    """
    
    sla_threshold_seconds: Optional[int] = None
    """ The period of time in seconds that is considered to be an acceptable service level """
    
    include_abandoned_calls: Optional[bool] = None
    """
    Includes abandoned calls (when callers hang up prior to being served by an agent) into
    service-level calculation
    """
    
    abandoned_threshold_seconds: Optional[int] = None
    """
    Abandoned calls that are shorter than the defined period of time in seconds will not be
    included into the calculation of Service Level
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadCallQueueInfoResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a call queue """
    
    name: Optional[str] = None
    """ Call queue name """
    
    extension_number: Optional[str] = None
    """ Call queue extension number """
    
    status: Optional[ReadCallQueueInfoResponseStatus] = None
    """ Call queue status """
    
    service_level_settings: Optional[ReadCallQueueInfoResponseServiceLevelSettings] = None
    """ Call queue service level settings """
    
    editable_member_status: Optional[bool] = None
    """ Allows members to change their queue status """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallQueueInfoRequestServiceLevelSettings(DataClassJsonMixin):
    """ Call queue service level settings """
    
    sla_goal: Optional[int] = None
    """
    Target percentage of calls that must be answered by agents within the service level time
    threshold
    """
    
    sla_threshold_seconds: Optional[int] = None
    """ The period of time in seconds that is considered to be an acceptable service level """
    
    include_abandoned_calls: Optional[bool] = None
    """
    Includes abandoned calls (when callers hang up prior to being served by an agent) into
    service-level calculation
    """
    
    abandoned_threshold_seconds: Optional[int] = None
    """
    Abandoned calls that are shorter than the defined period of time in seconds will not be
    included into the calculation of Service Level
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallQueueInfoRequest(DataClassJsonMixin):
    service_level_settings: Optional[UpdateCallQueueInfoRequestServiceLevelSettings] = None
    """ Call queue service level settings """
    
    editable_member_status: Optional[bool] = None
    """ Allows members to change their queue status """
    

class UpdateCallQueueInfoResponseStatus(Enum):
    """ Call queue status """
    
    Enabled = 'Enabled'
    Disabled = 'Disabled'
    NotActivated = 'NotActivated'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallQueueInfoResponseServiceLevelSettings(DataClassJsonMixin):
    """ Call queue service level settings """
    
    sla_goal: Optional[int] = None
    """
    Target percentage of calls that must be answered by agents within the service level time
    threshold
    """
    
    sla_threshold_seconds: Optional[int] = None
    """ The period of time in seconds that is considered to be an acceptable service level """
    
    include_abandoned_calls: Optional[bool] = None
    """
    Includes abandoned calls (when callers hang up prior to being served by an agent) into
    service-level calculation
    """
    
    abandoned_threshold_seconds: Optional[int] = None
    """
    Abandoned calls that are shorter than the defined period of time in seconds will not be
    included into the calculation of Service Level
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallQueueInfoResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a call queue """
    
    name: Optional[str] = None
    """ Call queue name """
    
    extension_number: Optional[str] = None
    """ Call queue extension number """
    
    status: Optional[UpdateCallQueueInfoResponseStatus] = None
    """ Call queue status """
    
    service_level_settings: Optional[UpdateCallQueueInfoResponseServiceLevelSettings] = None
    """ Call queue service level settings """
    
    editable_member_status: Optional[bool] = None
    """ Allows members to change their queue status """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a call queue member """
    
    id: Optional[int] = None
    """ Internal identifier of a call queue member """
    
    extension_number: Optional[str] = None
    """ Extension number of a call queue member """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListCallQueueMembersResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListCallQueueMembersResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListCallQueueMembersResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListCallQueueMembersResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallQueueMembersResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
     - uri
    
    Generated by Python OpenAPI Parser
    """
    
    uri: str
    """ Link to a call queue members resource """
    
    records: List[ListCallQueueMembersResponseRecordsItem]
    """ List of call queue members """
    
    navigation: ListCallQueueMembersResponseNavigation
    """ Information on navigation """
    
    paging: ListCallQueueMembersResponsePaging
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultipleCallQueueMembersRequest(DataClassJsonMixin):
    added_extension_ids: Optional[List[str]] = None
    removed_extension_ids: Optional[List[str]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserCallQueuesRequestRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Call queue extension identifier """
    
    name: Optional[str] = None
    """ Call queue name (read-only) """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserCallQueuesRequest(DataClassJsonMixin):
    records: Optional[List[UpdateUserCallQueuesRequestRecordsItem]] = None
    """ List of the queues where the extension is an agent """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserCallQueuesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Call queue extension identifier """
    
    name: Optional[str] = None
    """ Call queue name (read-only) """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserCallQueuesResponse(DataClassJsonMixin):
    records: Optional[List[UpdateUserCallQueuesResponseRecordsItem]] = None
    """ List of the queues where the extension is an agent """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListDepartmentMembersResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListDepartmentMembersResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListDepartmentMembersResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListDepartmentMembersResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDepartmentMembersResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the list of department members """
    
    records: Optional[List[ListDepartmentMembersResponseRecordsItem]] = None
    """ List of department members extensions """
    
    navigation: Optional[ListDepartmentMembersResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ListDepartmentMembersResponsePaging] = None
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultipleDepartmentMembersRequestItemsItem(DataClassJsonMixin):
    department_id: Optional[str] = None
    added_extension_ids: Optional[List[str]] = None
    removed_extension_ids: Optional[List[str]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultipleDepartmentMembersRequest(DataClassJsonMixin):
    items: Optional[List[AssignMultipleDepartmentMembersRequestItemsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a paging group user extension """
    
    uri: Optional[str] = None
    """ Link to a paging group user extension """
    
    extension_number: Optional[str] = None
    """ Extension number of a paging group user """
    
    name: Optional[str] = None
    """ Name of a paging group user """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListPagingGroupUsersResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListPagingGroupUsersResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListPagingGroupUsersResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListPagingGroupUsersResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupUsersResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the list of users allowed to page the Paging Only group """
    
    records: Optional[List[ListPagingGroupUsersResponseRecordsItem]] = None
    """ List of users allowed to page the Paging Only group """
    
    navigation: Optional[ListPagingGroupUsersResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ListPagingGroupUsersResponsePaging] = None
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a paging device """
    
    uri: Optional[str] = None
    """ Link to a paging device resource """
    
    name: Optional[str] = None
    """ Name of a paging device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListPagingGroupDevicesResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListPagingGroupDevicesResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListPagingGroupDevicesResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListPagingGroupDevicesResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListPagingGroupDevicesResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the list of devices assigned to the paging only group """
    
    records: Optional[List[ListPagingGroupDevicesResponseRecordsItem]] = None
    """ List of paging devices assigned to this group """
    
    navigation: Optional[ListPagingGroupDevicesResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ListPagingGroupDevicesResponsePaging] = None
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultiplePagingGroupUsersDevicesRequest(DataClassJsonMixin):
    added_user_ids: Optional[List[str]] = None
    """ List of users that will be allowed to page a group specified """
    
    removed_user_ids: Optional[List[str]] = None
    """ List of users that will be unallowed to page a group specified """
    
    added_device_ids: Optional[List[str]] = None
    """ List of account devices that will be assigned to a paging group specified """
    
    removed_device_ids: Optional[List[str]] = None
    """ List of account devices that will be unassigned from a paging group specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a call monitoring group resource """
    
    id: Optional[str] = None
    """ Internal identifier of a group """
    
    name: Optional[str] = None
    """ Name of a group """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListCallMonitoringGroupsResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListCallMonitoringGroupsResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListCallMonitoringGroupsResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListCallMonitoringGroupsResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupsResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
     - uri
    
    Generated by Python OpenAPI Parser
    """
    
    uri: str
    """ Link to a call monitoring groups resource """
    
    records: List[ListCallMonitoringGroupsResponseRecordsItem]
    """ List of call monitoring group members """
    
    navigation: ListCallMonitoringGroupsResponseNavigation
    """ Information on navigation """
    
    paging: ListCallMonitoringGroupsResponsePaging
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateCallMonitoringGroupRequest(DataClassJsonMixin):
    """
    Required Properties:
     - name
    
    Generated by Python OpenAPI Parser
    """
    
    name: str
    """ Name of a group """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateCallMonitoringGroupResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a call monitoring group resource """
    
    id: Optional[str] = None
    """ Internal identifier of a group """
    
    name: Optional[str] = None
    """ Name of a group """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupRequest(DataClassJsonMixin):
    """
    Required Properties:
     - name
    
    Generated by Python OpenAPI Parser
    """
    
    name: str
    """ Name of a group """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a call monitoring group resource """
    
    id: Optional[str] = None
    """ Internal identifier of a group """
    
    name: Optional[str] = None
    """ Name of a group """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadUserFeaturesResponseRecordsItemParamsItem(DataClassJsonMixin):
    name: Optional[str] = None
    """ Parameter name """
    
    value: Optional[str] = None
    """ Parameter value """
    

class ReadUserFeaturesResponseRecordsItemReasonCode(Enum):
    """ Reason code """
    
    ServicePlanLimitation = 'ServicePlanLimitation'
    AccountLimitation = 'AccountLimitation'
    ExtensionTypeLimitation = 'ExtensionTypeLimitation'
    ExtensionLimitation = 'ExtensionLimitation'
    InsufficientPermissions = 'InsufficientPermissions'
    ConfigurationLimitation = 'ConfigurationLimitation'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadUserFeaturesResponseRecordsItemReason(DataClassJsonMixin):
    """ Reason of the feature unavailability. Returned only if `available` is set to 'false' """
    
    code: Optional[ReadUserFeaturesResponseRecordsItemReasonCode] = None
    """ Reason code """
    
    message: Optional[str] = None
    """ Reason description """
    
    permission: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadUserFeaturesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a feature """
    
    available: Optional[bool] = None
    """
    Specifies if the feature is available for the current user according to services enabled for
    the account, type, entitlements and permissions of the extension. If the authorized user gets
    features of the other extension, only features that can be delegated are returned (such as
    configuration by administrators).
    """
    
    params: Optional[List[ReadUserFeaturesResponseRecordsItemParamsItem]] = None
    reason: Optional[ReadUserFeaturesResponseRecordsItemReason] = None
    """ Reason of the feature unavailability. Returned only if `available` is set to 'false' """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadUserFeaturesResponse(DataClassJsonMixin):
    records: Optional[List[ReadUserFeaturesResponseRecordsItem]] = None

class ListCallMonitoringGroupMembersResponseRecordsItemPermissionsItem(Enum):
    """
    Call monitoring permission; mltiple values are allowed: * `Monitoring` - User can monitor a
    group * `Monitored` - User can be monitored
    
    Generated by Python OpenAPI Parser
    """
    
    Monitoring = 'Monitoring'
    Monitored = 'Monitored'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a call monitoring group member """
    
    id: Optional[str] = None
    """ Internal identifier of a call monitoring group member """
    
    extension_number: Optional[str] = None
    """ Extension number of a call monitoring group member """
    
    permissions: Optional[List[ListCallMonitoringGroupMembersResponseRecordsItemPermissionsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListCallMonitoringGroupMembersResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListCallMonitoringGroupMembersResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListCallMonitoringGroupMembersResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListCallMonitoringGroupMembersResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListCallMonitoringGroupMembersResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
     - uri
    
    Generated by Python OpenAPI Parser
    """
    
    uri: str
    """ Link to a call monitoring group members resource """
    
    records: List[ListCallMonitoringGroupMembersResponseRecordsItem]
    """ List of a call monitoring group members """
    
    navigation: ListCallMonitoringGroupMembersResponseNavigation
    """ Information on navigation """
    
    paging: ListCallMonitoringGroupMembersResponsePaging
    """ Information on paging """
    

class UpdateCallMonitoringGroupListRequestAddedExtensionsItemPermissionsItem(Enum):
    Monitoring = 'Monitoring'
    Monitored = 'Monitored'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupListRequestAddedExtensionsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """
    Internal identifier of an extension. Only the following extension types are allowed: User,
    DigitalUser, VirtualUser, FaxUser, Limited
    """
    
    permissions: Optional[List[UpdateCallMonitoringGroupListRequestAddedExtensionsItemPermissionsItem]] = None
    """
    Set of call monitoring group permissions granted to the specified extension. In order to remove
    the specified extension from a call monitoring group use an empty value
    """
    

class UpdateCallMonitoringGroupListRequestUpdatedExtensionsItemPermissionsItem(Enum):
    Monitoring = 'Monitoring'
    Monitored = 'Monitored'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupListRequestUpdatedExtensionsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """
    Internal identifier of an extension. Only the following extension types are allowed: User,
    DigitalUser, VirtualUser, FaxUser, Limited
    """
    
    permissions: Optional[List[UpdateCallMonitoringGroupListRequestUpdatedExtensionsItemPermissionsItem]] = None
    """
    Set of call monitoring group permissions granted to the specified extension. In order to remove
    the specified extension from a call monitoring group use an empty value
    """
    

class UpdateCallMonitoringGroupListRequestRemovedExtensionsItemPermissionsItem(Enum):
    Monitoring = 'Monitoring'
    Monitored = 'Monitored'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupListRequestRemovedExtensionsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """
    Internal identifier of an extension. Only the following extension types are allowed: User,
    DigitalUser, VirtualUser, FaxUser, Limited
    """
    
    permissions: Optional[List[UpdateCallMonitoringGroupListRequestRemovedExtensionsItemPermissionsItem]] = None
    """
    Set of call monitoring group permissions granted to the specified extension. In order to remove
    the specified extension from a call monitoring group use an empty value
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateCallMonitoringGroupListRequest(DataClassJsonMixin):
    added_extensions: Optional[List[UpdateCallMonitoringGroupListRequestAddedExtensionsItem]] = None
    updated_extensions: Optional[List[UpdateCallMonitoringGroupListRequestUpdatedExtensionsItem]] = None
    removed_extensions: Optional[List[UpdateCallMonitoringGroupListRequestRemovedExtensionsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ParsePhoneNumberRequest(DataClassJsonMixin):
    original_strings: Optional[List[str]] = None
    """
    Phone numbers passed in a string. The maximum value of phone numbers is limited to 64. The
    maximum number of symbols in each phone number in a string is 64
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ParsePhoneNumberResponseHomeCountry(DataClassJsonMixin):
    """ Information on a user home country """
    
    id: Optional[str] = None
    """ Internal identifier of a country """
    
    uri: Optional[str] = None
    """ Canonical URI of a country """
    
    calling_code: Optional[str] = None
    """ Country calling code defined by ITU-T recommendations E.123 and E.164, see Calling Codes """
    
    emergency_calling: Optional[bool] = None
    """ Emergency calling feature availability/emergency address requirement indicator """
    
    iso_code: Optional[str] = None
    """ Country code according to the ISO standard, see ISO 3166 """
    
    name: Optional[str] = None
    """ Official name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ParsePhoneNumberResponsePhoneNumbersItemCountry(DataClassJsonMixin):
    """ Information on a country the phone number belongs to """
    
    id: Optional[str] = None
    """ Internal identifier of a country """
    
    uri: Optional[str] = None
    """ Canonical URI of a country """
    
    calling_code: Optional[str] = None
    """ Country calling code defined by ITU-T recommendations E.123 and E.164, see Calling Codes """
    
    emergency_calling: Optional[bool] = None
    """ Emergency calling feature availability/emergency address requirement indicator """
    
    iso_code: Optional[str] = None
    """ Country code according to the ISO standard, see ISO 3166 """
    
    name: Optional[str] = None
    """ Official name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ParsePhoneNumberResponsePhoneNumbersItem(DataClassJsonMixin):
    area_code: Optional[str] = None
    """
    Area code of location. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)
    number that identifies a specific geographic region/numbering area of the national numbering
    plan (NANP); that can be summarized as `NPA-NXX-xxxx` and covers Canada, the United States,
    parts of the Caribbean Sea, and some Atlantic and Pacific islands. See [North American
    Numbering Plan] (https://en.wikipedia.org/wiki/North_American_Numbering_Plan) for details
    """
    
    country: Optional[ParsePhoneNumberResponsePhoneNumbersItemCountry] = None
    """ Information on a country the phone number belongs to """
    
    dialable: Optional[str] = None
    """ Dialing format of a phone number """
    
    e164: Optional[str] = None
    """ Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format """
    
    formatted_international: Optional[str] = None
    """ International format of a phone number """
    
    formatted_national: Optional[str] = None
    """ Domestic format of a phone number """
    
    original_string: Optional[str] = None
    """ One of the numbers to be parsed, passed as a string in response """
    
    special: Optional[bool] = None
    """ 'True' if the number is in a special format (for example N11 code) """
    
    normalized: Optional[str] = None
    """
    Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format without plus sign
    ('+')
    """
    
    toll_free: Optional[bool] = None
    """ Specifies if a phone number is toll free or not """
    
    sub_address: Optional[str] = None
    """
    Sub-Address. The portion of the number that identifies a subscriber into the subscriber
    internal (non-public) network.
    """
    
    subscriber_number: Optional[str] = None
    """
    Subscriber number. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)
    number that identifies a subscriber in a network or numbering area.
    """
    
    dtmf_postfix: Optional[str] = None
    """ DTMF (Dual Tone Multi-Frequency) postfix """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ParsePhoneNumberResponse(DataClassJsonMixin):
    """
    Required Properties:
     - home_country
     - phone_numbers
    
    Generated by Python OpenAPI Parser
    """
    
    home_country: ParsePhoneNumberResponseHomeCountry
    """ Information on a user home country """
    
    phone_numbers: List[ParsePhoneNumberResponsePhoneNumbersItem]
    """ Parsed phone numbers data """
    
    uri: Optional[str] = None
    """ Canonical URI of a resource """
    

class ReadDeviceResponseType(Enum):
    """ Device type """
    
    BLA = 'BLA'
    SoftPhone = 'SoftPhone'
    OtherPhone = 'OtherPhone'
    HardPhone = 'HardPhone'
    WebPhone = 'WebPhone'
    Paging = 'Paging'

class ReadDeviceResponseStatus(Enum):
    """ Device status """
    
    Offline = 'Offline'
    Online = 'Online'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseModelAddonsItem(DataClassJsonMixin):
    id: Optional[str] = None
    name: Optional[str] = None
    count: Optional[int] = None

class ReadDeviceResponseModelFeaturesItem(Enum):
    BLA = 'BLA'
    CommonPhone = 'CommonPhone'
    Intercom = 'Intercom'
    Paging = 'Paging'
    HELD = 'HELD'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseModel(DataClassJsonMixin):
    """ HardPhone model information """
    
    id: Optional[str] = None
    """ Internal identifier of a HardPhone device model """
    
    name: Optional[str] = None
    """ Device name """
    
    addons: Optional[List[ReadDeviceResponseModelAddonsItem]] = None
    """ Addons description """
    
    features: Optional[List[ReadDeviceResponseModelFeaturesItem]] = None
    """ Device feature or multiple features supported """
    
    line_count: Optional[int] = None
    """ Max supported count of phone lines """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseExtension(DataClassJsonMixin):
    """ This attribute can be omitted for unassigned devices """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseEmergencyAddress(DataClassJsonMixin):
    customer_name: Optional[str] = None
    """ Name of a customer """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    zip: Optional[str] = None
    """ Zip code """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseEmergencyLocation(DataClassJsonMixin):
    """ Company emergency response location details """
    
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    name: Optional[str] = None
    """ Location name """
    

class ReadDeviceResponseEmergencyAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class ReadDeviceResponseEmergencySyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class ReadDeviceResponseEmergencyAddressEditableStatus(Enum):
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    
    Generated by Python OpenAPI Parser
    """
    
    MainDevice = 'MainDevice'
    AnyDevice = 'AnyDevice'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseEmergency(DataClassJsonMixin):
    """ Device emergency settings """
    
    address: Optional[ReadDeviceResponseEmergencyAddress] = None
    location: Optional[ReadDeviceResponseEmergencyLocation] = None
    """ Company emergency response location details """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    address_status: Optional[ReadDeviceResponseEmergencyAddressStatus] = None
    """ Emergency address status """
    
    sync_status: Optional[ReadDeviceResponseEmergencySyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    address_editable_status: Optional[ReadDeviceResponseEmergencyAddressEditableStatus] = None
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    """
    

class ReadDeviceResponseEmergencyServiceAddressSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseEmergencyServiceAddress(DataClassJsonMixin):
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    
    Generated by Python OpenAPI Parser
    """
    
    street: Optional[str] = None
    street2: Optional[str] = None
    city: Optional[str] = None
    zip: Optional[str] = None
    customer_name: Optional[str] = None
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    sync_status: Optional[ReadDeviceResponseEmergencyServiceAddressSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    tax_id: Optional[str] = None
    """ Internal identifier of a tax """
    

class ReadDeviceResponsePhoneLinesItemLineType(Enum):
    """ Type of phone line """
    
    Standalone = 'Standalone'
    StandaloneFree = 'StandaloneFree'
    BlaPrimary = 'BlaPrimary'
    BlaSecondary = 'BlaSecondary'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponsePhoneLinesItemPhoneInfoCountry(DataClassJsonMixin):
    """ Brief information on a phone number country """
    
    id: Optional[str] = None
    """ Internal identifier of a home country """
    
    uri: Optional[str] = None
    """ Canonical URI of a home country """
    
    name: Optional[str] = None
    """ Official name of a home country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponsePhoneLinesItemPhoneInfoExtension(DataClassJsonMixin):
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

class ReadDeviceResponsePhoneLinesItemPhoneInfoPaymentType(Enum):
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    
    Generated by Python OpenAPI Parser
    """
    
    External = 'External'
    TollFree = 'TollFree'
    Local = 'Local'

class ReadDeviceResponsePhoneLinesItemPhoneInfoType(Enum):
    """ Phone number type """
    
    VoiceFax = 'VoiceFax'
    FaxOnly = 'FaxOnly'
    VoiceOnly = 'VoiceOnly'

class ReadDeviceResponsePhoneLinesItemPhoneInfoUsageType(Enum):
    """ Usage type of the phone number """
    
    MainCompanyNumber = 'MainCompanyNumber'
    AdditionalCompanyNumber = 'AdditionalCompanyNumber'
    CompanyNumber = 'CompanyNumber'
    DirectNumber = 'DirectNumber'
    CompanyFaxNumber = 'CompanyFaxNumber'
    ForwardedNumber = 'ForwardedNumber'
    ForwardedCompanyNumber = 'ForwardedCompanyNumber'
    ContactCenterNumber = 'ContactCenterNumber'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponsePhoneLinesItemPhoneInfo(DataClassJsonMixin):
    """ Phone number information """
    
    id: Optional[int] = None
    """ Internal identifier of a phone number """
    
    country: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfoCountry] = None
    """ Brief information on a phone number country """
    
    extension: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfoExtension] = None
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    """
    
    label: Optional[str] = None
    """ Custom user name of a phone number, if any """
    
    location: Optional[str] = None
    """ Location (City, State). Filled for local US numbers """
    
    payment_type: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfoPaymentType] = None
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    """
    
    phone_number: Optional[str] = None
    """ Phone number """
    
    status: Optional[str] = None
    """
    Status of a phone number. If the value is 'Normal', the phone number is ready to be used.
    Otherwise it is an external number not yet ported to RingCentral
    """
    
    type: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfoType] = None
    """ Phone number type """
    
    usage_type: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfoUsageType] = None
    """ Usage type of the phone number """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponsePhoneLinesItemEmergencyAddress(DataClassJsonMixin):
    required: Optional[bool] = None
    """ 'True' if specifying of emergency address is required """
    
    local_only: Optional[bool] = None
    """ 'True' if only local emergency address can be specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponsePhoneLinesItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a phone line """
    
    line_type: Optional[ReadDeviceResponsePhoneLinesItemLineType] = None
    """ Type of phone line """
    
    phone_info: Optional[ReadDeviceResponsePhoneLinesItemPhoneInfo] = None
    """ Phone number information """
    
    emergency_address: Optional[ReadDeviceResponsePhoneLinesItemEmergencyAddress] = None

class ReadDeviceResponseShippingStatus(Enum):
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    
    Generated by Python OpenAPI Parser
    """
    
    Initial = 'Initial'
    Accepted = 'Accepted'
    Shipped = 'Shipped'
    WonTShip = "Won't ship"

class ReadDeviceResponseShippingMethodId(Enum):
    """ Method identifier. The default value is 1 (Ground) """
    
    OBJECT_1 = '1'
    OBJECT_2 = '2'
    OBJECT_3 = '3'

class ReadDeviceResponseShippingMethodName(Enum):
    """ Method name, corresponding to the identifier """
    
    Ground = 'Ground'
    OBJECT_2_Day = '2 Day'
    Overnight = 'Overnight'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseShippingMethod(DataClassJsonMixin):
    """ Shipping method information """
    
    id: Optional[ReadDeviceResponseShippingMethodId] = None
    """ Method identifier. The default value is 1 (Ground) """
    
    name: Optional[ReadDeviceResponseShippingMethodName] = None
    """ Method name, corresponding to the identifier """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseShippingAddress(DataClassJsonMixin):
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    
    Generated by Python OpenAPI Parser
    """
    
    customer_name: Optional[str] = None
    """ Name of a primary contact person (receiver) """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    zip: Optional[str] = None
    """ Zip code """
    
    tax_id: Optional[str] = None
    """
    National taxpayer identification number. Should be specified for Brazil (CNPJ/CPF number) and
    Argentina (CUIT number).
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseShipping(DataClassJsonMixin):
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    
    Generated by Python OpenAPI Parser
    """
    
    status: Optional[ReadDeviceResponseShippingStatus] = None
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    """
    
    carrier: Optional[str] = None
    """ Shipping carrier name. Appears only if the device status is 'Shipped' """
    
    tracking_number: Optional[str] = None
    """ Carrier-specific tracking number. Appears only if the device status is 'Shipped' """
    
    method: Optional[ReadDeviceResponseShippingMethod] = None
    """ Shipping method information """
    
    address: Optional[ReadDeviceResponseShippingAddress] = None
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    name: Optional[str] = None
    """ Name of a site """
    

class ReadDeviceResponseLinePooling(Enum):
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    
    Generated by Python OpenAPI Parser
    """
    
    Host = 'Host'
    Guest = 'Guest'
    None_ = 'None'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseBillingStatementChargesItem(DataClassJsonMixin):
    description: Optional[str] = None
    amount: Optional[float] = None
    feature: Optional[str] = None
    free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseBillingStatementFeesItem(DataClassJsonMixin):
    description: Optional[str] = None
    amount: Optional[float] = None
    free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponseBillingStatement(DataClassJsonMixin):
    """
    Billing information. Returned for device update request if `prestatement` query parameter is
    set to 'true'
    
    Generated by Python OpenAPI Parser
    """
    
    currency: Optional[str] = None
    """ Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) standard """
    
    charges: Optional[List[ReadDeviceResponseBillingStatementChargesItem]] = None
    fees: Optional[List[ReadDeviceResponseBillingStatementFeesItem]] = None
    total_charged: Optional[float] = None
    total_charges: Optional[float] = None
    total_fees: Optional[float] = None
    subtotal: Optional[float] = None
    total_free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadDeviceResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ Canonical URI of a device """
    
    sku: Optional[str] = None
    """
    Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is
    device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device
    model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'
    """
    
    type: Optional[ReadDeviceResponseType] = 'HardPhone'
    """ Device type """
    
    name: Optional[str] = None
    """
    Device name. Mandatory if ordering SoftPhone or OtherPhone. Optional for HardPhone. If not
    specified for HardPhone, then device model name is used as device name
    """
    
    serial: Optional[str] = None
    """
    Serial number for HardPhone (is returned only when the phone is shipped and provisioned);
    endpoint_id for softphone and mobile applications
    """
    
    status: Optional[ReadDeviceResponseStatus] = None
    """ Device status """
    
    computer_name: Optional[str] = None
    """ PC name for softphone """
    
    model: Optional[ReadDeviceResponseModel] = None
    """ HardPhone model information """
    
    extension: Optional[ReadDeviceResponseExtension] = None
    """ This attribute can be omitted for unassigned devices """
    
    emergency: Optional[ReadDeviceResponseEmergency] = None
    """ Device emergency settings """
    
    emergency_service_address: Optional[ReadDeviceResponseEmergencyServiceAddress] = None
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    """
    
    phone_lines: Optional[List[ReadDeviceResponsePhoneLinesItem]] = None
    """ Phone lines information """
    
    shipping: Optional[ReadDeviceResponseShipping] = None
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    """
    
    box_billing_id: Optional[int] = None
    """
    Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to
    identify the device to be ordered. EitherT? model structure, or boxBillingId must be specified
    forT?HardPhone
    """
    
    use_as_common_phone: Optional[bool] = None
    """
    Supported only for devices assigned to Limited extensions. If true, enables users to log in to
    this phone as a common phone.
    """
    
    in_company_net: Optional[bool] = None
    """
    Network location status. 'True' if the device is located in the configured corporate network
    (On-Net); 'False' for Off-Net location. Parameter is not returned if
    `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network
    location is not determined
    """
    
    site: Optional[ReadDeviceResponseSite] = None
    """ Site data """
    
    last_location_report_time: Optional[str] = None
    """
    Datetime of receiving last location report in [ISO
    8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example
    *2016-03-10T18:07:52.534Z
    """
    
    line_pooling: Optional[ReadDeviceResponseLinePooling] = None
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    """
    
    billing_statement: Optional[ReadDeviceResponseBillingStatement] = None
    """
    Billing information. Returned for device update request if `prestatement` query parameter is
    set to 'true'
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestEmergencyServiceAddress(DataClassJsonMixin):
    """
    Address for emergency cases. The same emergency address is assigned to all numbers of a single
    device. If the emergency address is also specified in `emergency` resource, then this value is
    ignored
    
    Generated by Python OpenAPI Parser
    """
    
    street: Optional[str] = None
    street2: Optional[str] = None
    city: Optional[str] = None
    zip: Optional[str] = None
    customer_name: Optional[str] = None
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestEmergencyAddress(DataClassJsonMixin):
    customer_name: Optional[str] = None
    """ Name of a customer """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    zip: Optional[str] = None
    """ Zip code """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestEmergencyLocation(DataClassJsonMixin):
    """ Company emergency response location details """
    
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    name: Optional[str] = None
    """ Location name """
    

class UpdateDeviceRequestEmergencyAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class UpdateDeviceRequestEmergencySyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class UpdateDeviceRequestEmergencyAddressEditableStatus(Enum):
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    
    Generated by Python OpenAPI Parser
    """
    
    MainDevice = 'MainDevice'
    AnyDevice = 'AnyDevice'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestEmergency(DataClassJsonMixin):
    """ Device emergency settings """
    
    address: Optional[UpdateDeviceRequestEmergencyAddress] = None
    location: Optional[UpdateDeviceRequestEmergencyLocation] = None
    """ Company emergency response location details """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    address_status: Optional[UpdateDeviceRequestEmergencyAddressStatus] = None
    """ Emergency address status """
    
    sync_status: Optional[UpdateDeviceRequestEmergencySyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    address_editable_status: Optional[UpdateDeviceRequestEmergencyAddressEditableStatus] = None
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestExtension(DataClassJsonMixin):
    """ Information on extension that the device is assigned to """
    
    id: Optional[str] = None
    """ Internal identifier of an extension """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestPhoneLinesPhoneLinesItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a phone number """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequestPhoneLines(DataClassJsonMixin):
    """ Information on phone lines added to a device """
    
    phone_lines: Optional[List[UpdateDeviceRequestPhoneLinesPhoneLinesItem]] = None
    """ Information on phone lines added to a device """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceRequest(DataClassJsonMixin):
    emergency_service_address: Optional[UpdateDeviceRequestEmergencyServiceAddress] = None
    """
    Address for emergency cases. The same emergency address is assigned to all numbers of a single
    device. If the emergency address is also specified in `emergency` resource, then this value is
    ignored
    """
    
    emergency: Optional[UpdateDeviceRequestEmergency] = None
    """ Device emergency settings """
    
    extension: Optional[UpdateDeviceRequestExtension] = None
    """ Information on extension that the device is assigned to """
    
    phone_lines: Optional[UpdateDeviceRequestPhoneLines] = None
    """ Information on phone lines added to a device """
    
    use_as_common_phone: Optional[bool] = None
    """
    Supported only for devices assigned to Limited extensions. If true, enables users to log in to
    this phone as a common phone.
    """
    

class UpdateDeviceResponseType(Enum):
    """ Device type """
    
    BLA = 'BLA'
    SoftPhone = 'SoftPhone'
    OtherPhone = 'OtherPhone'
    HardPhone = 'HardPhone'
    WebPhone = 'WebPhone'
    Paging = 'Paging'

class UpdateDeviceResponseStatus(Enum):
    """ Device status """
    
    Offline = 'Offline'
    Online = 'Online'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseModelAddonsItem(DataClassJsonMixin):
    id: Optional[str] = None
    name: Optional[str] = None
    count: Optional[int] = None

class UpdateDeviceResponseModelFeaturesItem(Enum):
    BLA = 'BLA'
    CommonPhone = 'CommonPhone'
    Intercom = 'Intercom'
    Paging = 'Paging'
    HELD = 'HELD'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseModel(DataClassJsonMixin):
    """ HardPhone model information """
    
    id: Optional[str] = None
    """ Internal identifier of a HardPhone device model """
    
    name: Optional[str] = None
    """ Device name """
    
    addons: Optional[List[UpdateDeviceResponseModelAddonsItem]] = None
    """ Addons description """
    
    features: Optional[List[UpdateDeviceResponseModelFeaturesItem]] = None
    """ Device feature or multiple features supported """
    
    line_count: Optional[int] = None
    """ Max supported count of phone lines """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseExtension(DataClassJsonMixin):
    """ This attribute can be omitted for unassigned devices """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseEmergencyAddress(DataClassJsonMixin):
    customer_name: Optional[str] = None
    """ Name of a customer """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    zip: Optional[str] = None
    """ Zip code """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseEmergencyLocation(DataClassJsonMixin):
    """ Company emergency response location details """
    
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    name: Optional[str] = None
    """ Location name """
    

class UpdateDeviceResponseEmergencyAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class UpdateDeviceResponseEmergencySyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class UpdateDeviceResponseEmergencyAddressEditableStatus(Enum):
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    
    Generated by Python OpenAPI Parser
    """
    
    MainDevice = 'MainDevice'
    AnyDevice = 'AnyDevice'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseEmergency(DataClassJsonMixin):
    """ Device emergency settings """
    
    address: Optional[UpdateDeviceResponseEmergencyAddress] = None
    location: Optional[UpdateDeviceResponseEmergencyLocation] = None
    """ Company emergency response location details """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    address_status: Optional[UpdateDeviceResponseEmergencyAddressStatus] = None
    """ Emergency address status """
    
    sync_status: Optional[UpdateDeviceResponseEmergencySyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    address_editable_status: Optional[UpdateDeviceResponseEmergencyAddressEditableStatus] = None
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    """
    

class UpdateDeviceResponseEmergencyServiceAddressSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseEmergencyServiceAddress(DataClassJsonMixin):
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    
    Generated by Python OpenAPI Parser
    """
    
    street: Optional[str] = None
    street2: Optional[str] = None
    city: Optional[str] = None
    zip: Optional[str] = None
    customer_name: Optional[str] = None
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    sync_status: Optional[UpdateDeviceResponseEmergencyServiceAddressSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    tax_id: Optional[str] = None
    """ Internal identifier of a tax """
    

class UpdateDeviceResponsePhoneLinesItemLineType(Enum):
    """ Type of phone line """
    
    Standalone = 'Standalone'
    StandaloneFree = 'StandaloneFree'
    BlaPrimary = 'BlaPrimary'
    BlaSecondary = 'BlaSecondary'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponsePhoneLinesItemPhoneInfoCountry(DataClassJsonMixin):
    """ Brief information on a phone number country """
    
    id: Optional[str] = None
    """ Internal identifier of a home country """
    
    uri: Optional[str] = None
    """ Canonical URI of a home country """
    
    name: Optional[str] = None
    """ Official name of a home country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponsePhoneLinesItemPhoneInfoExtension(DataClassJsonMixin):
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

class UpdateDeviceResponsePhoneLinesItemPhoneInfoPaymentType(Enum):
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    
    Generated by Python OpenAPI Parser
    """
    
    External = 'External'
    TollFree = 'TollFree'
    Local = 'Local'

class UpdateDeviceResponsePhoneLinesItemPhoneInfoType(Enum):
    """ Phone number type """
    
    VoiceFax = 'VoiceFax'
    FaxOnly = 'FaxOnly'
    VoiceOnly = 'VoiceOnly'

class UpdateDeviceResponsePhoneLinesItemPhoneInfoUsageType(Enum):
    """ Usage type of the phone number """
    
    MainCompanyNumber = 'MainCompanyNumber'
    AdditionalCompanyNumber = 'AdditionalCompanyNumber'
    CompanyNumber = 'CompanyNumber'
    DirectNumber = 'DirectNumber'
    CompanyFaxNumber = 'CompanyFaxNumber'
    ForwardedNumber = 'ForwardedNumber'
    ForwardedCompanyNumber = 'ForwardedCompanyNumber'
    ContactCenterNumber = 'ContactCenterNumber'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponsePhoneLinesItemPhoneInfo(DataClassJsonMixin):
    """ Phone number information """
    
    id: Optional[int] = None
    """ Internal identifier of a phone number """
    
    country: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfoCountry] = None
    """ Brief information on a phone number country """
    
    extension: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfoExtension] = None
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    """
    
    label: Optional[str] = None
    """ Custom user name of a phone number, if any """
    
    location: Optional[str] = None
    """ Location (City, State). Filled for local US numbers """
    
    payment_type: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfoPaymentType] = None
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    """
    
    phone_number: Optional[str] = None
    """ Phone number """
    
    status: Optional[str] = None
    """
    Status of a phone number. If the value is 'Normal', the phone number is ready to be used.
    Otherwise it is an external number not yet ported to RingCentral
    """
    
    type: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfoType] = None
    """ Phone number type """
    
    usage_type: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfoUsageType] = None
    """ Usage type of the phone number """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponsePhoneLinesItemEmergencyAddress(DataClassJsonMixin):
    required: Optional[bool] = None
    """ 'True' if specifying of emergency address is required """
    
    local_only: Optional[bool] = None
    """ 'True' if only local emergency address can be specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponsePhoneLinesItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a phone line """
    
    line_type: Optional[UpdateDeviceResponsePhoneLinesItemLineType] = None
    """ Type of phone line """
    
    phone_info: Optional[UpdateDeviceResponsePhoneLinesItemPhoneInfo] = None
    """ Phone number information """
    
    emergency_address: Optional[UpdateDeviceResponsePhoneLinesItemEmergencyAddress] = None

class UpdateDeviceResponseShippingStatus(Enum):
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    
    Generated by Python OpenAPI Parser
    """
    
    Initial = 'Initial'
    Accepted = 'Accepted'
    Shipped = 'Shipped'
    WonTShip = "Won't ship"

class UpdateDeviceResponseShippingMethodId(Enum):
    """ Method identifier. The default value is 1 (Ground) """
    
    OBJECT_1 = '1'
    OBJECT_2 = '2'
    OBJECT_3 = '3'

class UpdateDeviceResponseShippingMethodName(Enum):
    """ Method name, corresponding to the identifier """
    
    Ground = 'Ground'
    OBJECT_2_Day = '2 Day'
    Overnight = 'Overnight'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseShippingMethod(DataClassJsonMixin):
    """ Shipping method information """
    
    id: Optional[UpdateDeviceResponseShippingMethodId] = None
    """ Method identifier. The default value is 1 (Ground) """
    
    name: Optional[UpdateDeviceResponseShippingMethodName] = None
    """ Method name, corresponding to the identifier """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseShippingAddress(DataClassJsonMixin):
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    
    Generated by Python OpenAPI Parser
    """
    
    customer_name: Optional[str] = None
    """ Name of a primary contact person (receiver) """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    zip: Optional[str] = None
    """ Zip code """
    
    tax_id: Optional[str] = None
    """
    National taxpayer identification number. Should be specified for Brazil (CNPJ/CPF number) and
    Argentina (CUIT number).
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseShipping(DataClassJsonMixin):
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    
    Generated by Python OpenAPI Parser
    """
    
    status: Optional[UpdateDeviceResponseShippingStatus] = None
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    """
    
    carrier: Optional[str] = None
    """ Shipping carrier name. Appears only if the device status is 'Shipped' """
    
    tracking_number: Optional[str] = None
    """ Carrier-specific tracking number. Appears only if the device status is 'Shipped' """
    
    method: Optional[UpdateDeviceResponseShippingMethod] = None
    """ Shipping method information """
    
    address: Optional[UpdateDeviceResponseShippingAddress] = None
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    name: Optional[str] = None
    """ Name of a site """
    

class UpdateDeviceResponseLinePooling(Enum):
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    
    Generated by Python OpenAPI Parser
    """
    
    Host = 'Host'
    Guest = 'Guest'
    None_ = 'None'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseBillingStatementChargesItem(DataClassJsonMixin):
    description: Optional[str] = None
    amount: Optional[float] = None
    feature: Optional[str] = None
    free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseBillingStatementFeesItem(DataClassJsonMixin):
    description: Optional[str] = None
    amount: Optional[float] = None
    free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponseBillingStatement(DataClassJsonMixin):
    """
    Billing information. Returned for device update request if `prestatement` query parameter is
    set to 'true'
    
    Generated by Python OpenAPI Parser
    """
    
    currency: Optional[str] = None
    """ Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) standard """
    
    charges: Optional[List[UpdateDeviceResponseBillingStatementChargesItem]] = None
    fees: Optional[List[UpdateDeviceResponseBillingStatementFeesItem]] = None
    total_charged: Optional[float] = None
    total_charges: Optional[float] = None
    total_fees: Optional[float] = None
    subtotal: Optional[float] = None
    total_free_service_credit: Optional[float] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateDeviceResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ Canonical URI of a device """
    
    sku: Optional[str] = None
    """
    Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is
    device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device
    model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'
    """
    
    type: Optional[UpdateDeviceResponseType] = 'HardPhone'
    """ Device type """
    
    name: Optional[str] = None
    """
    Device name. Mandatory if ordering SoftPhone or OtherPhone. Optional for HardPhone. If not
    specified for HardPhone, then device model name is used as device name
    """
    
    serial: Optional[str] = None
    """
    Serial number for HardPhone (is returned only when the phone is shipped and provisioned);
    endpoint_id for softphone and mobile applications
    """
    
    status: Optional[UpdateDeviceResponseStatus] = None
    """ Device status """
    
    computer_name: Optional[str] = None
    """ PC name for softphone """
    
    model: Optional[UpdateDeviceResponseModel] = None
    """ HardPhone model information """
    
    extension: Optional[UpdateDeviceResponseExtension] = None
    """ This attribute can be omitted for unassigned devices """
    
    emergency: Optional[UpdateDeviceResponseEmergency] = None
    """ Device emergency settings """
    
    emergency_service_address: Optional[UpdateDeviceResponseEmergencyServiceAddress] = None
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    """
    
    phone_lines: Optional[List[UpdateDeviceResponsePhoneLinesItem]] = None
    """ Phone lines information """
    
    shipping: Optional[UpdateDeviceResponseShipping] = None
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    """
    
    box_billing_id: Optional[int] = None
    """
    Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to
    identify the device to be ordered. EitherT? model structure, or boxBillingId must be specified
    forT?HardPhone
    """
    
    use_as_common_phone: Optional[bool] = None
    """
    Supported only for devices assigned to Limited extensions. If true, enables users to log in to
    this phone as a common phone.
    """
    
    in_company_net: Optional[bool] = None
    """
    Network location status. 'True' if the device is located in the configured corporate network
    (On-Net); 'False' for Off-Net location. Parameter is not returned if
    `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network
    location is not determined
    """
    
    site: Optional[UpdateDeviceResponseSite] = None
    """ Site data """
    
    last_location_report_time: Optional[str] = None
    """
    Datetime of receiving last location report in [ISO
    8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example
    *2016-03-10T18:07:52.534Z
    """
    
    line_pooling: Optional[UpdateDeviceResponseLinePooling] = None
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    """
    
    billing_statement: Optional[UpdateDeviceResponseBillingStatement] = None
    """
    Billing information. Returned for device update request if `prestatement` query parameter is
    set to 'true'
    """
    

class ListExtensionDevicesLinePooling(Enum):
    Host = 'Host'
    Guest = 'Guest'
    None_ = 'None'

class ListExtensionDevicesFeature(Enum):
    Intercom = 'Intercom'
    Paging = 'Paging'
    BLA = 'BLA'
    HELD = 'HELD'

class ListExtensionDevicesResponseRecordsItemType(Enum):
    """ Device type """
    
    SoftPhone = 'SoftPhone'
    OtherPhone = 'OtherPhone'
    HardPhone = 'HardPhone'
    Paging = 'Paging'

class ListExtensionDevicesResponseRecordsItemStatus(Enum):
    """ Device status """
    
    Offline = 'Offline'
    Online = 'Online'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemModelAddonsItem(DataClassJsonMixin):
    id: Optional[str] = None
    name: Optional[str] = None
    count: Optional[int] = None

class ListExtensionDevicesResponseRecordsItemModelFeaturesItem(Enum):
    BLA = 'BLA'
    CommonPhone = 'CommonPhone'
    Intercom = 'Intercom'
    Paging = 'Paging'
    HELD = 'HELD'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemModel(DataClassJsonMixin):
    """ HardPhone model information """
    
    id: Optional[str] = None
    """ Internal identifier of a HardPhone device model """
    
    name: Optional[str] = None
    """ Device name """
    
    addons: Optional[List[ListExtensionDevicesResponseRecordsItemModelAddonsItem]] = None
    """ Addons description """
    
    features: Optional[List[ListExtensionDevicesResponseRecordsItemModelFeaturesItem]] = None
    """ Device feature or multiple features supported """
    
    line_count: Optional[int] = None
    """ Max supported count of phone lines """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemExtension(DataClassJsonMixin):
    """ This attribute can be omitted for unassigned devices """
    
    id: Optional[int] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

class ListExtensionDevicesResponseRecordsItemEmergencyServiceAddressSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemEmergencyServiceAddress(DataClassJsonMixin):
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    
    Generated by Python OpenAPI Parser
    """
    
    street: Optional[str] = None
    street2: Optional[str] = None
    city: Optional[str] = None
    zip: Optional[str] = None
    customer_name: Optional[str] = None
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    sync_status: Optional[ListExtensionDevicesResponseRecordsItemEmergencyServiceAddressSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    tax_id: Optional[str] = None
    """ Internal identifier of a tax """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemEmergencyAddress(DataClassJsonMixin):
    customer_name: Optional[str] = None
    """ Name of a customer """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    zip: Optional[str] = None
    """ Zip code """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Company emergency response location details """
    
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    name: Optional[str] = None
    """ Location name """
    

class ListExtensionDevicesResponseRecordsItemEmergencyAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class ListExtensionDevicesResponseRecordsItemEmergencySyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    NotRequired = 'NotRequired'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class ListExtensionDevicesResponseRecordsItemEmergencyAddressEditableStatus(Enum):
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    
    Generated by Python OpenAPI Parser
    """
    
    MainDevice = 'MainDevice'
    AnyDevice = 'AnyDevice'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemEmergency(DataClassJsonMixin):
    """ Device emergency settings """
    
    address: Optional[ListExtensionDevicesResponseRecordsItemEmergencyAddress] = None
    location: Optional[ListExtensionDevicesResponseRecordsItemEmergencyLocation] = None
    """ Company emergency response location details """
    
    out_of_country: Optional[bool] = None
    """ Specifies if emergency address is out of country """
    
    address_status: Optional[ListExtensionDevicesResponseRecordsItemEmergencyAddressStatus] = None
    """ Emergency address status """
    
    sync_status: Optional[ListExtensionDevicesResponseRecordsItemEmergencySyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    address_editable_status: Optional[ListExtensionDevicesResponseRecordsItemEmergencyAddressEditableStatus] = None
    """
    Ability to register new emergency address for a phone line using devices sharing this line or
    only main device (line owner)
    """
    

class ListExtensionDevicesResponseRecordsItemPhoneLinesItemLineType(Enum):
    """ Type of phone line """
    
    Standalone = 'Standalone'
    StandaloneFree = 'StandaloneFree'
    BlaPrimary = 'BlaPrimary'
    BlaSecondary = 'BlaSecondary'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoCountry(DataClassJsonMixin):
    """ Brief information on a phone number country """
    
    id: Optional[str] = None
    """ Internal identifier of a home country """
    
    uri: Optional[str] = None
    """ Canonical URI of a home country """
    
    name: Optional[str] = None
    """ Official name of a home country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoExtension(DataClassJsonMixin):
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of an extension """
    
    uri: Optional[str] = None
    """ Canonical URI of an extension """
    
    extension_number: Optional[str] = None
    """ Number of department extension """
    
    partner_id: Optional[str] = None
    """
    For Partner Applications Internal identifier of an extension created by partner. The
    RingCentral supports the mapping of accounts and stores the corresponding account ID/extension
    ID for each partner ID of a client application. In request URIs partner IDs are accepted
    instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in
    response URIs contain the corresponding account IDs and extension IDs. In all request and
    response bodies these values are reflected via partnerId attributes of account and extension
    """
    

class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoPaymentType(Enum):
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    
    Generated by Python OpenAPI Parser
    """
    
    External = 'External'
    TollFree = 'TollFree'
    Local = 'Local'

class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoType(Enum):
    """ Phone number type """
    
    VoiceFax = 'VoiceFax'
    FaxOnly = 'FaxOnly'
    VoiceOnly = 'VoiceOnly'

class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoUsageType(Enum):
    """ Usage type of the phone number """
    
    MainCompanyNumber = 'MainCompanyNumber'
    AdditionalCompanyNumber = 'AdditionalCompanyNumber'
    CompanyNumber = 'CompanyNumber'
    DirectNumber = 'DirectNumber'
    CompanyFaxNumber = 'CompanyFaxNumber'
    ForwardedNumber = 'ForwardedNumber'
    ForwardedCompanyNumber = 'ForwardedCompanyNumber'
    ContactCenterNumber = 'ContactCenterNumber'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfo(DataClassJsonMixin):
    """ Phone number information """
    
    id: Optional[int] = None
    """ Internal identifier of a phone number """
    
    country: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoCountry] = None
    """ Brief information on a phone number country """
    
    extension: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoExtension] = None
    """
    Information on the extension, to which the phone number is assigned. Returned only for the
    request of Account phone number list
    """
    
    label: Optional[str] = None
    """ Custom user name of a phone number, if any """
    
    location: Optional[str] = None
    """ Location (City, State). Filled for local US numbers """
    
    payment_type: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoPaymentType] = None
    """
    Payment type. 'External' is returned for forwarded numbers which are not terminated in the
    RingCentral phone system
    """
    
    phone_number: Optional[str] = None
    """ Phone number """
    
    status: Optional[str] = None
    """
    Status of a phone number. If the value is 'Normal', the phone number is ready to be used.
    Otherwise it is an external number not yet ported to RingCentral
    """
    
    type: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoType] = None
    """ Phone number type """
    
    usage_type: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfoUsageType] = None
    """ Usage type of the phone number """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemPhoneLinesItemEmergencyAddress(DataClassJsonMixin):
    required: Optional[bool] = None
    """ 'True' if specifying of emergency address is required """
    
    local_only: Optional[bool] = None
    """ 'True' if only local emergency address can be specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemPhoneLinesItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a phone line """
    
    line_type: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemLineType] = None
    """ Type of phone line """
    
    phone_info: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemPhoneInfo] = None
    """ Phone number information """
    
    emergency_address: Optional[ListExtensionDevicesResponseRecordsItemPhoneLinesItemEmergencyAddress] = None

class ListExtensionDevicesResponseRecordsItemShippingStatus(Enum):
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    
    Generated by Python OpenAPI Parser
    """
    
    Initial = 'Initial'
    Accepted = 'Accepted'
    Shipped = 'Shipped'
    WonTShip = "Won't ship"

class ListExtensionDevicesResponseRecordsItemShippingMethodId(Enum):
    """ Method identifier. The default value is 1 (Ground) """
    
    OBJECT_1 = '1'
    OBJECT_2 = '2'
    OBJECT_3 = '3'

class ListExtensionDevicesResponseRecordsItemShippingMethodName(Enum):
    """ Method name, corresponding to the identifier """
    
    Ground = 'Ground'
    OBJECT_2_Day = '2 Day'
    Overnight = 'Overnight'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemShippingMethod(DataClassJsonMixin):
    """ Shipping method information """
    
    id: Optional[ListExtensionDevicesResponseRecordsItemShippingMethodId] = None
    """ Method identifier. The default value is 1 (Ground) """
    
    name: Optional[ListExtensionDevicesResponseRecordsItemShippingMethodName] = None
    """ Method name, corresponding to the identifier """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemShippingAddress(DataClassJsonMixin):
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    
    Generated by Python OpenAPI Parser
    """
    
    customer_name: Optional[str] = None
    """ Name of a primary contact person (receiver) """
    
    additional_customer_name: Optional[str] = None
    """
    Name of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_email: Optional[str] = None
    """
    Email of a primary contact person (receiver). Should be specified for countries except the US,
    Canada, the UK and Australia.
    """
    
    additional_customer_email: Optional[str] = None
    """
    Email of an additional contact person. Should be specified for countries except the US, Canada,
    the UK and Australia.
    """
    
    customer_phone: Optional[str] = None
    """
    Phone number of a primary contact person (receiver). Should be specified for countries except
    the US, Canada, the UK and Australia
    """
    
    additional_customer_phone: Optional[str] = None
    """
    Phone number of an additional contact person. Should be specified for countries except the US,
    Canada, the UK & Australia.
    """
    
    street: Optional[str] = None
    """ Street address, line 1 - street address, P.O. box, company name, c/o """
    
    street2: Optional[str] = None
    """ Street address, line 2 - apartment, suite, unit, building, floor, etc. """
    
    city: Optional[str] = None
    """ City name """
    
    state: Optional[str] = None
    """ State/province name """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country: Optional[str] = None
    """ Country name """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    zip: Optional[str] = None
    """ Zip code """
    
    tax_id: Optional[str] = None
    """
    National taxpayer identification number. Should be specified for Brazil (CNPJ/CPF number) and
    Argentina (CUIT number).
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemShipping(DataClassJsonMixin):
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    
    Generated by Python OpenAPI Parser
    """
    
    status: Optional[ListExtensionDevicesResponseRecordsItemShippingStatus] = None
    """
    Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it
    is changed to 'Accepted' when a distributor starts processing the order. Finally it is changed
    to Shipped which means that distributor has shipped the device.
    """
    
    carrier: Optional[str] = None
    """ Shipping carrier name. Appears only if the device status is 'Shipped' """
    
    tracking_number: Optional[str] = None
    """ Carrier-specific tracking number. Appears only if the device status is 'Shipped' """
    
    method: Optional[ListExtensionDevicesResponseRecordsItemShippingMethod] = None
    """ Shipping method information """
    
    address: Optional[ListExtensionDevicesResponseRecordsItemShippingAddress] = None
    """
    Shipping address for the order. If it coincides with the Emergency Service Address, then can be
    omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be
    specified; in case an order contains several devices, they can be delivered to different
    addresses
    """
    

class ListExtensionDevicesResponseRecordsItemLinePooling(Enum):
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    
    Generated by Python OpenAPI Parser
    """
    
    Host = 'Host'
    Guest = 'Guest'
    None_ = 'None'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItemSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    uri: Optional[str] = None
    """ Canonical URI of a device """
    
    sku: Optional[str] = None
    """
    Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is
    device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device
    model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'
    """
    
    type: Optional[ListExtensionDevicesResponseRecordsItemType] = 'HardPhone'
    """ Device type """
    
    name: Optional[str] = None
    """
    Device name. Mandatory if ordering SoftPhone or OtherPhone. Optional for HardPhone. If not
    specified for HardPhone, then device model name is used as device name
    """
    
    status: Optional[ListExtensionDevicesResponseRecordsItemStatus] = None
    """ Device status """
    
    serial: Optional[str] = None
    """
    Serial number for HardPhone (is returned only when the phone is shipped and provisioned);
    endpoint_id for softphone and mobile applications
    """
    
    computer_name: Optional[str] = None
    """ PC name for softphone """
    
    model: Optional[ListExtensionDevicesResponseRecordsItemModel] = None
    """ HardPhone model information """
    
    extension: Optional[ListExtensionDevicesResponseRecordsItemExtension] = None
    """ This attribute can be omitted for unassigned devices """
    
    emergency_service_address: Optional[ListExtensionDevicesResponseRecordsItemEmergencyServiceAddress] = None
    """
    Address for emergency cases. The same emergency address is assigned to all the numbers of one
    device
    """
    
    emergency: Optional[ListExtensionDevicesResponseRecordsItemEmergency] = None
    """ Device emergency settings """
    
    phone_lines: Optional[List[ListExtensionDevicesResponseRecordsItemPhoneLinesItem]] = None
    """ Phone lines information """
    
    shipping: Optional[ListExtensionDevicesResponseRecordsItemShipping] = None
    """
    Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in
    case of SoftPhone and OtherPhone ) will be delivered to the customer
    """
    
    box_billing_id: Optional[int] = None
    """
    Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to
    identify the device to be ordered. EitherT? model structure, or boxBillingId must be specified
    forT?HardPhone
    """
    
    use_as_common_phone: Optional[bool] = None
    """
    Supported only for devices assigned to Limited extensions. If true, enables users to log in to
    this phone as a common phone.
    """
    
    line_pooling: Optional[ListExtensionDevicesResponseRecordsItemLinePooling] = None
    """
    Pooling type of a deviceHost - device with standalone paid phone line which can be linked to
    Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone
    line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']
    """
    
    in_company_net: Optional[bool] = None
    """
    Network location status. 'True' if the device is located in the configured corporate network
    (On-Net); 'False' for Off-Net location. Parameter is not returned if
    `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network
    location is not determined
    """
    
    site: Optional[ListExtensionDevicesResponseRecordsItemSite] = None
    """ Site data """
    
    last_location_report_time: Optional[str] = None
    """
    Datetime of receiving last location report in [ISO
    8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example
    *2016-03-10T18:07:52.534Z
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListExtensionDevicesResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListExtensionDevicesResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListExtensionDevicesResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListExtensionDevicesResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionDevicesResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
    
    Generated by Python OpenAPI Parser
    """
    
    records: List[ListExtensionDevicesResponseRecordsItem]
    """ List of extension devices """
    
    navigation: ListExtensionDevicesResponseNavigation
    """ Information on navigation """
    
    paging: ListExtensionDevicesResponsePaging
    """ Information on paging """
    
    uri: Optional[str] = None
    """ Link to the list of extension devices """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseAuthenticationSchemesItem(DataClassJsonMixin):
    description: Optional[str] = None
    documentation_uri: Optional[str] = None
    name: Optional[str] = None
    spec_uri: Optional[str] = None
    primary: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseBulk(DataClassJsonMixin):
    max_operations: Optional[int] = None
    max_payload_size: Optional[int] = None
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseChangePassword(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseEtag(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseFilter(DataClassJsonMixin):
    max_results: Optional[int] = None
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponsePatch(DataClassJsonMixin):
    supported: Optional[bool] = False

class ReadServiceProviderConfig2ResponseSchemasItem(Enum):
    UrnIetfParamsScimSchemasCore_2_0_ServiceProviderConfig = 'urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseSort(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2ResponseXmlDataFormat(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfig2Response(DataClassJsonMixin):
    authentication_schemes: Optional[List[ReadServiceProviderConfig2ResponseAuthenticationSchemesItem]] = None
    bulk: Optional[ReadServiceProviderConfig2ResponseBulk] = None
    change_password: Optional[ReadServiceProviderConfig2ResponseChangePassword] = None
    etag: Optional[ReadServiceProviderConfig2ResponseEtag] = None
    filter: Optional[ReadServiceProviderConfig2ResponseFilter] = None
    patch: Optional[ReadServiceProviderConfig2ResponsePatch] = None
    schemas: Optional[List[ReadServiceProviderConfig2ResponseSchemasItem]] = None
    sort: Optional[ReadServiceProviderConfig2ResponseSort] = None
    xml_data_format: Optional[ReadServiceProviderConfig2ResponseXmlDataFormat] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseAuthenticationSchemesItem(DataClassJsonMixin):
    description: Optional[str] = None
    documentation_uri: Optional[str] = None
    name: Optional[str] = None
    spec_uri: Optional[str] = None
    primary: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseBulk(DataClassJsonMixin):
    max_operations: Optional[int] = None
    max_payload_size: Optional[int] = None
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseChangePassword(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseEtag(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseFilter(DataClassJsonMixin):
    max_results: Optional[int] = None
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponsePatch(DataClassJsonMixin):
    supported: Optional[bool] = False

class ReadServiceProviderConfigResponseSchemasItem(Enum):
    UrnIetfParamsScimSchemasCore_2_0_ServiceProviderConfig = 'urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseSort(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponseXmlDataFormat(DataClassJsonMixin):
    supported: Optional[bool] = False

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadServiceProviderConfigResponse(DataClassJsonMixin):
    authentication_schemes: Optional[List[ReadServiceProviderConfigResponseAuthenticationSchemesItem]] = None
    bulk: Optional[ReadServiceProviderConfigResponseBulk] = None
    change_password: Optional[ReadServiceProviderConfigResponseChangePassword] = None
    etag: Optional[ReadServiceProviderConfigResponseEtag] = None
    filter: Optional[ReadServiceProviderConfigResponseFilter] = None
    patch: Optional[ReadServiceProviderConfigResponsePatch] = None
    schemas: Optional[List[ReadServiceProviderConfigResponseSchemasItem]] = None
    sort: Optional[ReadServiceProviderConfigResponseSort] = None
    xml_data_format: Optional[ReadServiceProviderConfigResponseXmlDataFormat] = None

class SearchViaGet2Response_ResourcesItemAddressesItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemAddressesItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
    
    Generated by Python OpenAPI Parser
    """
    
    type: SearchViaGet2Response_ResourcesItemAddressesItemType
    country: Optional[str] = None
    locality: Optional[str] = None
    postal_code: Optional[str] = None
    region: Optional[str] = None
    street_address: Optional[str] = None

class SearchViaGet2Response_ResourcesItemEmailsItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemEmailsItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: SearchViaGet2Response_ResourcesItemEmailsItemType
    value: str

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemName(DataClassJsonMixin):
    """
    Required Properties:
     - family_name
     - given_name
    
    Generated by Python OpenAPI Parser
    """
    
    family_name: str
    given_name: str

class SearchViaGet2Response_ResourcesItemPhoneNumbersItemType(Enum):
    Work = 'work'
    Mobile = 'mobile'
    Other = 'other'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemPhoneNumbersItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: SearchViaGet2Response_ResourcesItemPhoneNumbersItemType
    value: str

class SearchViaGet2Response_ResourcesItemPhotosItemType(Enum):
    Photo = 'photo'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemPhotosItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: SearchViaGet2Response_ResourcesItemPhotosItemType
    value: str

class SearchViaGet2Response_ResourcesItemSchemasItem(Enum):
    UrnIetfParamsScimSchemasCore_2_0_User = 'urn:ietf:params:scim:schemas:core:2.0:User'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User(DataClassJsonMixin):
    department: Optional[str] = None

class SearchViaGet2Response_ResourcesItemMetaResourceType(Enum):
    User = 'User'
    Group = 'Group'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItemMeta(DataClassJsonMixin):
    """ resource metadata """
    
    created: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    last_modified: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    location: Optional[str] = None
    """ resource location URI """
    
    resource_type: Optional[SearchViaGet2Response_ResourcesItemMetaResourceType] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response_ResourcesItem(DataClassJsonMixin):
    """
    Required Properties:
     - emails
     - name
     - schemas
     - user_name
    
    Generated by Python OpenAPI Parser
    """
    
    emails: List[SearchViaGet2Response_ResourcesItemEmailsItem]
    name: SearchViaGet2Response_ResourcesItemName
    schemas: List[SearchViaGet2Response_ResourcesItemSchemasItem]
    user_name: str
    """ MUST be same as work type email address """
    
    active: Optional[bool] = False
    """ user status """
    
    addresses: Optional[List[SearchViaGet2Response_ResourcesItemAddressesItem]] = None
    external_id: Optional[str] = None
    """ external unique resource id defined by provisioning client """
    
    id: Optional[str] = None
    """ unique resource id defined by RingCentral """
    
    phone_numbers: Optional[List[SearchViaGet2Response_ResourcesItemPhoneNumbersItem]] = None
    photos: Optional[List[SearchViaGet2Response_ResourcesItemPhotosItem]] = None
    urn_ietf_params_scim_schemas_extension_enterprise_2_0_user: Optional[SearchViaGet2Response_ResourcesItemUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User] = None
    meta: Optional[SearchViaGet2Response_ResourcesItemMeta] = None
    """ resource metadata """
    

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_ListResponse = 'urn:ietf:params:scim:api:messages:2.0:ListResponse'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    resources: Optional[List[SearchViaGet2Response_ResourcesItem]] = None
    """ user list """
    
    items_per_page: Optional[int] = None
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    start_index: Optional[int] = None
    total_results: Optional[int] = None

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class SearchViaGet2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    scim_type: Optional[SearchViaGet2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class SearchViaGet2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    scim_type: Optional[SearchViaGet2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class SearchViaGet2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    scim_type: Optional[SearchViaGet2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class SearchViaGet2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    scim_type: Optional[SearchViaGet2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class SearchViaGet2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class SearchViaGet2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGet2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[SearchViaGet2ResponseSchemasItem]] = None
    scim_type: Optional[SearchViaGet2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2RequestAddressesItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestAddressesItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2RequestAddressesItemType
    country: Optional[str] = None
    locality: Optional[str] = None
    postal_code: Optional[str] = None
    region: Optional[str] = None
    street_address: Optional[str] = None

class CreateUser2RequestEmailsItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestEmailsItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2RequestEmailsItemType
    value: str

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestName(DataClassJsonMixin):
    """
    Required Properties:
     - family_name
     - given_name
    
    Generated by Python OpenAPI Parser
    """
    
    family_name: str
    given_name: str

class CreateUser2RequestPhoneNumbersItemType(Enum):
    Work = 'work'
    Mobile = 'mobile'
    Other = 'other'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestPhoneNumbersItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2RequestPhoneNumbersItemType
    value: str

class CreateUser2RequestPhotosItemType(Enum):
    Photo = 'photo'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestPhotosItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2RequestPhotosItemType
    value: str

class CreateUser2RequestSchemasItem(Enum):
    UrnIetfParamsScimSchemasCore_2_0_User = 'urn:ietf:params:scim:schemas:core:2.0:User'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2RequestUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User(DataClassJsonMixin):
    department: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Request(DataClassJsonMixin):
    """
    Required Properties:
     - emails
     - name
     - schemas
     - user_name
    
    Generated by Python OpenAPI Parser
    """
    
    emails: List[CreateUser2RequestEmailsItem]
    name: CreateUser2RequestName
    schemas: List[CreateUser2RequestSchemasItem]
    user_name: str
    """ MUST be same as work type email address """
    
    active: Optional[bool] = False
    """ User status """
    
    addresses: Optional[List[CreateUser2RequestAddressesItem]] = None
    external_id: Optional[str] = None
    """ external unique resource id defined by provisioning client """
    
    phone_numbers: Optional[List[CreateUser2RequestPhoneNumbersItem]] = None
    photos: Optional[List[CreateUser2RequestPhotosItem]] = None
    urn_ietf_params_scim_schemas_extension_enterprise_2_0_user: Optional[CreateUser2RequestUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User] = None

class CreateUser2ResponseAddressesItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponseAddressesItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2ResponseAddressesItemType
    country: Optional[str] = None
    locality: Optional[str] = None
    postal_code: Optional[str] = None
    region: Optional[str] = None
    street_address: Optional[str] = None

class CreateUser2ResponseEmailsItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponseEmailsItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2ResponseEmailsItemType
    value: str

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponseName(DataClassJsonMixin):
    """
    Required Properties:
     - family_name
     - given_name
    
    Generated by Python OpenAPI Parser
    """
    
    family_name: str
    given_name: str

class CreateUser2ResponsePhoneNumbersItemType(Enum):
    Work = 'work'
    Mobile = 'mobile'
    Other = 'other'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponsePhoneNumbersItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2ResponsePhoneNumbersItemType
    value: str

class CreateUser2ResponsePhotosItemType(Enum):
    Photo = 'photo'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponsePhotosItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
     - value
    
    Generated by Python OpenAPI Parser
    """
    
    type: CreateUser2ResponsePhotosItemType
    value: str

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimSchemasCore_2_0_User = 'urn:ietf:params:scim:schemas:core:2.0:User'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponseUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User(DataClassJsonMixin):
    department: Optional[str] = None

class CreateUser2ResponseMetaResourceType(Enum):
    User = 'User'
    Group = 'Group'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2ResponseMeta(DataClassJsonMixin):
    """ resource metadata """
    
    created: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    last_modified: Optional[datetime] = field(metadata=config(encoder=datetime.isoformat, decoder=datetime_decoder(datetime)), default=None)
    location: Optional[str] = None
    """ resource location URI """
    
    resource_type: Optional[CreateUser2ResponseMetaResourceType] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    """
    Required Properties:
     - emails
     - name
     - schemas
     - user_name
    
    Generated by Python OpenAPI Parser
    """
    
    emails: List[CreateUser2ResponseEmailsItem]
    name: CreateUser2ResponseName
    schemas: List[CreateUser2ResponseSchemasItem]
    user_name: str
    """ MUST be same as work type email address """
    
    active: Optional[bool] = False
    """ user status """
    
    addresses: Optional[List[CreateUser2ResponseAddressesItem]] = None
    external_id: Optional[str] = None
    """ external unique resource id defined by provisioning client """
    
    id: Optional[str] = None
    """ unique resource id defined by RingCentral """
    
    phone_numbers: Optional[List[CreateUser2ResponsePhoneNumbersItem]] = None
    photos: Optional[List[CreateUser2ResponsePhotosItem]] = None
    urn_ietf_params_scim_schemas_extension_enterprise_2_0_user: Optional[CreateUser2ResponseUrnIetfParamsScimSchemasExtensionEnterprise_2_0_User] = None
    meta: Optional[CreateUser2ResponseMeta] = None
    """ resource metadata """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class CreateUser2ResponseSchemasItem(Enum):
    UrnIetfParamsScimApiMessages_2_0_Error = 'urn:ietf:params:scim:api:messages:2.0:Error'

class CreateUser2ResponseScimType(Enum):
    """ bad request type when status code is 400 """
    
    Uniqueness = 'uniqueness'
    TooMany = 'tooMany'
    Mutability = 'mutability'
    Sensitive = 'sensitive'
    InvalidSyntax = 'invalidSyntax'
    InvalidFilter = 'invalidFilter'
    InvalidPath = 'invalidPath'
    InvalidValue = 'invalidValue'
    InvalidVers = 'invalidVers'
    NoTarget = 'noTarget'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUser2Response(DataClassJsonMixin):
    detail: Optional[str] = None
    """ detail error message """
    
    schemas: Optional[List[CreateUser2ResponseSchemasItem]] = None
    scim_type: Optional[CreateUser2ResponseScimType] = None
    """ bad request type when status code is 400 """
    
    status: Optional[str] = None
    """ same as HTTP status code, e.g. 400, 401, etc. """
    

class SearchViaGetResponse_ResourcesItemAddressesItemType(Enum):
    Work = 'work'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class SearchViaGetResponse_ResourcesItemAddressesItem(DataClassJsonMixin):
    """
    Required Properties:
     - type
    
    Generated by Python OpenAPI Parser
    """
    
    type: SearchViaGetResponse_ResourcesItemAddressesItemType
    country: Optional[str] = None
    locality: Optional[str] = None
    postal_code: Optional[str] = None
    region: Optional[str] = None
    street_address: Optional[str] = None
