from ._11 import *

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionGrantsResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListExtensionGrantsResponse(DataClassJsonMixin):
    """
    Required Properties:
     - navigation
     - paging
     - records
    
    Generated by Python OpenAPI Parser
    """
    
    records: List[ListExtensionGrantsResponseRecordsItem]
    """ List of extension grants with details """
    
    navigation: ListExtensionGrantsResponseNavigation
    """ Information on navigation """
    
    paging: ListExtensionGrantsResponsePaging
    """ Information on paging """
    
    uri: Optional[str] = None
    """ Link to the list of extension grants """
    

class ListAutomaticLocationUpdatesUsersType(Enum):
    User = 'User'
    Limited = 'Limited'

class ListAutomaticLocationUpdatesUsersResponseRecordsItemType(Enum):
    """ User extension type """
    
    User = 'User'
    Limited = 'Limited'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    full_name: Optional[str] = None
    """ User name """
    
    extension_number: Optional[str] = None
    feature_enabled: Optional[bool] = None
    """ Specifies if Automatic Location Updates feature is enabled """
    
    type: Optional[ListAutomaticLocationUpdatesUsersResponseRecordsItemType] = None
    """ User extension type """
    
    site: Optional[str] = None
    """ Site data """
    
    department: Optional[str] = None
    """ Department name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponseNavigation(DataClassJsonMixin):
    first_page: Optional[ListAutomaticLocationUpdatesUsersResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListAutomaticLocationUpdatesUsersResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListAutomaticLocationUpdatesUsersResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListAutomaticLocationUpdatesUsersResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponsePaging(DataClassJsonMixin):
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAutomaticLocationUpdatesUsersResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the users list resource """
    
    records: Optional[List[ListAutomaticLocationUpdatesUsersResponseRecordsItem]] = None
    navigation: Optional[ListAutomaticLocationUpdatesUsersResponseNavigation] = None
    paging: Optional[ListAutomaticLocationUpdatesUsersResponsePaging] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultipleAutomaticaLocationUpdatesUsersRequest(DataClassJsonMixin):
    enabled_user_ids: Optional[List[str]] = None
    disabled_user_ids: Optional[List[str]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseRecordsItemSite(DataClassJsonMixin):
    """ Site data (internal identifier and custom name of a site) """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the wireless point resource """
    
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[ListWirelessPointsResponseRecordsItemSite] = None
    """ Site data (internal identifier and custom name of a site) """
    
    emergency_address: Optional[ListWirelessPointsResponseRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location: Optional[ListWirelessPointsResponseRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListWirelessPointsResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListWirelessPointsResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListWirelessPointsResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListWirelessPointsResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListWirelessPointsResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the wireless point list resource """
    
    records: Optional[List[ListWirelessPointsResponseRecordsItem]] = None
    """ List of wireless points with assigned emergency addresses """
    
    navigation: Optional[ListWirelessPointsResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ListWirelessPointsResponsePaging] = None
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointRequestSite(DataClassJsonMixin):
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointRequestEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointRequest(DataClassJsonMixin):
    """
    Required Properties:
     - bssid
     - name
     - emergency_address
    
    Generated by Python OpenAPI Parser
    """
    
    bssid: str
    """
    Unique 48-bit identifier of wireless access point complying with MAC address conventions. The
    Mask is XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F
    """
    
    name: str
    """ Wireless access point name """
    
    emergency_address: CreateWirelessPointRequestEmergencyAddress
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    site: Optional[CreateWirelessPointRequestSite] = None
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Internal identifier of the emergency response location (address). Only one of a
    pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[CreateWirelessPointRequestEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointResponseSite(DataClassJsonMixin):
    """ Site data (internal identifier and custom name of a site) """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateWirelessPointResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the wireless point resource """
    
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[CreateWirelessPointResponseSite] = None
    """ Site data (internal identifier and custom name of a site) """
    
    emergency_address: Optional[CreateWirelessPointResponseEmergencyAddress] = None
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location: Optional[CreateWirelessPointResponseEmergencyLocation] = None
    """ Emergency response location information """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadWirelessPointResponseSite(DataClassJsonMixin):
    """ Site data (internal identifier and custom name of a site) """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadWirelessPointResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadWirelessPointResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadWirelessPointResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the wireless point resource """
    
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[ReadWirelessPointResponseSite] = None
    """ Site data (internal identifier and custom name of a site) """
    
    emergency_address: Optional[ReadWirelessPointResponseEmergencyAddress] = None
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location: Optional[ReadWirelessPointResponseEmergencyLocation] = None
    """ Emergency response location information """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointRequestSite(DataClassJsonMixin):
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointRequestEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointRequest(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """
    Unique 48-bit identifier of wireless access point complying with MAC address conventions. Mask:
    XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F
    """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[UpdateWirelessPointRequestSite] = None
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    """
    
    emergency_address: Optional[UpdateWirelessPointRequestEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Internal identifier of the emergency response location (address). Only one of a
    pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[UpdateWirelessPointRequestEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointResponseSite(DataClassJsonMixin):
    """ Site data (internal identifier and custom name of a site) """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateWirelessPointResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the wireless point resource """
    
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[UpdateWirelessPointResponseSite] = None
    """ Site data (internal identifier and custom name of a site) """
    
    emergency_address: Optional[UpdateWirelessPointResponseEmergencyAddress] = None
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location: Optional[UpdateWirelessPointResponseEmergencyLocation] = None
    """ Emergency response location information """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItemSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItemPublicIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItemPrivateIpRangesItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItemPrivateIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    name: Optional[str] = None
    """ Network name """
    
    emergency_address: Optional[ListNetworksResponseRecordsItemPrivateIpRangesItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a network """
    
    uri: Optional[str] = None
    """ Link to a network resource """
    
    name: Optional[str] = None
    site: Optional[ListNetworksResponseRecordsItemSite] = None
    public_ip_ranges: Optional[List[ListNetworksResponseRecordsItemPublicIpRangesItem]] = None
    private_ip_ranges: Optional[List[ListNetworksResponseRecordsItemPrivateIpRangesItem]] = None
    emergency_location: Optional[ListNetworksResponseRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponseNavigation(DataClassJsonMixin):
    first_page: Optional[ListNetworksResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListNetworksResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListNetworksResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListNetworksResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponsePaging(DataClassJsonMixin):
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListNetworksResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to a networks resource """
    
    records: Optional[List[ListNetworksResponseRecordsItem]] = None
    navigation: Optional[ListNetworksResponseNavigation] = None
    paging: Optional[ListNetworksResponsePaging] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequestSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequestPublicIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequestPrivateIpRangesItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequestPrivateIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    name: Optional[str] = None
    """ Network name """
    
    emergency_address: Optional[CreateNetworkRequestPrivateIpRangesItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkRequest(DataClassJsonMixin):
    name: Optional[str] = None
    site: Optional[CreateNetworkRequestSite] = None
    public_ip_ranges: Optional[List[CreateNetworkRequestPublicIpRangesItem]] = None
    private_ip_ranges: Optional[List[CreateNetworkRequestPrivateIpRangesItem]] = None
    emergency_location: Optional[CreateNetworkRequestEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponseSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponsePublicIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponsePrivateIpRangesItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponsePrivateIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    name: Optional[str] = None
    """ Network name """
    
    emergency_address: Optional[CreateNetworkResponsePrivateIpRangesItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateNetworkResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a network """
    
    uri: Optional[str] = None
    """ Link to a network resource """
    
    name: Optional[str] = None
    site: Optional[CreateNetworkResponseSite] = None
    public_ip_ranges: Optional[List[CreateNetworkResponsePublicIpRangesItem]] = None
    private_ip_ranges: Optional[List[CreateNetworkResponsePrivateIpRangesItem]] = None
    emergency_location: Optional[CreateNetworkResponseEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponseSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponsePublicIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponsePrivateIpRangesItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponsePrivateIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    name: Optional[str] = None
    """ Network name """
    
    emergency_address: Optional[ReadNetworkResponsePrivateIpRangesItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNetworkResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a network """
    
    uri: Optional[str] = None
    """ Link to a network resource """
    
    name: Optional[str] = None
    site: Optional[ReadNetworkResponseSite] = None
    public_ip_ranges: Optional[List[ReadNetworkResponsePublicIpRangesItem]] = None
    private_ip_ranges: Optional[List[ReadNetworkResponsePrivateIpRangesItem]] = None
    emergency_location: Optional[ReadNetworkResponseEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequestSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequestPublicIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    matched: Optional[bool] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequestPrivateIpRangesItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequestPrivateIpRangesItem(DataClassJsonMixin):
    id: Optional[str] = None
    start_ip: Optional[str] = None
    end_ip: Optional[str] = None
    name: Optional[str] = None
    """ Network name """
    
    emergency_address: Optional[UpdateNetworkRequestPrivateIpRangesItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNetworkRequest(DataClassJsonMixin):
    name: Optional[str] = None
    site: Optional[UpdateNetworkRequestSite] = None
    public_ip_ranges: Optional[List[UpdateNetworkRequestPublicIpRangesItem]] = None
    private_ip_ranges: Optional[List[UpdateNetworkRequestPrivateIpRangesItem]] = None
    emergency_location: Optional[UpdateNetworkRequestEmergencyLocation] = None
    """ Emergency response location information """
    

class ListDevicesAutomaticLocationUpdatesResponseRecordsItemType(Enum):
    """ Device type """
    
    HardPhone = 'HardPhone'
    SoftPhone = 'SoftPhone'
    OtherPhone = 'OtherPhone'

class ListDevicesAutomaticLocationUpdatesResponseRecordsItemModelFeaturesItem(Enum):
    BLA = 'BLA'
    Intercom = 'Intercom'
    Paging = 'Paging'
    HELD = 'HELD'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseRecordsItemModel(DataClassJsonMixin):
    """ HardPhone model information """
    
    id: Optional[str] = None
    """ Device model identifier """
    
    name: Optional[str] = None
    """ Device name """
    
    features: Optional[List[ListDevicesAutomaticLocationUpdatesResponseRecordsItemModelFeaturesItem]] = None
    """ Device feature or multiple features supported """
    

class ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItemLineType(Enum):
    Unknown = 'Unknown'
    Standalone = 'Standalone'
    StandaloneFree = 'StandaloneFree'
    BlaPrimary = 'BlaPrimary'
    BlaSecondary = 'BlaSecondary'
    BLF = 'BLF'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItemPhoneInfo(DataClassJsonMixin):
    id: Optional[int] = None
    """ Internal identifier of a phone number """
    
    phone_number: Optional[str] = None
    """ Phone number """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItem(DataClassJsonMixin):
    line_type: Optional[ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItemLineType] = None
    phone_info: Optional[ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItemPhoneInfo] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a device """
    
    type: Optional[ListDevicesAutomaticLocationUpdatesResponseRecordsItemType] = 'HardPhone'
    """ Device type """
    
    serial: Optional[str] = None
    """ Serial number for HardPhone (is returned only when the phone is shipped and provisioned) """
    
    feature_enabled: Optional[bool] = None
    """ Specifies if Automatic Location Updates feature is enabled """
    
    name: Optional[str] = None
    """ Device name """
    
    model: Optional[ListDevicesAutomaticLocationUpdatesResponseRecordsItemModel] = None
    """ HardPhone model information """
    
    site: Optional[str] = None
    """ Site data """
    
    phone_lines: Optional[List[ListDevicesAutomaticLocationUpdatesResponseRecordsItemPhoneLinesItem]] = None
    """ Phone lines information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponseNavigation(DataClassJsonMixin):
    first_page: Optional[ListDevicesAutomaticLocationUpdatesResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListDevicesAutomaticLocationUpdatesResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListDevicesAutomaticLocationUpdatesResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListDevicesAutomaticLocationUpdatesResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponsePaging(DataClassJsonMixin):
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListDevicesAutomaticLocationUpdatesResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to devices resource """
    
    records: Optional[List[ListDevicesAutomaticLocationUpdatesResponseRecordsItem]] = None
    """ List of users' devices with the current status of Emergency Address Auto Update Feature """
    
    navigation: Optional[ListDevicesAutomaticLocationUpdatesResponseNavigation] = None
    paging: Optional[ListDevicesAutomaticLocationUpdatesResponsePaging] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class AssignMultipleDevicesAutomaticLocationUpdatesRequest(DataClassJsonMixin):
    enabled_device_ids: Optional[List[str]] = None
    disabled_device_ids: Optional[List[str]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseRecordsItemSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the network switch resource """
    
    id: Optional[str] = None
    """ Internal identifier of a network switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[ListAccountSwitchesResponseRecordsItemSite] = None
    """ Site data """
    
    emergency_address: Optional[ListAccountSwitchesResponseRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[ListAccountSwitchesResponseRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponseNavigation(DataClassJsonMixin):
    first_page: Optional[ListAccountSwitchesResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListAccountSwitchesResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListAccountSwitchesResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListAccountSwitchesResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponsePaging(DataClassJsonMixin):
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListAccountSwitchesResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the switches list resource """
    
    records: Optional[List[ListAccountSwitchesResponseRecordsItem]] = None
    """ Switches map """
    
    navigation: Optional[ListAccountSwitchesResponseNavigation] = None
    paging: Optional[ListAccountSwitchesResponsePaging] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchRequestSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchRequestEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchRequest(DataClassJsonMixin):
    """
    Required Properties:
     - chassis_id
    
    Generated by Python OpenAPI Parser
    """
    
    chassis_id: str
    """
    Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols
    0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)
    """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[CreateSwitchRequestSite] = None
    """ Site data """
    
    emergency_address: Optional[CreateSwitchRequestEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[CreateSwitchRequestEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchResponseSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateSwitchResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the network switch resource """
    
    id: Optional[str] = None
    """ Internal identifier of a network switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[CreateSwitchResponseSite] = None
    """ Site data """
    
    emergency_address: Optional[CreateSwitchResponseEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[CreateSwitchResponseEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadSwitchResponseSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadSwitchResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadSwitchResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadSwitchResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the network switch resource """
    
    id: Optional[str] = None
    """ Internal identifier of a network switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[ReadSwitchResponseSite] = None
    """ Site data """
    
    emergency_address: Optional[ReadSwitchResponseEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[ReadSwitchResponseEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchRequestSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchRequestEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchRequestEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchRequest(DataClassJsonMixin):
    id: Optional[str] = None
    """ internal identifier of a switch """
    
    chassis_id: Optional[str] = None
    """
    Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols
    0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)
    """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[UpdateSwitchRequestSite] = None
    """ Site data """
    
    emergency_address: Optional[UpdateSwitchRequestEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[UpdateSwitchRequestEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchResponseSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchResponseEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchResponseEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateSwitchResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the network switch resource """
    
    id: Optional[str] = None
    """ Internal identifier of a network switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[UpdateSwitchResponseSite] = None
    """ Site data """
    
    emergency_address: Optional[UpdateSwitchResponseEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[UpdateSwitchResponseEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesRequestRecordsItemSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesRequestRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesRequestRecordsItem(DataClassJsonMixin):
    """
    Required Properties:
     - chassis_id
    
    Generated by Python OpenAPI Parser
    """
    
    chassis_id: str
    """
    Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols
    0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)
    """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[CreateMultipleSwitchesRequestRecordsItemSite] = None
    """ Site data """
    
    emergency_address: Optional[CreateMultipleSwitchesRequestRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[CreateMultipleSwitchesRequestRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesRequest(DataClassJsonMixin):
    records: Optional[List[CreateMultipleSwitchesRequestRecordsItem]] = None

class CreateMultipleSwitchesResponseTaskStatus(Enum):
    """ Status of a task """
    
    Accepted = 'Accepted'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesResponseTask(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a task for multiple switches creation """
    
    status: Optional[CreateMultipleSwitchesResponseTaskStatus] = None
    """ Status of a task """
    
    creation_time: Optional[str] = None
    """ Task creation time """
    
    last_modified_time: Optional[str] = None
    """ Time of the task latest modification """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleSwitchesResponse(DataClassJsonMixin):
    """ Information on the task for multiple switches creation """
    
    task: Optional[CreateMultipleSwitchesResponseTask] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesRequestRecordsItemSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesRequestRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesRequestRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ internal identifier of a switch """
    
    chassis_id: Optional[str] = None
    """
    Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols
    0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)
    """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[UpdateMultipleSwitchesRequestRecordsItemSite] = None
    """ Site data """
    
    emergency_address: Optional[UpdateMultipleSwitchesRequestRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[UpdateMultipleSwitchesRequestRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesRequest(DataClassJsonMixin):
    records: Optional[List[UpdateMultipleSwitchesRequestRecordsItem]] = None

class UpdateMultipleSwitchesResponseTaskStatus(Enum):
    """ Status of a task """
    
    Accepted = 'Accepted'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesResponseTask(DataClassJsonMixin):
    """ Information on the task for multiple switches update """
    
    id: Optional[str] = None
    """ Internal identifier of a task for multiple switches creation """
    
    status: Optional[UpdateMultipleSwitchesResponseTaskStatus] = None
    """ Status of a task """
    
    creation_time: Optional[str] = None
    """ Task creation time """
    
    last_modified_time: Optional[str] = None
    """ Time of the task latest modification """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleSwitchesResponse(DataClassJsonMixin):
    task: Optional[UpdateMultipleSwitchesResponseTask] = None
    """ Information on the task for multiple switches update """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsRequestRecordsItemSite(DataClassJsonMixin):
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsRequestRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsRequestRecordsItem(DataClassJsonMixin):
    """
    Required Properties:
     - bssid
     - name
     - emergency_address
    
    Generated by Python OpenAPI Parser
    """
    
    bssid: str
    """
    Unique 48-bit identifier of wireless access point complying with MAC address conventions. The
    Mask is XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F
    """
    
    name: str
    """ Wireless access point name """
    
    emergency_address: CreateMultipleWirelessPointsRequestRecordsItemEmergencyAddress
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    site: Optional[CreateMultipleWirelessPointsRequestRecordsItemSite] = None
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Internal identifier of the emergency response location (address). Only one of a
    pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[CreateMultipleWirelessPointsRequestRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsRequest(DataClassJsonMixin):
    records: Optional[List[CreateMultipleWirelessPointsRequestRecordsItem]] = None

class CreateMultipleWirelessPointsResponseTaskStatus(Enum):
    """ Status of a task """
    
    Accepted = 'Accepted'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsResponseTask(DataClassJsonMixin):
    """ Information on the task for multiple wireless points creation """
    
    id: Optional[str] = None
    """ Internal identifier of a task for multiple switches creation """
    
    status: Optional[CreateMultipleWirelessPointsResponseTaskStatus] = None
    """ Status of a task """
    
    creation_time: Optional[str] = None
    """ Task creation time """
    
    last_modified_time: Optional[str] = None
    """ Time of the task latest modification """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateMultipleWirelessPointsResponse(DataClassJsonMixin):
    task: Optional[CreateMultipleWirelessPointsResponseTask] = None
    """ Information on the task for multiple wireless points creation """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsRequestRecordsItemSite(DataClassJsonMixin):
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    
    Generated by Python OpenAPI Parser
    """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsRequestRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsRequestRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """
    Unique 48-bit identifier of wireless access point complying with MAC address conventions. Mask:
    XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F
    """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[UpdateMultipleWirelessPointsRequestRecordsItemSite] = None
    """
    Site data. If multi-site feature is turned on for the account, then internal identifier of a
    site must be specified. To assign the wireless point to the main site (company) set site ID to
    `main-site`
    """
    
    emergency_address: Optional[UpdateMultipleWirelessPointsRequestRecordsItemEmergencyAddress] = None
    """
    Emergency address information. Only one of a pair `emergencyAddress` or `emergencyLocationId`
    should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Internal identifier of the emergency response location (address). Only one of a
    pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[UpdateMultipleWirelessPointsRequestRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsRequest(DataClassJsonMixin):
    records: Optional[List[UpdateMultipleWirelessPointsRequestRecordsItem]] = None

class UpdateMultipleWirelessPointsResponseTaskStatus(Enum):
    """ Status of a task """
    
    Accepted = 'Accepted'
    Failed = 'Failed'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsResponseTask(DataClassJsonMixin):
    """ Information on the task for multiple wireless points update """
    
    id: Optional[str] = None
    """ Internal identifier of a task for multiple switches creation """
    
    status: Optional[UpdateMultipleWirelessPointsResponseTaskStatus] = None
    """ Status of a task """
    
    creation_time: Optional[str] = None
    """ Task creation time """
    
    last_modified_time: Optional[str] = None
    """ Time of the task latest modification """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateMultipleWirelessPointsResponse(DataClassJsonMixin):
    task: Optional[UpdateMultipleWirelessPointsResponseTask] = None
    """ Information on the task for multiple wireless points update """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsRequestRecordsItemSite(DataClassJsonMixin):
    """ Site data (internal identifier and custom name of a site) """
    
    id: Optional[str] = None
    """ Internal identifier of a site """
    
    uri: Optional[str] = None
    """ Link to a site resource """
    
    name: Optional[str] = None
    """ Name of a site """
    
    code: Optional[str] = None
    """ Site code value. Returned only if specified """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsRequestRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    name: Optional[str] = None
    """ Wireless access point name """
    
    site: Optional[ValidateMultipleWirelessPointsRequestRecordsItemSite] = None
    """ Site data (internal identifier and custom name of a site) """
    
    emergency_address: Optional[ValidateMultipleWirelessPointsRequestRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the wireless point. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsRequest(DataClassJsonMixin):
    records: Optional[List[ValidateMultipleWirelessPointsRequestRecordsItem]] = None

class ValidateMultipleWirelessPointsResponseRecordsItemStatus(Enum):
    """ Validation result status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsResponseRecordsItemErrorsItem(DataClassJsonMixin):
    error_code: Optional[str] = None
    """ Error code """
    
    message: Optional[str] = None
    """ Error message """
    
    parameter_name: Optional[str] = None
    """ Name of invalid parameter """
    
    feature_name: Optional[str] = None
    parameter_value: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a wireless point """
    
    bssid: Optional[str] = None
    """ Unique 48-bit identifier of the wireless access point complying with MAC address conventions """
    
    status: Optional[ValidateMultipleWirelessPointsResponseRecordsItemStatus] = None
    """ Validation result status """
    
    errors: Optional[List[ValidateMultipleWirelessPointsResponseRecordsItemErrorsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleWirelessPointsResponse(DataClassJsonMixin):
    records: Optional[List[ValidateMultipleWirelessPointsResponseRecordsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesRequestRecordsItemSite(DataClassJsonMixin):
    """ Site data """
    
    id: Optional[str] = None
    """ Internal identifier of a site. The company identifier value is 'main-site' """
    
    name: Optional[str] = None
    """ Name of a site """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesRequestRecordsItemEmergencyAddress(DataClassJsonMixin):
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    
    Generated by Python OpenAPI Parser
    """
    
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    customer_name: Optional[str] = None
    """ Customer name """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesRequestRecordsItemEmergencyLocation(DataClassJsonMixin):
    """ Emergency response location information """
    
    id: Optional[str] = None
    """ Internal identifier of an emergency response location """
    
    name: Optional[str] = None
    """ Emergency response location name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesRequestRecordsItem(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Link to the network switch resource """
    
    id: Optional[str] = None
    """ Internal identifier of a network switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    name: Optional[str] = None
    """ Name of a network switch """
    
    site: Optional[ValidateMultipleSwitchesRequestRecordsItemSite] = None
    """ Site data """
    
    emergency_address: Optional[ValidateMultipleSwitchesRequestRecordsItemEmergencyAddress] = None
    """
    Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or
    `emergencyLocationId` should be specified, otherwise the error is returned
    """
    
    emergency_location_id: Optional[str] = None
    """
    Deprecated. Emergency response location (address) internal identifier. Only one of a pair
    `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is
    returned
    """
    
    emergency_location: Optional[ValidateMultipleSwitchesRequestRecordsItemEmergencyLocation] = None
    """ Emergency response location information """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesRequest(DataClassJsonMixin):
    records: Optional[List[ValidateMultipleSwitchesRequestRecordsItem]] = None

class ValidateMultipleSwitchesResponseRecordsItemStatus(Enum):
    """ Validation result status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesResponseRecordsItemErrorsItem(DataClassJsonMixin):
    error_code: Optional[str] = None
    """ Error code """
    
    message: Optional[str] = None
    """ Error message """
    
    parameter_name: Optional[str] = None
    """ Name of invalid parameter """
    
    feature_name: Optional[str] = None
    parameter_value: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a switch """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch """
    
    status: Optional[ValidateMultipleSwitchesResponseRecordsItemStatus] = None
    """ Validation result status """
    
    errors: Optional[List[ValidateMultipleSwitchesResponseRecordsItemErrorsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ValidateMultipleSwitchesResponse(DataClassJsonMixin):
    records: Optional[List[ValidateMultipleSwitchesResponseRecordsItem]] = None

class ReadAutomaticLocationUpdatesTaskResponseStatus(Enum):
    """ Status of a task """
    
    Accepted = 'Accepted'
    InProgress = 'InProgress'
    Completed = 'Completed'
    Failed = 'Failed'

class ReadAutomaticLocationUpdatesTaskResponseType(Enum):
    """ Type of a task """
    
    WirelessPointsBulkCreate = 'WirelessPointsBulkCreate'
    WirelessPointsBulkUpdate = 'WirelessPointsBulkUpdate'
    SwitchesBulkCreate = 'SwitchesBulkCreate'
    SwitchesBulkUpdate = 'SwitchesBulkUpdate'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadAutomaticLocationUpdatesTaskResponseResultRecordsItemErrorsItem(DataClassJsonMixin):
    error_code: Optional[str] = None
    message: Optional[str] = None
    parameter_name: Optional[str] = None
    description: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadAutomaticLocationUpdatesTaskResponseResultRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of the created/updated element - wireless point or network switch """
    
    bssid: Optional[str] = None
    """
    Unique 48-bit identifier of the wireless access point complying with MAC address conventions.
    Returned only for 'Wireless Points Bulk Create' tasks
    """
    
    chassis_id: Optional[str] = None
    """ Unique identifier of a network switch. Returned only for 'Switches Bulk Create' tasks """
    
    status: Optional[str] = None
    """ Operation status """
    
    errors: Optional[List[ReadAutomaticLocationUpdatesTaskResponseResultRecordsItemErrorsItem]] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadAutomaticLocationUpdatesTaskResponseResult(DataClassJsonMixin):
    """ Task detailed result. Returned for failed and completed tasks """
    
    records: Optional[List[ReadAutomaticLocationUpdatesTaskResponseResultRecordsItem]] = None
    """ Detailed task results by elements from initial request """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadAutomaticLocationUpdatesTaskResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a task """
    
    status: Optional[ReadAutomaticLocationUpdatesTaskResponseStatus] = None
    """ Status of a task """
    
    creation_time: Optional[str] = None
    """ Task creation time """
    
    last_modified_time: Optional[str] = None
    """ Time of the task latest modification """
    
    type: Optional[ReadAutomaticLocationUpdatesTaskResponseType] = None
    """ Type of a task """
    
    result: Optional[ReadAutomaticLocationUpdatesTaskResponseResult] = None
    """ Task detailed result. Returned for failed and completed tasks """
    

class ListEmergencyLocationsAddressStatus(Enum):
    Valid = 'Valid'
    Invalid = 'Invalid'

class ListEmergencyLocationsUsageStatus(Enum):
    Active = 'Active'
    Inactive = 'Inactive'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseRecordsItemAddress(DataClassJsonMixin):
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    
    customer_name: Optional[str] = None
    """ Customer name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseRecordsItemSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal idetifier of a site extension """
    
    name: Optional[str] = None
    """ Extension user first name """
    

class ListEmergencyLocationsResponseRecordsItemAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class ListEmergencyLocationsResponseRecordsItemUsageStatus(Enum):
    """ Status of emergency response location usage. """
    
    Active = 'Active'
    Inactive = 'Inactive'

class ListEmergencyLocationsResponseRecordsItemSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    ActivationProcess = 'ActivationProcess'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class ListEmergencyLocationsResponseRecordsItemVisibility(Enum):
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    
    Generated by Python OpenAPI Parser
    """
    
    Private = 'Private'
    Public = 'Public'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseRecordsItemOwnersItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a user - private location owner """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseRecordsItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    address: Optional[ListEmergencyLocationsResponseRecordsItemAddress] = None
    name: Optional[str] = None
    """ Emergency response location name """
    
    site: Optional[ListEmergencyLocationsResponseRecordsItemSite] = None
    address_status: Optional[ListEmergencyLocationsResponseRecordsItemAddressStatus] = None
    """ Emergency address status """
    
    usage_status: Optional[ListEmergencyLocationsResponseRecordsItemUsageStatus] = None
    """ Status of emergency response location usage. """
    
    sync_status: Optional[ListEmergencyLocationsResponseRecordsItemSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    visibility: Optional[ListEmergencyLocationsResponseRecordsItemVisibility] = 'Public'
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    """
    
    owners: Optional[List[ListEmergencyLocationsResponseRecordsItemOwnersItem]] = None
    """ List of private location owners """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseNavigationFirstPage(DataClassJsonMixin):
    """ Canonical URI for the first page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseNavigationNextPage(DataClassJsonMixin):
    """ Canonical URI for the next page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseNavigationPreviousPage(DataClassJsonMixin):
    """ Canonical URI for the previous page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseNavigationLastPage(DataClassJsonMixin):
    """ Canonical URI for the last page of the list """
    
    uri: Optional[str] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponseNavigation(DataClassJsonMixin):
    """ Information on navigation """
    
    first_page: Optional[ListEmergencyLocationsResponseNavigationFirstPage] = None
    """ Canonical URI for the first page of the list """
    
    next_page: Optional[ListEmergencyLocationsResponseNavigationNextPage] = None
    """ Canonical URI for the next page of the list """
    
    previous_page: Optional[ListEmergencyLocationsResponseNavigationPreviousPage] = None
    """ Canonical URI for the previous page of the list """
    
    last_page: Optional[ListEmergencyLocationsResponseNavigationLastPage] = None
    """ Canonical URI for the last page of the list """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponsePaging(DataClassJsonMixin):
    """ Information on paging """
    
    page: Optional[int] = None
    """
    The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result
    is empty (because non-existent page was specified or perPage=0 was requested)
    """
    
    per_page: Optional[int] = None
    """
    Current page size, describes how many items are in each page. Default value is 100. Maximum
    value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000)
    is applied
    """
    
    page_start: Optional[int] = None
    """
    The zero-based number of the first element on the current page. Omitted if the page is omitted
    or result is empty
    """
    
    page_end: Optional[int] = None
    """
    The zero-based index of the last element on the current page. Omitted if the page is omitted or
    result is empty
    """
    
    total_pages: Optional[int] = None
    """
    The total number of pages in a dataset. May be omitted for some resources due to performance
    reasons
    """
    
    total_elements: Optional[int] = None
    """
    The total number of elements in a dataset. May be omitted for some resource due to performance
    reasons
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ListEmergencyLocationsResponse(DataClassJsonMixin):
    records: Optional[List[ListEmergencyLocationsResponseRecordsItem]] = None
    navigation: Optional[ListEmergencyLocationsResponseNavigation] = None
    """ Information on navigation """
    
    paging: Optional[ListEmergencyLocationsResponsePaging] = None
    """ Information on paging """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateEmergencyLocationRequestAddress(DataClassJsonMixin):
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    
    customer_name: Optional[str] = None
    """ Customer name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateEmergencyLocationRequestSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal idetifier of a site extension """
    
    name: Optional[str] = None
    """ Extension user first name """
    

class CreateEmergencyLocationRequestAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class CreateEmergencyLocationRequestUsageStatus(Enum):
    """ Status of emergency response location usage. """
    
    Active = 'Active'
    Inactive = 'Inactive'

class CreateEmergencyLocationRequestVisibility(Enum):
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    
    Generated by Python OpenAPI Parser
    """
    
    Private = 'Private'
    Public = 'Public'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateEmergencyLocationRequestOwnersItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a user - private location owner """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateEmergencyLocationRequest(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    address: Optional[CreateEmergencyLocationRequestAddress] = None
    name: Optional[str] = None
    """ Emergency response location name """
    
    site: Optional[CreateEmergencyLocationRequestSite] = None
    address_status: Optional[CreateEmergencyLocationRequestAddressStatus] = None
    """ Emergency address status """
    
    usage_status: Optional[CreateEmergencyLocationRequestUsageStatus] = None
    """ Status of emergency response location usage. """
    
    visibility: Optional[CreateEmergencyLocationRequestVisibility] = 'Public'
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    """
    
    owners: Optional[List[CreateEmergencyLocationRequestOwnersItem]] = None
    """ List of private location owners """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadEmergencyLocationResponseAddress(DataClassJsonMixin):
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    
    customer_name: Optional[str] = None
    """ Customer name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadEmergencyLocationResponseSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal idetifier of a site extension """
    
    name: Optional[str] = None
    """ Extension user first name """
    

class ReadEmergencyLocationResponseAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class ReadEmergencyLocationResponseUsageStatus(Enum):
    """ Status of emergency response location usage. """
    
    Active = 'Active'
    Inactive = 'Inactive'

class ReadEmergencyLocationResponseSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    ActivationProcess = 'ActivationProcess'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class ReadEmergencyLocationResponseVisibility(Enum):
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    
    Generated by Python OpenAPI Parser
    """
    
    Private = 'Private'
    Public = 'Public'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadEmergencyLocationResponseOwnersItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a user - private location owner """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadEmergencyLocationResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    address: Optional[ReadEmergencyLocationResponseAddress] = None
    name: Optional[str] = None
    """ Emergency response location name """
    
    site: Optional[ReadEmergencyLocationResponseSite] = None
    address_status: Optional[ReadEmergencyLocationResponseAddressStatus] = None
    """ Emergency address status """
    
    usage_status: Optional[ReadEmergencyLocationResponseUsageStatus] = None
    """ Status of emergency response location usage. """
    
    sync_status: Optional[ReadEmergencyLocationResponseSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    visibility: Optional[ReadEmergencyLocationResponseVisibility] = 'Public'
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    """
    
    owners: Optional[List[ReadEmergencyLocationResponseOwnersItem]] = None
    """ List of private location owners """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateEmergencyLocationResponseAddress(DataClassJsonMixin):
    country: Optional[str] = None
    """ Country name """
    
    country_id: Optional[str] = None
    """ Internal identifier of a country """
    
    country_iso_code: Optional[str] = None
    """ ISO code of a country """
    
    country_name: Optional[str] = None
    """ Full name of a country """
    
    state: Optional[str] = None
    """ State/Province name. Mandatory for the USA, the UK and Canada """
    
    state_id: Optional[str] = None
    """ Internal identifier of a state """
    
    state_iso_code: Optional[str] = None
    """ ISO code of a state """
    
    state_name: Optional[str] = None
    """ Full name of a state """
    
    city: Optional[str] = None
    """ City name """
    
    street: Optional[str] = None
    """ First line address """
    
    street2: Optional[str] = None
    """ Second line address (apartment, suite, unit, building, floor, etc.) """
    
    zip: Optional[str] = None
    """ Postal (Zip) code """
    
    customer_name: Optional[str] = None
    """ Customer name """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateEmergencyLocationResponseSite(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal idetifier of a site extension """
    
    name: Optional[str] = None
    """ Extension user first name """
    

class UpdateEmergencyLocationResponseAddressStatus(Enum):
    """ Emergency address status """
    
    Valid = 'Valid'
    Invalid = 'Invalid'

class UpdateEmergencyLocationResponseUsageStatus(Enum):
    """ Status of emergency response location usage. """
    
    Active = 'Active'
    Inactive = 'Inactive'

class UpdateEmergencyLocationResponseSyncStatus(Enum):
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    
    Generated by Python OpenAPI Parser
    """
    
    Verified = 'Verified'
    Updated = 'Updated'
    Deleted = 'Deleted'
    ActivationProcess = 'ActivationProcess'
    Unsupported = 'Unsupported'
    Failed = 'Failed'

class UpdateEmergencyLocationResponseVisibility(Enum):
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    
    Generated by Python OpenAPI Parser
    """
    
    Private = 'Private'
    Public = 'Public'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateEmergencyLocationResponseOwnersItem(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of a user - private location owner """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateEmergencyLocationResponse(DataClassJsonMixin):
    id: Optional[str] = None
    """ Internal identifier of the emergency response location """
    
    address: Optional[UpdateEmergencyLocationResponseAddress] = None
    name: Optional[str] = None
    """ Emergency response location name """
    
    site: Optional[UpdateEmergencyLocationResponseSite] = None
    address_status: Optional[UpdateEmergencyLocationResponseAddressStatus] = None
    """ Emergency address status """
    
    usage_status: Optional[UpdateEmergencyLocationResponseUsageStatus] = None
    """ Status of emergency response location usage. """
    
    sync_status: Optional[UpdateEmergencyLocationResponseSyncStatus] = None
    """
    Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress`
    parameter is set to 'True'
    """
    
    visibility: Optional[UpdateEmergencyLocationResponseVisibility] = 'Public'
    """
    Visibility of an emergency response location. If `Private` is set, then location is visible
    only for restricted number of users, specified in `owners` array
    """
    
    owners: Optional[List[UpdateEmergencyLocationResponseOwnersItem]] = None
    """ List of private location owners """
    

class ReadNotificationSettingsResponseEmailRecipientsItemStatus(Enum):
    """ Current state of an extension """
    
    Enabled = 'Enabled'
    Disable = 'Disable'
    NotActivated = 'NotActivated'
    Unassigned = 'Unassigned'

class ReadNotificationSettingsResponseEmailRecipientsItemPermission(Enum):
    """ Call queue manager permission """
    
    FullAccess = 'FullAccess'
    MembersOnly = 'MembersOnly'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseEmailRecipientsItem(DataClassJsonMixin):
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    full_name: Optional[str] = None
    """ User full name """
    
    extension_number: Optional[str] = None
    """ User extension number """
    
    status: Optional[ReadNotificationSettingsResponseEmailRecipientsItemStatus] = None
    """ Current state of an extension """
    
    email_addresses: Optional[List[str]] = None
    """
    List of user email addresses from extension notification settings. By default main email
    address from contact information is returned
    """
    
    permission: Optional[ReadNotificationSettingsResponseEmailRecipientsItemPermission] = None
    """ Call queue manager permission """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseVoicemails(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether voicemail should be attached to email """
    
    include_transcription: Optional[bool] = None
    """ Specifies whether to add voicemail transcription or not """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether a voicemail should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseInboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether fax should be attached to email """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether email should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseOutboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for outbound fax notifications. Returned if specified, in
    both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for outbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseInboundTexts(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound text message notifications. Returned if
    specified, in both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound text message notifications. Returned if specified,
    in both modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponseMissedCalls(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadNotificationSettingsResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Canonical URI of notifications settings resource """
    
    email_recipients: Optional[List[ReadNotificationSettingsResponseEmailRecipientsItem]] = None
    """
    List of extensions specified as email notification recipients. Returned only for call queues
    where queue managers are assigned as user extensions.
    """
    
    email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    sms_email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    advanced_mode: Optional[bool] = None
    """
    Specifies notifications settings mode. If 'True' then advanced mode is on, it allows using
    different emails and/or phone numbers for each notification type. If 'False' then basic mode is
    on. Advanced mode settings are returned in both modes, if specified once, but if basic mode is
    switched on, they are not applied
    """
    
    voicemails: Optional[ReadNotificationSettingsResponseVoicemails] = None
    inbound_faxes: Optional[ReadNotificationSettingsResponseInboundFaxes] = None
    outbound_faxes: Optional[ReadNotificationSettingsResponseOutboundFaxes] = None
    inbound_texts: Optional[ReadNotificationSettingsResponseInboundTexts] = None
    missed_calls: Optional[ReadNotificationSettingsResponseMissedCalls] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequestVoicemails(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether voicemail should be attached to email """
    
    include_transcription: Optional[bool] = None
    """ Specifies whether to add voicemail transcription or not """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether a voicemail should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequestInboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether fax should be attached to email """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether email should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequestOutboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for outbound fax notifications. Returned if specified, in
    both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for outbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequestInboundTexts(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound text message notifications. Returned if
    specified, in both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound text message notifications. Returned if specified,
    in both modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequestMissedCalls(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsRequest(DataClassJsonMixin):
    email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    sms_email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    advanced_mode: Optional[bool] = None
    """
    Specifies notifications settings mode. If 'True' then advanced mode is on, it allows using
    different emails and/or phone numbers for each notification type. If 'False' then basic mode is
    on. Advanced mode settings are returned in both modes, if specified once, but if basic mode is
    switched on, they are not applied
    """
    
    voicemails: Optional[UpdateNotificationSettingsRequestVoicemails] = None
    inbound_faxes: Optional[UpdateNotificationSettingsRequestInboundFaxes] = None
    outbound_faxes: Optional[UpdateNotificationSettingsRequestOutboundFaxes] = None
    inbound_texts: Optional[UpdateNotificationSettingsRequestInboundTexts] = None
    missed_calls: Optional[UpdateNotificationSettingsRequestMissedCalls] = None

class UpdateNotificationSettingsResponseEmailRecipientsItemStatus(Enum):
    """ Current state of an extension """
    
    Enabled = 'Enabled'
    Disable = 'Disable'
    NotActivated = 'NotActivated'
    Unassigned = 'Unassigned'

class UpdateNotificationSettingsResponseEmailRecipientsItemPermission(Enum):
    """ Call queue manager permission """
    
    FullAccess = 'FullAccess'
    MembersOnly = 'MembersOnly'

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseEmailRecipientsItem(DataClassJsonMixin):
    extension_id: Optional[str] = None
    """ Internal identifier of an extension """
    
    full_name: Optional[str] = None
    """ User full name """
    
    extension_number: Optional[str] = None
    """ User extension number """
    
    status: Optional[UpdateNotificationSettingsResponseEmailRecipientsItemStatus] = None
    """ Current state of an extension """
    
    email_addresses: Optional[List[str]] = None
    """
    List of user email addresses from extension notification settings. By default main email
    address from contact information is returned
    """
    
    permission: Optional[UpdateNotificationSettingsResponseEmailRecipientsItemPermission] = None
    """ Call queue manager permission """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseVoicemails(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for voicemail notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether voicemail should be attached to email """
    
    include_transcription: Optional[bool] = None
    """ Specifies whether to add voicemail transcription or not """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether a voicemail should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseInboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    include_attachment: Optional[bool] = None
    """ Indicates whether fax should be attached to email """
    
    mark_as_read: Optional[bool] = None
    """ Indicates whether email should be automatically marked as read """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseOutboundFaxes(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for outbound fax notifications. Returned if specified, in
    both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for outbound fax notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseInboundTexts(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for inbound text message notifications. Returned if
    specified, in both modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for inbound text message notifications. Returned if specified,
    in both modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponseMissedCalls(DataClassJsonMixin):
    notify_by_email: Optional[bool] = None
    """ Email notification flag """
    
    notify_by_sms: Optional[bool] = None
    """ SMS notification flag """
    
    advanced_email_addresses: Optional[List[str]] = None
    """
    List of recipient email addresses for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    
    advanced_sms_email_addresses: Optional[List[str]] = None
    """
    List of recipient phone numbers for missed call notifications. Returned if specified, in both
    modes (advanced/basic). Applied in advanced mode only
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateNotificationSettingsResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Canonical URI of notifications settings resource """
    
    email_recipients: Optional[List[UpdateNotificationSettingsResponseEmailRecipientsItem]] = None
    """
    List of extensions specified as email notification recipients. Returned only for call queues
    where queue managers are assigned as user extensions.
    """
    
    email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    sms_email_addresses: Optional[List[str]] = None
    """ List of notification recipient email addresses """
    
    advanced_mode: Optional[bool] = None
    """
    Specifies notifications settings mode. If 'True' then advanced mode is on, it allows using
    different emails and/or phone numbers for each notification type. If 'False' then basic mode is
    on. Advanced mode settings are returned in both modes, if specified once, but if basic mode is
    switched on, they are not applied
    """
    
    voicemails: Optional[UpdateNotificationSettingsResponseVoicemails] = None
    inbound_faxes: Optional[UpdateNotificationSettingsResponseInboundFaxes] = None
    outbound_faxes: Optional[UpdateNotificationSettingsResponseOutboundFaxes] = None
    inbound_texts: Optional[UpdateNotificationSettingsResponseInboundTexts] = None
    missed_calls: Optional[UpdateNotificationSettingsResponseMissedCalls] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateUserProfileImageRequest(DataClassJsonMixin):
    image: Optional[bytes] = None

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class CreateUserProfileImageRequest(DataClassJsonMixin):
    """
    Required Properties:
     - image
    
    Generated by Python OpenAPI Parser
    """
    
    image: bytes

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadConferencingSettingsResponsePhoneNumbersItemCountry(DataClassJsonMixin):
    """ Information on a home country of a conference phone number """
    
    id: Optional[str] = None
    """ Internal identifier of a country """
    
    uri: Optional[str] = None
    """ Canonical URI of a country """
    
    calling_code: Optional[str] = None
    """
    Country calling code defined by ITU-T recommendations
    [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en) and
    [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)
    """
    
    emergency_calling: Optional[bool] = None
    """ Emergency calling feature availability/emergency address requirement indicator """
    
    iso_code: Optional[str] = None
    """
    Country code according to the ISO standard, see [ISO
    3166](https://www.iso.org/iso-3166-country-codes.html)
    """
    
    name: Optional[str] = None
    """ Official name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadConferencingSettingsResponsePhoneNumbersItem(DataClassJsonMixin):
    country: Optional[ReadConferencingSettingsResponsePhoneNumbersItemCountry] = None
    """ Information on a home country of a conference phone number """
    
    default: Optional[bool] = None
    """
    'True' if the number is default for the conference. Default conference number is a domestic
    number that can be set by user (otherwise it is set by the system). Only one default number per
    country is allowed
    """
    
    has_greeting: Optional[bool] = None
    """ 'True' if the greeting message is played on this number """
    
    location: Optional[str] = None
    """ Location (city, region, state) of a conference phone number """
    
    phone_number: Optional[str] = None
    """ Dial-in phone number to connect to a conference """
    
    premium: Optional[bool] = None
    """
    Indicates if the number is 'premium' (account phone number with the `ConferencingNumber`
    usageType)
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class ReadConferencingSettingsResponse(DataClassJsonMixin):
    uri: Optional[str] = None
    """ Canonical URI of a conferencing """
    
    allow_join_before_host: Optional[bool] = None
    """ Determines if host user allows conference participants to join before the host """
    
    host_code: Optional[str] = None
    """ Access code for a host user """
    
    mode: Optional[str] = None
    """ Internal parameter specifying conferencing engine """
    
    participant_code: Optional[str] = None
    """ Access code for any participant """
    
    phone_number: Optional[str] = None
    """
    Primary conference phone number for user's home country returned in
    [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format
    """
    
    tap_to_join_uri: Optional[str] = None
    """ Short URL leading to the service web page Tap to Join for audio conference bridge """
    
    phone_numbers: Optional[List[ReadConferencingSettingsResponsePhoneNumbersItem]] = None
    """
    List of multiple dial-in phone numbers to connect to audio conference service, relevant for
    user's brand. Each number is given with the country and location information, in order to let
    the user choose the less expensive way to connect to a conference. The first number in the list
    is the primary conference number, that is default and domestic
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateConferencingSettingsRequestPhoneNumbersItem(DataClassJsonMixin):
    phone_number: Optional[str] = None
    """ Dial-in phone number to connect to a conference """
    
    default: Optional[bool] = None
    """
    'True' if the number is default for the conference. Default conference number is a domestic
    number that can be set by user (otherwise it is set by the system). Only one default number per
    country is allowed
    """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateConferencingSettingsRequest(DataClassJsonMixin):
    phone_numbers: Optional[List[UpdateConferencingSettingsRequestPhoneNumbersItem]] = None
    """
    Multiple dial-in phone numbers to connect to audio conference service, relevant for user's
    brand. Each number is given with the country and location information, in order to let the user
    choose the less expensive way to connect to a conference. The first number in the list is the
    primary conference number, that is default and domestic
    """
    
    allow_join_before_host: Optional[bool] = None
    """ Determines if host user allows conference participants to join before the host """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateConferencingSettingsResponsePhoneNumbersItemCountry(DataClassJsonMixin):
    """ Information on a home country of a conference phone number """
    
    id: Optional[str] = None
    """ Internal identifier of a country """
    
    uri: Optional[str] = None
    """ Canonical URI of a country """
    
    calling_code: Optional[str] = None
    """
    Country calling code defined by ITU-T recommendations
    [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en) and
    [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)
    """
    
    emergency_calling: Optional[bool] = None
    """ Emergency calling feature availability/emergency address requirement indicator """
    
    iso_code: Optional[str] = None
    """
    Country code according to the ISO standard, see [ISO
    3166](https://www.iso.org/iso-3166-country-codes.html)
    """
    
    name: Optional[str] = None
    """ Official name of a country """
    

@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class UpdateConferencingSettingsResponsePhoneNumbersItem(DataClassJsonMixin):
    country: Optional[UpdateConferencingSettingsResponsePhoneNumbersItemCountry] = None
    """ Information on a home country of a conference phone number """
    
    default: Optional[bool] = None
    """
    'True' if the number is default for the conference. Default conference number is a domestic
    number that can be set by user (otherwise it is set by the system). Only one default number per
    country is allowed
    """
    
    has_greeting: Optional[bool] = None
    """ 'True' if the greeting message is played on this number """
    
    location: Optional[str] = None
    """ Location (city, region, state) of a conference phone number """
    
    phone_number: Optional[str] = None
    """ Dial-in phone number to connect to a conference """
    
    premium: Optional[bool] = None
    """
    Indicates if the number is 'premium' (account phone number with the `ConferencingNumber`
    usageType)
    """
    
