# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grr_response_proto/acls.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grr_response_proto import semantic_pb2 as grr__response__proto_dot_semantic__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='grr_response_proto/acls.proto',
  package='grr',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=b'\n\x1dgrr_response_proto/acls.proto\x12\x03grr\x1a!grr_response_proto/semantic.proto\"\xc5\x04\n\x1b\x43lientApprovalAuthorization\x12\x41\n\x05label\x18\x01 \x01(\tB2\xe2\xfc\xe3\xc4\x01,\x12*Client label this approval ACL applies to.\x12\xc6\x01\n\x1crequester_must_be_authorized\x18\x02 \x01(\x08:\x05\x66\x61lseB\x98\x01\xe2\xfc\xe3\xc4\x01\x91\x01\x12\x8e\x01If true, approval requester must also be listed in the ACL. This allows you to specify machines that can only be accessed by the listed users.\x12x\n\x16num_approvers_required\x18\x03 \x01(\x04:\x01\x31\x42U\xe2\xfc\xe3\xc4\x01O\x12MNumber of people from this ACL that need to approve before access is granted.\x12N\n\x05users\x18\x04 \x03(\tB?\xe2\xfc\xe3\xc4\x01\x39\x12\x37List of users that can approve clients with this label.\x12P\n\x06groups\x18\x05 \x03(\tB@\xe2\xfc\xe3\xc4\x01:\x12\x38List of groups that can approve clients with this label.'
  ,
  dependencies=[grr__response__proto_dot_semantic__pb2.DESCRIPTOR,])




_CLIENTAPPROVALAUTHORIZATION = _descriptor.Descriptor(
  name='ClientApprovalAuthorization',
  full_name='grr.ClientApprovalAuthorization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grr.ClientApprovalAuthorization.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\374\343\304\001,\022*Client label this approval ACL applies to.', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requester_must_be_authorized', full_name='grr.ClientApprovalAuthorization.requester_must_be_authorized', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\374\343\304\001\221\001\022\216\001If true, approval requester must also be listed in the ACL. This allows you to specify machines that can only be accessed by the listed users.', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_approvers_required', full_name='grr.ClientApprovalAuthorization.num_approvers_required', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\374\343\304\001O\022MNumber of people from this ACL that need to approve before access is granted.', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='users', full_name='grr.ClientApprovalAuthorization.users', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\374\343\304\0019\0227List of users that can approve clients with this label.', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='groups', full_name='grr.ClientApprovalAuthorization.groups', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\374\343\304\001:\0228List of groups that can approve clients with this label.', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=655,
)

DESCRIPTOR.message_types_by_name['ClientApprovalAuthorization'] = _CLIENTAPPROVALAUTHORIZATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ClientApprovalAuthorization = _reflection.GeneratedProtocolMessageType('ClientApprovalAuthorization', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTAPPROVALAUTHORIZATION,
  '__module__' : 'grr_response_proto.acls_pb2'
  # @@protoc_insertion_point(class_scope:grr.ClientApprovalAuthorization)
  })
_sym_db.RegisterMessage(ClientApprovalAuthorization)


_CLIENTAPPROVALAUTHORIZATION.fields_by_name['label']._options = None
_CLIENTAPPROVALAUTHORIZATION.fields_by_name['requester_must_be_authorized']._options = None
_CLIENTAPPROVALAUTHORIZATION.fields_by_name['num_approvers_required']._options = None
_CLIENTAPPROVALAUTHORIZATION.fields_by_name['users']._options = None
_CLIENTAPPROVALAUTHORIZATION.fields_by_name['groups']._options = None
# @@protoc_insertion_point(module_scope)
