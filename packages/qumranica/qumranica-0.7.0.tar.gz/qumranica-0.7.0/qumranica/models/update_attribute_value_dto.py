# coding: utf-8

"""
    SQE API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from qumranica.configuration import Configuration


class UpdateAttributeValueDTO(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'value': 'str',
        'description': 'str',
        'css_directives': 'str'
    }

    attribute_map = {
        'id': 'id',
        'value': 'value',
        'description': 'description',
        'css_directives': 'cssDirectives'
    }

    def __init__(self, id=None, value=None, description=None, css_directives=None, local_vars_configuration=None):  # noqa: E501
        """UpdateAttributeValueDTO - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._value = None
        self._description = None
        self._css_directives = None
        self.discriminator = None

        self.id = id
        self.value = value
        self.description = description
        self.css_directives = css_directives

    @property
    def id(self):
        """Gets the id of this UpdateAttributeValueDTO.  # noqa: E501


        :return: The id of this UpdateAttributeValueDTO.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateAttributeValueDTO.


        :param id: The id of this UpdateAttributeValueDTO.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and id is None:  # noqa: E501
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def value(self):
        """Gets the value of this UpdateAttributeValueDTO.  # noqa: E501


        :return: The value of this UpdateAttributeValueDTO.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateAttributeValueDTO.


        :param value: The value of this UpdateAttributeValueDTO.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and value is None:  # noqa: E501
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value

    @property
    def description(self):
        """Gets the description of this UpdateAttributeValueDTO.  # noqa: E501


        :return: The description of this UpdateAttributeValueDTO.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateAttributeValueDTO.


        :param description: The description of this UpdateAttributeValueDTO.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def css_directives(self):
        """Gets the css_directives of this UpdateAttributeValueDTO.  # noqa: E501


        :return: The css_directives of this UpdateAttributeValueDTO.  # noqa: E501
        :rtype: str
        """
        return self._css_directives

    @css_directives.setter
    def css_directives(self, css_directives):
        """Sets the css_directives of this UpdateAttributeValueDTO.


        :param css_directives: The css_directives of this UpdateAttributeValueDTO.  # noqa: E501
        :type: str
        """

        self._css_directives = css_directives

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateAttributeValueDTO):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UpdateAttributeValueDTO):
            return True

        return self.to_dict() != other.to_dict()
