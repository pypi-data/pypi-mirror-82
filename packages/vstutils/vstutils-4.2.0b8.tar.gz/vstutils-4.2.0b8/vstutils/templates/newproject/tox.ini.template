[tox]
envlist = flake,py{36,37}-{coverage,install}
skipsdist = True
whitelist_externals =
    rm
    bash

[testenv]
setenv =
    CCACHE_DIR = {envdir}/.ccache
    coverage: DONT_YARN = true
passenv =
    DJANGO_LOG_LEVEL
    PYTHONPATH
    CC
whitelist_externals =
    rm
    ls
    ln
    bash
    mkdir
commands =
  pip install -U pip
  pip uninstall {{project_name}} -y
  install: pip install cython
  install: rm -rfv {envdir}/dist/
  install: python setup.py compile --dist-dir {envdir}/dist/
  install: bash -c "pip install {envdir}/dist/{{project_name}}-$(python -c 'import {{project_name}}; print({{project_name}}.__version__)').tar.gz"
  install: rm -f {envdir}/test.py {envdir}/test.pyc
  install: bash -c "cd {envdir} && ln -s {toxinidir}/test.py && python -m {{project_name}} test -v 2 --failfast --parallel 8"
  install: rm -f {envdir}/test.py {envdir}/test.pyc
  install: bash -c "cd {envdir} && ln -s {toxinidir}/test.py && python -m {{project_name}} test -v 2 --failfast --parallel 8"
  coverage: python setup.py install_egg_info
  coverage: pip install -U -e .
  coverage: coverage debug sys
  coverage: coverage erase
  coverage: coverage run -m {{project_name}} test -v 2 --failfast --parallel 8 {posargs}
  coverage: coverage combine
  coverage: coverage report
  rm -rf .eggs build {{project_name}}.egg-info {envdir}/dist
  pip uninstall {{project_name}} -y
deps =
    vstutils=={{vstutils_version}}
    -rrequirements.txt
    -rrequirements-test.txt

[testenv:flake]
basepython = python3.6
deps =
    flake8
commands =
  flake8 --config=.pep8 {{project_name}}
