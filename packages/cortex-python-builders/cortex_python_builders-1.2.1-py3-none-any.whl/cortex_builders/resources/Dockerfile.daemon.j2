# Auto-generated by the Cortex Python SDK

FROM {{base_image}}

WORKDIR /app

{% if conda_requirements -%}
COPY conda_requirements.txt .
{%- endif %}

{% if requirements -%}
COPY requirements.txt .
{%- endif %}

RUN \
    {%- if using_default_base_image %}
    apt-get update && \
    apt-get install --no-install-recommends -y linux-headers-$(`uname -r`) build-essential apt-transport-https && \
    echo 'deb https://deb.debian.org/debian stretch main\ndeb https://deb.debian.org/debian stretch-updates main' > /etc/apt/sources.list && \
    {%- endif %}
    {% if conda_requirements -%}
    conda install --yes python=3.6 && \
    conda config --add channels conda-forge && \
    conda install --yes flask gunicorn && \
    conda install --yes --file conda_requirements.txt && \
    conda clean -ay && \
    {% else -%}
    pip install --no-cache-dir flask gunicorn && \
    {% endif -%}
    pip install --no-cache-dir "cortex-python=={{cortex_sdk_version}}"
    {%- if requirements %} && \
    pip install --no-cache-dir -r requirements.txt
    {%- endif -%}
    {%- if using_default_base_image %} && \
    apt-get purge -y --auto-remove build-essential && \
    rm -rf /var/lib/apt/lists/*
    {% endif %}

{% if deploy_archive %}
COPY action.tar .
RUN tar xf action.tar --strip 1
{% endif %}

COPY action.py .

EXPOSE {{port}}

ENTRYPOINT ["gunicorn", "-b", "0.0.0.0:{{port}}", "-t", "60", "action:app"]
