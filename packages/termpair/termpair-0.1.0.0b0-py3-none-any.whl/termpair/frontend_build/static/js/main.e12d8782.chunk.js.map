{"version":3,"sources":["encryption.js","App.js","index.js","logo.png"],"names":["IV_LENGTH","getSecretKey","_getSecretKey","apply","this","arguments","_callee","b64EncodedKey","keyData","_home_csmith_git_termpair_termpair_frontend_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","window","location","hash","substring","length","Buffer","from","crypto","subtle","importKey","name","abrupt","sent","t0","console","error","stop","decrypt","_x","_x2","_decrypt","_callee2","secretKey","encryptedPayloadB64","ivAndPayload","iv","encryptedTerminalOutput","decryptedTerminalOutput","_context2","subarray","t1","call","toString","encrypt","_x3","_x4","_encrypt","_callee3","utf8Payload","encryptedArrayBuffer","ivAndEncryptedPayload","base64EncryptedString","_context3","getRandomValues","Uint8Array","TextEncoder","encode","_combineBuffers","_arrayBufferToBase64","buffer1","buffer2","tmp","byteLength","set","buffer","bytes","binary","len","i","String","fromCharCode","btoa","Led","props","react_default","createElement","className","concat","color","text","TopBar","id","href","height","src","logo","alt","StatusBar","status","terminalData","allow_browser_control","num_clients","moment","broadcast_start_time_iso","format","BottomBar","writeInstructions","xterm","writeln","host","protocol","hostname","pathname","App","_this","Object","classCallCheck","_super","terminalId","URLSearchParams","search","get","hasCrypto","state","secretEncryptionKey","Xterm","cursorBlink","macOptionIsMeta","scrollback","terminalRef","React","createRef","resize","style","display","flexDirection","assign","ref","current","handleWebsocketMessage","message","data","encryptedBase64Payload","decryptedPayload","regenerator_default","JSON","parse","event","payload","writeUtf8","clearTimeout","resizeTimeout","setTimeout","cols","rows","setState","fetch","json","open","document","getElementById","terminal_id","ws_protocol","webSocket","WebSocket","port","onKey","_ref","asyncToGenerator","mark","pressedKey","ev","key","send","addEventListener","_this2","bind","Component","ReactDOM","render","src_App_0","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e12d8782.chunk.js","sourcesContent":["// Symmetric encryption with aes gcm\n// https://github.com/mdn/dom-examples/blob/master/web-crypto/encrypt-decrypt/aes-gcm.js\n\nconst IV_LENGTH = 12;\n\nexport async function getSecretKey() {\n  try {\n    const b64EncodedKey = window.location.hash.substring(\n      1, // skip the '#' symbol\n      window.location.hash.length - 1\n    );\n    const keyData = Buffer.from(b64EncodedKey, \"base64\");\n    return await window.crypto.subtle.importKey(\n      \"raw\",\n      keyData,\n      {\n        name: \"AES-GCM\"\n      },\n      false, // extractable\n      [\"encrypt\", \"decrypt\"]\n    );\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function decrypt(secretKey, encryptedPayloadB64) {\n  // decode base64 data to unencrypted iv and encrypted data\n  const ivAndPayload = Buffer.from(encryptedPayloadB64, \"base64\");\n\n  // iv is prepended to encrypted payload\n  const iv = ivAndPayload.subarray(0, IV_LENGTH);\n\n  // remaining bytes are encrypted utf-8 output of terminal\n  const encryptedTerminalOutput = ivAndPayload.subarray(IV_LENGTH);\n\n  const decryptedTerminalOutput = Buffer.from(\n    await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv\n      },\n      secretKey,\n      encryptedTerminalOutput\n    )\n  ).toString(\"utf-8\");\n  return decryptedTerminalOutput;\n}\n\nexport async function encrypt(secretKey, utf8Payload) {\n  // The same iv must never be reused with a given key\n  const iv = window.crypto.getRandomValues(new Uint8Array(IV_LENGTH));\n  const encryptedArrayBuffer = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv\n    },\n    secretKey,\n    new TextEncoder().encode(utf8Payload)\n  );\n  // prepend unencrypted iv to encrypted payload\n  const ivAndEncryptedPayload = _combineBuffers(iv, encryptedArrayBuffer);\n\n  // send as ascii\n  // TODO send as binary\n  const base64EncryptedString = _arrayBufferToBase64(ivAndEncryptedPayload);\n  return base64EncryptedString;\n}\n\nfunction _combineBuffers(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction _arrayBufferToBase64(buffer) {\n  const bytes = new Uint8Array(buffer);\n  let binary = \"\";\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    // returns a utf-16 character, considered \"binary\"\n    binary += String.fromCharCode(bytes[i]);\n  }\n  // \"binary to ascii\"\n  return window.btoa(binary);\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"xterm/css/xterm.css\";\nimport logo from \"./logo.png\"; // logomakr.com/4N54oK\nimport { Terminal as Xterm } from \"xterm\";\nimport moment from \"moment\";\nimport { getSecretKey, decrypt, encrypt } from \"./encryption\";\nfunction Led(props) {\n  return (\n    <div className=\"flexnowrap\">\n      <div className={`led led-${props.color}`} />\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nfunction TopBar(props) {\n  return (\n    <div id=\"top\">\n      <a href=\"https://github.com/cs01/termpair\">\n        <img height=\"30px\" src={logo} alt=\"logo\" />\n      </a>\n    </div>\n  );\n}\n\nfunction StatusBar(props) {\n  return (\n    <div id=\"statusbar\">\n      {\" \"}\n      <div>\n        {props.status === \"connected\" ? (\n          <Led color=\"green\" text={props.status} />\n        ) : (\n          <Led color=\"red\" text={props.status} />\n        )}\n      </div>\n      <div>\n        {props.terminalData.allow_browser_control &&\n        props.status === \"connected\" ? (\n          <Led color=\"green\" text=\"can type\" />\n        ) : (\n          <Led color=\"orange\" text=\"cannot type\" />\n        )}\n      </div>\n      <div>\n        {props.terminalData.num_clients ? props.terminalData.num_clients : \"0\"}{\" \"}\n        Connected Clients\n      </div>\n      <div>\n        Started at{\" \"}\n        {moment(props.terminalData.broadcast_start_time_iso).format(\n          \"h:mm:ss a on MMM Do YYYY\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction BottomBar() {\n  return (\n    <div id=\"bottom\">\n      <div>\n        A <a href=\"https://grassfedcode.com\">Chad Smith</a> project\n      </div>\n      <div>\n        <a href=\"https://github.com/cs01\">GitHub</a>\n      </div>\n      <div>\n        <a href=\"https://twitter.com/grassfedcode\">Twitter</a>\n      </div>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const terminalId = new URLSearchParams(window.location.search).get(\n      \"terminal_id\"\n    );\n    const hasCrypto = window.crypto != null;\n    this.state = {\n      terminalData: {},\n      terminalId,\n      hasCrypto,\n      status: terminalId && hasCrypto ? \"connection-pending\" : \"disconnected\",\n      num_clients: null,\n      secretEncryptionKey: \"pending\"\n    };\n    this.xterm = new Xterm({\n      cursorBlink: true,\n      macOptionIsMeta: true,\n      scrollback: 1000\n    });\n    this.terminalRef = React.createRef();\n    const defaultCols = 90;\n    const defaultRows = 20;\n    this.xterm.resize(defaultCols, defaultRows);\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <TopBar {...this.props} {...this.state} />\n        <div id=\"terminal\" ref={this.terminalRef.current} />\n        {this.state.terminalId ? (\n          <StatusBar {...this.props} {...this.state} />\n        ) : null}\n        <BottomBar />\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    const xterm = this.xterm;\n    const secretEncryptionKey = await getSecretKey();\n    this.setState({ secretEncryptionKey });\n    const terminalData = await (\n      await fetch(`terminal/${this.state.terminalId}`)\n    ).json();\n    this.setState({ terminalData });\n\n    xterm.open(document.getElementById(\"terminal\"));\n\n    xterm.writeln(`Welcome to TermPair! https://github.com/cs01/termpair`);\n    xterm.writeln(\"\");\n    if (!terminalData.terminal_id) {\n      writeInstructions(xterm);\n      return;\n    } else if (!secretEncryptionKey) {\n      writeInstructions(xterm);\n      return;\n    } else if (!this.state.hasCrypto) {\n      xterm.writeln(\"TermPair only works on secure connections.\");\n      writeInstructions(xterm);\n      return;\n    }\n\n    // all good! proceed with connecting to terminal websocket\n    const ws_protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const webSocket = new WebSocket(\n      `${ws_protocol}://${window.location.hostname}:${window.location.port}${window.location.pathname}connect_browser_to_terminal?terminal_id=${this.state.terminalId}`\n    );\n\n    xterm.onKey(async (pressedKey, ev) => {\n      webSocket.send(await encrypt(secretEncryptionKey, pressedKey.key));\n    });\n\n    webSocket.addEventListener(\"open\", event => {\n      this.setState({ status: \"connected\" });\n      xterm.writeln(\"Connection established with end-to-end encryption 🔒.\");\n      xterm.writeln(\n        \"The termpair server and third parties can't read transmitted data.\"\n      );\n    });\n\n    webSocket.addEventListener(\"close\", event => {\n      if (this.state.status === \"connected\") {\n        xterm.writeln(\"Connection ended\");\n      } else {\n        xterm.writeln(\n          \"Failed to establish connection. Ensure you have a valid url.\"\n        );\n      }\n      writeInstructions(xterm);\n      this.setState({ status: \"disconnected\" });\n      this.setState({ num_clients: 0 });\n    });\n\n    async function handleWebsocketMessage(message) {\n      const data = JSON.parse(message.data);\n      if (data.event === \"new_output\") {\n        const encryptedBase64Payload = data.payload;\n        const decryptedPayload = await decrypt(\n          secretEncryptionKey,\n          encryptedBase64Payload\n        );\n        xterm.writeUtf8(decryptedPayload);\n      } else if (data.event === \"resize\") {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n          xterm.resize(data.payload.cols, data.payload.rows);\n        }, 500);\n      } else if (data.event === \"num_clients\") {\n        this.state.terminalData.num_clients = data.payload;\n        this.setState({ terminalData: this.state.terminalData });\n      } else {\n        console.error(\"unknown event type\", data);\n      }\n    }\n    webSocket.addEventListener(\"message\", handleWebsocketMessage.bind(this));\n  }\n}\n\nfunction writeInstructions(xterm) {\n  xterm.writeln(\"To broadcast a terminal, run\");\n  const host = `${window.location.protocol}//${window.location.hostname}${window.location.pathname}`;\n  xterm.writeln(\"\");\n  xterm.writeln(`    pipx run termpair share --host \"${host}\"`);\n  xterm.writeln(\"\");\n  xterm.writeln(\"Then open or share the url printed to the terminal.\");\n  xterm.writeln(\"To install pipx, see https://pipxproject.github.io/pipx/\");\n  xterm.writeln(\"All terminal data is end-to-end encrypted 🔒.\");\n  xterm.writeln(\n    \"The termpair server and third parties can't read transmitted data.\"\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/logo.74cdedb8.png\";"],"sourceRoot":""}