house test

init meta.test with value "test"
init meta.spot with when "now" where "here"
init meta.stuff with value "test2"
init .trial with depth 5 height 10 width 15
init .init.test with trial ".trial"

framer test be active first test0
  frame timeout
    go abort if elapsed >= 3.0

    frame test0 in timeout
      print "Hello World"
      do doer at enter  # default inode
      do doer at enter  per trial trial
      do doer at enter with stuff 5
      do doer at enter from depth in .trial
      do doer at enter from .trial
      do doer at enter per trial ".trial"
      do doer at enter per trial .trial
      do doer at enter for trial in .init.test
      do doer at enter for .init.test
      do doer at enter cum stuff 7
      do doer at enter qua width in .trial
      do doer at enter qua .trial

      do doer param at enter with stuff 5
      do doer param at enter from depth in .trial
      do doer param at enter from .trial
      do doer param at enter per trial ".trial"
      do doer param at enter per trial .trial
      do doer param at enter for trial in .init.test
      do doer param at enter for .init.test
      do doer param at enter cum stuff 7
      do doer param at enter qua width in .trial
      do doer param at enter qua .trial

      set elapsed with 1.0
      go next if elapsed >= goal

    frame test1 in timeout
      put depth 6 into .trial
      go next if depth in .trial == 6

    frame test2 in timeout
      copy height width in .trial into .sink
      go next if width in .sink == 15

    frame test3 in timeout
      inc height width in .sink with height 5 width 6
      go next if height in .sink == 15 and width in .sink == 21

    frame test4 in timeout
      put height -5 width -6 into .tank
      inc height width in .sink from height width in .tank
      go next if height in .sink == 10 and width in .sink == 15

    frame test5 in timeout
      set goal.dims with height 5 width 10
      go next if height in .trial >= height in goal.dims and \
                 width in .trial >= width in goal.dims

    frame test6 in timeout
      set goal.dims from height width in .trial
      go next if height in .trial == height in goal.dims and \
                 width in .trial == width in goal.dims

    frame test7 in timeout
      put 6 into .marked.changed
      go next if .marked.changed is changed

    frame test8 in timeout
      put true into .marked.updated
      go next if .marked.updated is updated

    frame test9 in timeout
      do doer at enter via .rooted
      do doer at enter via unrooted
      do doer at enter via rooted of root
      do doer at enter via framered of framer
      do doer at enter via framed of frame
      do doer at enter via actored of actor
      do doer at enter via .absrooted of root
      do doer at enter via .absframered of framer
      do doer at enter via .absframed of frame
      do doer at enter via .absactored of actor
      do doer at enter via .rooted.
      do doer at enter via unrooted.
      do doer at enter via rooted. of root
      do doer at enter via framered. of framer
      do doer at enter via framed. of frame
      do doer at enter via actored. of actor
      do doer at enter via .absrooted. of root
      do doer at enter via .absframered. of framer
      do doer at enter via .absframed. of frame
      do doer at enter via .absactored. of actor
      do doer at enter  # default inode
      go next

  frame done
    print "Success"
    bid stop all

  frame abort
    print "Failure"
    put "Resolve Do" into meta.failure
    bid stop all
