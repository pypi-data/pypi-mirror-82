house test

init meta.test with value "test"
init meta.spot with when "now" where "here"
init meta.stuff with value "test2"
init .cop.pit with value 5
init .pop.cop.kit with value 10
init .top.cop.wit with value 15
init .top.pop.cop.fit with value 20

framer test be active first test0 via .top.
  frame timeout
    go abort if elapsed >= 3.0

    frame test0 in timeout
      print "Hello World"
      do doer param at enter via cop
      do doer param at enter via .cop
      put 1 into me.zop
      put 1 into zop of me
      put 1 into .zop of me
      go next

    frame sub1 in timeout
      aux sub as sub1
      go next if aux sub1 is done and elapsed >= 0.0

    frame sub2 in timeout
      aux sub as mine
      go next if all is done

    frame pub1 in timeout
      aux pub as pub1
      go next if elapsed >= 0.0 and aux pub1 is done

    frame pub2 in timeout
      aux pub as pub2 via me
      go next if aux pub2 is done

    frame pub3 in timeout
      aux pub as pub3  # empty via
      go next if aux pub3 is done

    frame pub4 in timeout
      aux pub as pub4 via pop
      go next if aux pub4 is done

    frame pub5 in timeout
      aux pub as pub5 via .pop
      go next if aux pub5  is done

    frame cub1 in timeout
      aux cub as cub1
      go next if aux cub1 is done

    frame cub2 in timeout
      aux cub as cub2 # empty via
      go next if aux cub2 is done

    frame bub1 in timeout
      aux bub as bub1 # empty via
      go next if aux bub1 is done

    frame bub2 in timeout
      aux bub as bub2
      go next if aux bub2 is done

    frame bub3 in timeout
      aux bub as bub3 via me
      go next if aux bub3 is done

    frame lub1 in timeout
      aux lub as lub1  # empty via
      go next if aux lub1 is done

    frame lub2 in timeout
      aux lub as lub2 via pop
      go next if aux lub2 is done

    frame lub3 in timeout
      aux lub as lub3
      go next if aux lub3 is done

    frame lub4 in timeout
      aux lub as lub4 via me
      go next if aux lub4 is done

  frame done
    print "Success"
    bid stop all

  frame abort
    print "Failure"
    put "Resolve Do" into meta.failure
    bid stop all


framer sub be moot first start # empty via
  frame start
    do doer param at enter via cop
    do doer param at enter via .cop
    put 2 into me.mop
    put 2 into mop of me
    go next

  frame done
    done me


framer pub be moot first start
  frame start
    do doer param at enter via cop
    do doer param at enter via .cop
    put 3 into me.rop
    put 3 into rop of me
    go next

  frame done
    done me


framer cub be moot first start via pop
  frame start
    do doer param at enter via cop
    do doer param at enter via .cop
    put 4 into me.nop
    put 4 into nop of me
    go next

  frame done
    done me


framer bub be moot first start via .pop
  frame start
    do doer param at enter via cop
    do doer param at enter via .cop
    put 6 into me.lop
    put 6 into lop of me
    go next

  frame done
    done me


framer lub be moot first start # empty via
  frame start
    do doer param at enter via cop
    do doer param at enter via .cop
    put 7 into me.rop
    put 7 into rop of me
    go next

  frame done
    done me
