Metadata-Version: 2.1
Name: krippendorff
Version: 0.4.0
Summary: Fast computation of the Krippendorff's alpha measure.
Home-page: https://github.com/pln-fing-udelar/fast-krippendorff
License: GPL-3.0-or-later
Keywords: Krippendorff,alpha,agreement,reliability,coding,coders,units,values
Author: Santiago Castro
Author-email: sacastro@fing.edu.uy
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Dist: numpy
Project-URL: Repository, https://github.com/pln-fing-udelar/fast-krippendorff
Description-Content-Type: text/markdown

[![Actions Status](https://github.com/pln-fing-udelar/fast-krippendorff/workflows/CI/badge.svg)](https://github.com/pln-fing-udelar/fast-krippendorff/actions)
[![Version](https://img.shields.io/pypi/v/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)
[![License](https://img.shields.io/pypi/l/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)
[![Supported Python versions](https://img.shields.io/pypi/pyversions/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)

# Krippendorff

Fast computation of [Krippendorff's alpha](https://en.wikipedia.org/wiki/Krippendorff%27s_alpha) agreement measure.

Based on [Thomas Grill implementation](https://github.com/grrrr/krippendorff-alpha).

## Example usage

Given a reliability data matrix, run:

```python
import krippendorff

krippendorff.alpha(reliability_data=...)
```

See `sample.py` and `alpha`'s docstring for more details.

## Installation

```bash
pip install krippendorff
```

## Caveats

The implementation is fast as it doesn't do a nested loop for the coders. However, `V` should be small, since a `VxV` matrix it's used.

