name: tox

on:
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
      - "master"
    tags-ignore:
      - "**"
  pull_request:
  schedule:
    - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@master
        with:
          python-version: "3.x"
      - name: run lint
        run: |
          python -m pip install -U tox
          tox -e lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.6", "3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python }}
      - name: run test
        run: |
          python -m pip install tox
          tox -e py$(printf "${{ matrix.python }}" | tr -d '.')
        env:
          COVERAGE_FILE: .coverage.${{ matrix.python }}
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results
          path: .coverage.${{ matrix.python }}

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@master
        with:
          python-version: "3.x"
      - uses: actions/download-artifact@v2
        with:
          name: coverage-results
      - name: run coverage
        run: |
          python -m pip install tox codecov
          tox -e coverage
          codecov -X pycov -X gcov
        env:
          CODECOV_TOKEN: ${{ secrets.codecov_token }}

  publish:
    needs: coverage
    if: startsWith(github.ref, 'refs/tags/')  # Only release during tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@master
        with:
          python-version: "3.x"
      - name: build
        run: |
          python -m pip install -U pip setuptools
          pip install -U wheel
          python setup.py build sdist bdist_wheel
      - name: get tag name
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*.whl, dist/*.tar.gz
          allowUpdates: true
          name: Release ${{ steps.get_tag.outputs.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to test.pypi.org
        if: >-
          (
            github.event_name == 'push' &&
            github.ref == format(
              'refs/heads/{0}', github.event.repository.default_branch
            )
          ) ||
          (
            github.event_name == 'create' &&
            github.event.ref_type == 'tag'
          )
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to pypi.org
        if: >-  # "create" workflows run separately from "push" & "pull_request"
          github.event_name == 'create' &&
          github.event.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
