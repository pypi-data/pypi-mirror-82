[tox]
minversion = 3.9.0
envlist =
    lint
    packaging
    py{36,37,38,39}
    py{36,37,38,39}-{devel}

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = False
isolated_build = True

[testenv]
usedevelop = True
# do not put * in passenv as it may break builds do to reduced isolation
passenv =
    CI
    GITHUB_*
    HOME
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
    # new resolve a must or test extras will not install right
    PIP_USE_FEATURE=2020-resolver
deps =
    {devel}: git+https://github.com/tox-dev/tox.git@master#egg=tox
extras =
    lint
    test
commands =
    ansibledevel: ansible-galaxy install git+https://github.com/ansible-collections/community.general.git
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for preventing changes that may break pytest collection
    python -m pytest -p no:cov --collect-only
    python -m pytest {posargs:-l}

whitelist_externals =
    find
    rm
    sh

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install the package in in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    pep517 >= 0.8.2
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check {toxinidir}/dist/*"
