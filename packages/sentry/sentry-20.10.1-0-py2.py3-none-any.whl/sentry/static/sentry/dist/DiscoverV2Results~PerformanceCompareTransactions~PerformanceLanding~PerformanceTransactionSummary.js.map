{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/performance/utils.tsx","webpack:///./app/utils/getCurrentSentryReactTransaction.tsx","webpack:///./app/views/events/searchBar.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/views/eventsV2/table/headerCell.tsx","webpack:///./app/views/eventsV2/table/cellAction.tsx"],"names":["SentryDocumentTitle","props","_title","title","objSlug","children","getPerformanceLandingUrl","organization","slug","getTransactionSearchQuery","location","String","decodeScalar","query","trim","getTransactionDetailsUrl","eventSlug","transaction","pathname","getTransactionComparisonUrl","baselineEventSlug","regressionEventSlug","addRoutePerformanceContext","selection","Sentry","getScope","getTransaction","days","statsPeriodToDays","datetime","period","start","end","seconds","Math","floor","setTag","toString","getTransactionName","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","SearchBar","getEventFieldValues","memoize","tag","endpointParams","api","projectIdStrings","projectIds","map","fetchTagValues","key","then","results","flatten","filter","name","defined","Error","prepareQuery","replace","this","cache","clear","prevProps","isEqual","fields","tags","omitTags","functionTags","Object","fromEntries","item","keys","FIELD_TAGS","includes","field","fieldTags","features","assign","omit","TRACING_FIELDS","combined","has","values","predefined","getTagList","css","hasRecentSearches","savedSearchType","SavedSearchType","EVENT","onGetTagValues","supportedTags","excludeEnvironment","dropdownClassName","React","PureComponent","withApi","withTags","WrappedComponent","createReactClass","displayName","getDisplayName","mixins","Reflux","listenTo","TagStore","getInitialState","getAllTags","onTagsUpdate","setState","render","state","SortLink","direction","StyledIconArrow","size","align","canSort","generateSortLink","onClick","target","StyledLink","to","renderArrow","StyledNonLink","Component","forwardProps","p","IconArrow","HeaderCell","column","tableMeta","alignedTypes","type","maybeType","getAggregateAlias","undefined","Actions","updateQuery","action","value","ADD","removeTagValue","addTagValues","removeTag","setTagValues","EXCLUDE","negation","SHOW_GREATER_THAN","SHOW_LESS_THAN","TRANSACTION","RELEASE","DRILLDOWN","CellAction","isHovering","isOpen","portalEl","menuEl","handleClickOutside","event","Element","contains","handleMouseEnter","handleMouseLeave","handleMenuToggle","preventDefault","portal","document","getElementById","createElement","setAttribute","body","appendChild","_props","prevState","addEventListener","removeEventListener","dataRow","handleCellAction","allowActions","actions","addMenuItem","menuItem","Array","isArray","push","ActionItem","data-test-id","t","kind","length","MenuButtons","stopPropagation","menuButtons","renderMenuButtons","menu","ReactDOM","createPortal","placement","modifiers","hide","enabled","preventOverflow","padding","boundariesElement","popperRef","ref","style","arrowProps","Menu","MenuArrow","data-placement","MenuRoot","MenuButton","color","Container","onMouseEnter","onMouseLeave","renderMenu","space","theme","zIndex","tooltip","white","borderLight","borderRadius","dropShadowHeavy","fontSizeMedium","gray100"],"mappings":"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","file":"DiscoverV2Results~PerformanceCompareTransactions~PerformanceLanding~PerformanceTransactionSummary.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location, LocationDescriptor, Query} from 'history';\n\nimport {OrganizationSummary, GlobalSelection} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\nimport getCurrentSentryReactTransaction from 'app/utils/getCurrentSentryReactTransaction';\nimport {statsPeriodToDays} from 'app/utils/dates';\n\nexport function getPerformanceLandingUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/`;\n}\n\nexport function getTransactionSearchQuery(location: Location) {\n  return String(decodeScalar(location.query.query) || '').trim();\n}\n\nexport function getTransactionDetailsUrl(\n  organization: OrganizationSummary,\n  eventSlug: string,\n  transaction: string,\n  query: Query\n): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/${eventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function getTransactionComparisonUrl({\n  organization,\n  baselineEventSlug,\n  regressionEventSlug,\n  transaction,\n  query,\n}: {\n  organization: OrganizationSummary;\n  baselineEventSlug: string;\n  regressionEventSlug: string;\n  transaction: string;\n  query: Query;\n}): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/compare/${baselineEventSlug}/${regressionEventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function addRoutePerformanceContext(selection: GlobalSelection) {\n  const transaction = getCurrentSentryReactTransaction();\n  const days = statsPeriodToDays(\n    selection.datetime.period,\n    selection.datetime.start,\n    selection.datetime.end\n  );\n  const seconds = Math.floor(days * 86400);\n\n  transaction?.setTag('statsPeriod', seconds.toString());\n}\n\nexport function getTransactionName(location: Location): string | undefined {\n  const {transaction} = location.query;\n\n  return decodeScalar(transaction);\n}\n","import * as Sentry from '@sentry/react';\n\n/**\n * Gets the current transaction, if one exists.\n */\nexport default function getCurrentSentryReactTransaction() {\n  return Sentry?.getCurrentHub()?.getScope()?.getTransaction();\n}\n","import {ClassNames} from '@emotion/core';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport isEqual from 'lodash/isEqual';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'app/constants';\nimport {defined} from 'app/utils';\nimport {fetchTagValues} from 'app/actionCreators/tags';\nimport SentryTypes from 'app/sentryTypes';\nimport {SavedSearchType, Organization, TagCollection} from 'app/types';\nimport SmartSearchBar from 'app/components/smartSearchBar';\nimport {Field, FIELD_TAGS, TRACING_FIELDS} from 'app/utils/discover/fields';\nimport withApi from 'app/utils/withApi';\nimport withTags from 'app/utils/withTags';\nimport {Client} from 'app/api';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\ntype SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  api: Client;\n  organization: Organization;\n  tags: TagCollection;\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n  fields?: Readonly<Field[]>;\n};\n\nclass SearchBar extends React.PureComponent<SearchBarProps> {\n  static propTypes: any = {\n    api: PropTypes.object,\n    organization: SentryTypes.Organization,\n    tags: PropTypes.objectOf(SentryTypes.Tag),\n    omitTags: PropTypes.arrayOf(PropTypes.string.isRequired),\n    projectIds: PropTypes.arrayOf(PropTypes.number.isRequired),\n    fields: PropTypes.arrayOf(PropTypes.object.isRequired) as any,\n  };\n\n  componentDidMount() {\n    // Clear memoized data on mount to make tests more consistent.\n    this.getEventFieldValues.cache.clear?.();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(this.props.projectIds, prevProps.projectIds)) {\n      // Clear memoized data when projects change.\n      this.getEventFieldValues.cache.clear?.();\n    }\n  }\n\n  /**\n   * Returns array of tag values that substring match `query`; invokes `callback`\n   * with data when ready\n   */\n  getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const {api, organization, projectIds} = this.props;\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIdStrings,\n        endpointParams,\n\n        // allows searching for tags on transactions as well\n        true\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  /**\n   * Prepare query string (e.g. strip special characters like negation operator)\n   */\n  prepareQuery = query => query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n\n  getTagList() {\n    const {fields, organization, tags, omitTags} = this.props;\n    const functionTags = fields\n      ? Object.fromEntries(\n          fields\n            .filter(item => !Object.keys(FIELD_TAGS).includes(item.field))\n            .map(item => [item.field, {key: item.field, name: item.field}])\n        )\n      : {};\n\n    const fieldTags = organization.features.includes('performance-view')\n      ? Object.assign({}, FIELD_TAGS, functionTags)\n      : omit(FIELD_TAGS, TRACING_FIELDS);\n\n    const combined = assign({}, tags, fieldTags);\n    combined.has = {\n      key: 'has',\n      name: 'Has property',\n      values: Object.keys(combined),\n      predefined: true,\n    };\n\n    return omit(combined, omitTags ?? []);\n  }\n\n  render() {\n    const tags = this.getTagList();\n    return (\n      <ClassNames>\n        {({css}) => (\n          <SmartSearchBar\n            {...this.props}\n            hasRecentSearches\n            savedSearchType={SavedSearchType.EVENT}\n            onGetTagValues={this.getEventFieldValues}\n            supportedTags={tags}\n            prepareQuery={this.prepareQuery}\n            excludeEnvironment\n            dropdownClassName={css`\n              max-height: 300px;\n              overflow-y: auto;\n            `}\n          />\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nexport default withApi(withTags(SearchBar));\n","import React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport getDisplayName from 'app/utils/getDisplayName';\nimport TagStore from 'app/stores/tagStore';\nimport {TagCollection} from 'app/types';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nconst withTags = <P extends InjectedTagsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  createReactClass<Omit<P, keyof InjectedTagsProps>, State>({\n    displayName: `withTags(${getDisplayName(WrappedComponent)})`,\n    mixins: [Reflux.listenTo(TagStore, 'onTagsUpdate') as any],\n\n    getInitialState() {\n      return {\n        tags: TagStore.getAllTags(),\n      };\n    },\n\n    onTagsUpdate(tags: TagCollection) {\n      this.setState({\n        tags,\n      });\n    },\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    },\n  });\n\nexport default withTags;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport {IconArrow} from 'app/icons';\nimport Link from 'app/components/links/link';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  title: string;\n  direction: Directions;\n  canSort: boolean;\n\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nclass SortLink extends React.Component<Props> {\n  renderArrow() {\n    const {direction} = this.props;\n    if (!direction) {\n      return null;\n    }\n\n    if (direction === 'desc') {\n      return <StyledIconArrow size=\"xs\" direction=\"down\" />;\n    }\n    return <StyledIconArrow size=\"xs\" direction=\"up\" />;\n  }\n\n  render() {\n    const {align, title, canSort, generateSortLink, onClick} = this.props;\n\n    const target = generateSortLink();\n\n    if (!target || !canSort) {\n      return <StyledNonLink align={align}>{title}</StyledNonLink>;\n    }\n\n    return (\n      <StyledLink align={align} to={target} onClick={onClick}>\n        {title} {this.renderArrow()}\n      </StyledLink>\n    );\n  }\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import React from 'react';\n\nimport {ColumnValueType, getAggregateAlias} from 'app/utils/discover/fields';\nimport {Alignments} from 'app/components/gridEditable/sortLink';\nimport {TableData, TableDataRow} from 'app/utils/discover/discoverQuery';\n\nimport {TableColumn} from './types';\n\ntype ChildrenProps = {\n  align: Alignments;\n};\n\ntype Props = {\n  children: (props: ChildrenProps) => React.ReactElement;\n  column: TableColumn<keyof TableDataRow>;\n  tableMeta: TableData['meta'];\n};\n\nfunction HeaderCell(props: Props) {\n  const {children, column, tableMeta} = props;\n\n  // establish alignment based on the type\n  const alignedTypes: ColumnValueType[] = ['number', 'duration', 'integer', 'percentage'];\n  let align: Alignments = alignedTypes.includes(column.type) ? 'right' : 'left';\n\n  if (column.type === 'never') {\n    // fallback to align the column based on the table metadata\n    const maybeType = tableMeta ? tableMeta[getAggregateAlias(column.name)] : undefined;\n\n    if (maybeType !== undefined && alignedTypes.includes(maybeType)) {\n      align = 'right';\n    }\n  }\n\n  return children({align});\n}\n\nexport default HeaderCell;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\nimport * as PopperJS from 'popper.js';\nimport {Manager, Reference, Popper} from 'react-popper';\n\nimport {t} from 'app/locale';\nimport {IconEllipsis} from 'app/icons';\nimport space from 'app/styles/space';\nimport {getAggregateAlias} from 'app/utils/discover/fields';\nimport {TableDataRow} from 'app/utils/discover/discoverQuery';\nimport {QueryResults} from 'app/utils/tokenizeSearch';\n\nimport {TableColumn} from './types';\n\nexport enum Actions {\n  ADD = 'add',\n  EXCLUDE = 'exclude',\n  SHOW_GREATER_THAN = 'show_greater_than',\n  SHOW_LESS_THAN = 'show_less_than',\n  TRANSACTION = 'transaction',\n  RELEASE = 'release',\n  DRILLDOWN = 'drilldown',\n}\n\nexport function updateQuery(\n  results: QueryResults,\n  action: Actions,\n  key: string,\n  value: React.ReactText\n) {\n  switch (action) {\n    case Actions.ADD:\n      // If the value is null/undefined create a has !has condition.\n      if (value === null || value === undefined) {\n        // Adding a null value is the same as excluding truthy values.\n        // Remove inclusion if it exists.\n        results.removeTagValue('has', key);\n        results.addTagValues('!has', [key]);\n      } else {\n        // Remove exclusion if it exists.\n        results.removeTag(`!${key}`).setTagValues(key, [`${value}`]);\n      }\n      break;\n    case Actions.EXCLUDE:\n      if (value === null || value === undefined) {\n        // Excluding a null value is the same as including truthy values.\n        // Remove exclusion if it exists.\n        results.removeTagValue('!has', key);\n        results.addTagValues('has', [key]);\n      } else {\n        // Remove positive if it exists.\n        results.removeTag(key);\n        // Negations should stack up.\n        const negation = `!${key}`;\n        results.addTagValues(negation, [`${value}`]);\n      }\n      break;\n    case Actions.SHOW_GREATER_THAN: {\n      // Remove query token if it already exists\n      results.setTagValues(key, [`>${value}`]);\n      break;\n    }\n    case Actions.SHOW_LESS_THAN: {\n      // Remove query token if it already exists\n      results.setTagValues(key, [`<${value}`]);\n      break;\n    }\n    // these actions do not modify the query in any way,\n    // instead they have side effects\n    case Actions.TRANSACTION:\n    case Actions.RELEASE:\n    case Actions.DRILLDOWN:\n      break;\n    default:\n      throw new Error(`Unknown action type. ${action}`);\n  }\n}\n\ntype Props = {\n  column: TableColumn<keyof TableDataRow>;\n  dataRow: TableDataRow;\n  children: React.ReactNode;\n  handleCellAction: (action: Actions, value: React.ReactText) => void;\n\n  // allow list of actions to display on the context menu\n  allowActions?: Actions[];\n};\n\ntype State = {\n  isHovering: boolean;\n  isOpen: boolean;\n};\n\nclass CellAction extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let portal = document.getElementById('cell-action-portal');\n    if (!portal) {\n      portal = document.createElement('div');\n      portal.setAttribute('id', 'cell-action-portal');\n      document.body.appendChild(portal);\n    }\n    this.portalEl = portal;\n    this.menuEl = null;\n  }\n\n  state = {\n    isHovering: false,\n    isOpen: false,\n  };\n\n  componentDidUpdate(_props: Props, prevState: State) {\n    if (this.state.isOpen && prevState.isOpen === false) {\n      document.addEventListener('click', this.handleClickOutside, true);\n    }\n    if (this.state.isOpen === false && prevState.isOpen) {\n      document.removeEventListener('click', this.handleClickOutside, true);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  private portalEl: Element;\n  private menuEl: Element | null;\n\n  handleClickOutside = (event: MouseEvent) => {\n    if (!this.menuEl) {\n      return;\n    }\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n    if (this.menuEl.contains(event.target)) {\n      return;\n    }\n    this.setState({isOpen: false, isHovering: false});\n  };\n\n  handleMouseEnter = () => {\n    this.setState({isHovering: true});\n  };\n\n  handleMouseLeave = () => {\n    this.setState(state => {\n      // Don't hide the button if the menu is open.\n      if (state.isOpen) {\n        return state;\n      }\n      return {...state, isHovering: false};\n    });\n  };\n\n  handleMenuToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({isOpen: !this.state.isOpen});\n  };\n\n  renderMenuButtons() {\n    const {dataRow, column, handleCellAction, allowActions} = this.props;\n\n    const fieldAlias = getAggregateAlias(column.name);\n    const value = dataRow[fieldAlias];\n\n    const actions: React.ReactNode[] = [];\n\n    function addMenuItem(action: Actions, menuItem: React.ReactNode) {\n      if (\n        (Array.isArray(allowActions) && allowActions.includes(action)) ||\n        !allowActions\n      ) {\n        actions.push(menuItem);\n      }\n    }\n\n    if (\n      column.type !== 'duration' &&\n      column.type !== 'number' &&\n      column.type !== 'percentage'\n    ) {\n      addMenuItem(\n        Actions.ADD,\n        <ActionItem\n          key=\"add-to-filter\"\n          data-test-id=\"add-to-filter\"\n          onClick={() => handleCellAction(Actions.ADD, value)}\n        >\n          {t('Add to filter')}\n        </ActionItem>\n      );\n\n      if (column.type !== 'date') {\n        addMenuItem(\n          Actions.EXCLUDE,\n          <ActionItem\n            key=\"exclude-from-filter\"\n            data-test-id=\"exclude-from-filter\"\n            onClick={() => handleCellAction(Actions.EXCLUDE, value)}\n          >\n            {t('Exclude from filter')}\n          </ActionItem>\n        );\n      }\n    }\n\n    if (['date', 'duration', 'integer', 'number', 'percentage'].includes(column.type)) {\n      addMenuItem(\n        Actions.SHOW_GREATER_THAN,\n        <ActionItem\n          key=\"show-values-greater-than\"\n          data-test-id=\"show-values-greater-than\"\n          onClick={() => handleCellAction(Actions.SHOW_GREATER_THAN, value)}\n        >\n          {t('Show values greater than')}\n        </ActionItem>\n      );\n\n      addMenuItem(\n        Actions.SHOW_LESS_THAN,\n        <ActionItem\n          key=\"show-values-less-than\"\n          data-test-id=\"show-values-less-than\"\n          onClick={() => handleCellAction(Actions.SHOW_LESS_THAN, value)}\n        >\n          {t('Show values less than')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'transaction') {\n      addMenuItem(\n        Actions.TRANSACTION,\n        <ActionItem\n          key=\"transaction-summary\"\n          data-test-id=\"transaction-summary\"\n          onClick={() => handleCellAction(Actions.TRANSACTION, value)}\n        >\n          {t('Go to summary')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'release' && value) {\n      addMenuItem(\n        Actions.RELEASE,\n        <ActionItem\n          key=\"release\"\n          data-test-id=\"release\"\n          onClick={() => handleCellAction(Actions.RELEASE, value)}\n        >\n          {t('Go to release')}\n        </ActionItem>\n      );\n    }\n\n    if (\n      column.column.kind === 'function' &&\n      column.column.function[0] === 'count_unique'\n    ) {\n      addMenuItem(\n        Actions.DRILLDOWN,\n        <ActionItem\n          key=\"drilldown\"\n          data-test-id=\"per-cell-drilldown\"\n          onClick={() => handleCellAction(Actions.DRILLDOWN, value)}\n        >\n          {t('View Stacks')}\n        </ActionItem>\n      );\n    }\n\n    if (actions.length === 0) {\n      return null;\n    }\n\n    return (\n      <MenuButtons\n        onClick={event => {\n          // prevent clicks from propagating further\n          event.stopPropagation();\n        }}\n      >\n        {actions}\n      </MenuButtons>\n    );\n  }\n\n  renderMenu() {\n    const {isOpen} = this.state;\n\n    const menuButtons = this.renderMenuButtons();\n\n    if (menuButtons === null) {\n      // do not render the menu if there are no per cell actions\n      return null;\n    }\n\n    const modifiers: PopperJS.Modifiers = {\n      hide: {\n        enabled: false,\n      },\n      preventOverflow: {\n        padding: 10,\n        enabled: true,\n        boundariesElement: 'viewport',\n      },\n    };\n    let menu: React.ReactPortal | null = null;\n\n    if (isOpen) {\n      menu = ReactDOM.createPortal(\n        <Popper placement=\"top\" modifiers={modifiers}>\n          {({ref: popperRef, style, placement, arrowProps}) => (\n            <Menu\n              ref={ref => {\n                (popperRef as Function)(ref);\n                this.menuEl = ref;\n              }}\n              style={style}\n            >\n              <MenuArrow\n                ref={arrowProps.ref}\n                data-placement={placement}\n                style={arrowProps.style}\n              />\n              {menuButtons}\n            </Menu>\n          )}\n        </Popper>,\n        this.portalEl\n      );\n    }\n\n    return (\n      <MenuRoot>\n        <Manager>\n          <Reference>\n            {({ref}) => (\n              <MenuButton ref={ref} onClick={this.handleMenuToggle}>\n                <IconEllipsis size=\"sm\" data-test-id=\"cell-action\" color=\"blue400\" />\n              </MenuButton>\n            )}\n          </Reference>\n          {menu}\n        </Manager>\n      </MenuRoot>\n    );\n  }\n\n  render() {\n    const {children} = this.props;\n    const {isHovering} = this.state;\n\n    return (\n      <Container\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {children}\n        {isHovering && this.renderMenu()}\n      </Container>\n    );\n  }\n}\n\nexport default CellAction;\n\nconst Container = styled('div')`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst MenuRoot = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Menu = styled('div')`\n  margin: ${space(1)} 0;\n\n  z-index: ${p => p.theme.zIndex.tooltip};\n`;\n\nconst MenuButtons = styled('div')`\n  background: ${p => p.theme.white};\n  border: 1px solid ${p => p.theme.borderLight};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowHeavy};\n  overflow: hidden;\n`;\n\nconst MenuArrow = styled('span')`\n  position: absolute;\n  width: 18px;\n  height: 9px;\n  /* left and top set by popper */\n\n  &[data-placement*='bottom'] {\n    margin-top: -9px;\n    &::before {\n      border-width: 0 9px 9px 9px;\n      border-color: transparent transparent ${p => p.theme.borderLight} transparent;\n    }\n    &::after {\n      top: 1px;\n      left: 1px;\n      border-width: 0 8px 8px 8px;\n      border-color: transparent transparent #fff transparent;\n    }\n  }\n  &[data-placement*='top'] {\n    margin-bottom: -8px;\n    bottom: 0;\n    &::before {\n      border-width: 9px 9px 0 9px;\n      border-color: ${p => p.theme.borderLight} transparent transparent transparent;\n    }\n    &::after {\n      bottom: 1px;\n      left: 1px;\n      border-width: 8px 8px 0 8px;\n      border-color: #fff transparent transparent transparent;\n    }\n  }\n\n  &::before,\n  &::after {\n    width: 0;\n    height: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    border-style: solid;\n  }\n`;\n\nconst ActionItem = styled('button')`\n  display: block;\n  width: 100%;\n  padding: ${space(1)} ${space(2)};\n  background: transparent;\n\n  outline: none;\n  border: 0;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-align: left;\n  line-height: 1.2;\n\n  &:hover {\n    background: ${p => p.theme.gray100};\n  }\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst MenuButton = styled('button')`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  justify-content: center;\n  align-items: center;\n\n  background: rgba(255, 255, 255, 0.85);\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px solid ${p => p.theme.borderLight};\n  cursor: pointer;\n  outline: none;\n`;\n"],"sourceRoot":""}