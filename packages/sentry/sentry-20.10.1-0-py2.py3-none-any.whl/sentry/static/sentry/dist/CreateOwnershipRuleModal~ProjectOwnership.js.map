{"version":3,"sources":["webpack:///./app/components/forms/multiSelectControl.jsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.jsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.jsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.jsx"],"names":["React","forwardRef","props","ref","forwardedRef","multiple","ValueComponent","handleClick","onRemove","value","onClick","this","actor","size","Component","getSearchKeyForUser","user","email","toLowerCase","name","SelectOwners","args","state","loading","inputValue","renderUserBadge","avatarSize","hideEmail","useLink","createMentionableUser","buildUserId","id","label","searchKey","type","createUnmentionableUser","disabled","DisabledLabel","position","title","t","createMentionableTeam","team","buildTeamId","slug","createUnmentionableTeam","canAddTeam","organization","access","includes","Container","AddToProjectButton","borderless","handleAddTeamToProject","bind","icon","isCircled","handleChange","newValue","onChange","handleInputChange","setState","onInputChange","queryMembers","debounce","query","cb","api","requestPromise","then","data","err","handleLoadOptions","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","map","Promise","resolve","reject","result","members","filter","indexOf","options","Client","projectsStoreMixin","Reflux","listenTo","ProjectsStore","closeSelectMenu","componentDidMount","componentWillUnmount","MemberListStore","getAll","project","projectData","getBySlug","teams","TeamStore","excludedTeamIds","selectRef","input","ReactDOM","findDOMNode","querySelector","blur","oldValue","addTeamToProject","deprecatedSelectControl","filterOptions","filterText","loadOptions","defaultOptions","async","clearable","cache","valueComponent","placeholder","css","Button","initialState","text","tagName","owners","isValid","getMatchPlaceholder","RuleBuilder","checkIsValid","length","handleTypeChange","val","handleTagNameChangeValue","e","target","handleChangeValue","handleChangeOwners","handleAddRule","ownerText","owner","memberListStore","getById","join","quotedText","match","rule","onAddRule","addErrorMessage","handleSelectCandidate","urls","paths","Fragment","Candidates","v","RuleCandidate","key","StyledIconAdd","StyledTextOverflow","TypeHint","BuilderBar","BuilderSelect","showSearch","style","width","BuilderTagNameInput","controlled","BuilderInput","Divider","direction","SelectOwnersWrapper","AddButton","priority","p","theme","borderDark","TextOverflow","familyMono","IconAdd","space","SelectField","Input","IconChevron","OwnerInput","handleUpdateOwnership","error","request","method","raw","addSuccessMessage","initialText","responseJSON","status","startsWith","InvalidOwners","SyntaxOverlay","line","member","display","onKeyDown","metaKey","StyledTextArea","spellCheck","autoComplete","autoCorrect","autoCapitalize","ActionBar","parseError","SaveButton","inputStyles","TextareaAutosize"],"mappings":"sgBAIeA,MAAMC,YAAW,SAA4BC,EAAOC,GACjE,OAAO,YAAC,IAAD,KAAeC,aAAcD,GAASD,EAAtC,CAA6CG,UAAQ,Q,qgCCiBxDC,G,mLAMJC,YAAc,WACZ,EAAKL,MAAMM,SAAS,EAAKN,MAAMO,Q,+CAI/B,OACE,iBAAGC,QAASC,KAAKJ,aACf,YAAC,KAAD,CAAaK,MAAOD,KAAKT,MAAMO,MAAMG,MAAOC,KAAM,U,GAb7Bb,IAAMc,WAA7BR,G,6BAmBN,IAAMS,GAAsB,SAAAC,GAAI,gBAC3BA,EAAKC,OAASD,EAAKC,MAAMC,cADE,YACeF,EAAKG,MAAQH,EAAKG,KAAKD,gB,0EAEjDE,G,mCAUnB,aAAqB,6CAANC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KASXC,MAAQ,CACNC,SAAS,EACTC,WAAY,IAZO,EA6BrBC,gBAAkB,SAAAT,GAAI,OACpB,YAAC,IAAD,CAASU,WAAY,GAAIV,KAAMA,EAAMW,WAAS,EAACC,SAAS,KA9BrC,EAiCrBC,sBAAwB,SAAAb,GAAI,MAAK,CAC/BP,MAAOqB,YAAYd,EAAKe,IACxBC,MAAO,EAAKP,gBAAgBT,GAC5BiB,UAAWlB,GAAoBC,GAC/BJ,MAAO,CACLsB,KAAM,OACNH,GAAIf,EAAKe,GACTZ,KAAMH,EAAKG,QAxCM,EA4CrBgB,wBAA0B,gBAAEnB,EAAF,EAAEA,KAAF,aACrB,EAAKa,sBAAsBb,GADN,CAExBoB,UAAU,EACVJ,MACE,YAACK,GAAD,KACE,YAAC,KAAD,CACEC,SAAS,OACTC,MAAOC,YAAE,gCAAiCxB,EAAKG,MAAQH,EAAKC,QAE3D,EAAKQ,gBAAgBT,QArDT,EA2DrByB,sBAAwB,SAAAC,GAAI,MAAK,CAC/BjC,MAAOkC,YAAYD,EAAKX,IACxBC,MAAO,YAAC,IAAD,CAASU,KAAMA,IACtBT,UAAW,IAAF,OAAMS,EAAKE,MACpBhC,MAAO,CACLsB,KAAM,OACNH,GAAIW,EAAKX,GACTZ,KAAMuB,EAAKE,QAlEM,EAsErBC,wBAA0B,SAAAH,GAAQ,IAE1BI,EADiB,EAAK5C,MAArB6C,aACyBC,OAAOC,SAAS,iBAEhD,aACK,EAAKR,sBAAsBC,GADhC,CAEEN,UAAU,EACVJ,MACE,YAACkB,GAAD,KACE,YAACb,GAAD,KACE,YAAC,KAAD,CACEC,SAAS,OACTC,MAAOC,YAAE,gCAAD,WAAsCE,EAAKE,QAEnD,YAAC,IAAD,CAASF,KAAMA,MAGnB,YAAC,KAAD,CACEH,MACEO,EACIN,YAAE,oBAAD,WAA0BE,EAAKE,OAChCJ,YAAE,uDAGR,YAACW,GAAD,CACEtC,KAAK,OACLuC,YAAU,EACVhB,UAAWU,EACXpC,QAAS,EAAK2C,uBAAuBC,KAA5B,OAAuCZ,GAChDa,KAAM,YAAC,IAAD,CAASC,WAAS,WAnGf,EAgLrBC,aAAe,SAAAC,GACb,EAAKxD,MAAMyD,SAASD,IAjLD,EAoLrBE,kBAAoB,SAAApC,GAClB,EAAKqC,SAAS,CAACrC,eAEX,EAAKtB,MAAM4D,eACb,EAAK5D,MAAM4D,cAActC,IAxLR,EA4LrBuC,aAAeC,KAAS,SAACC,EAAOC,GAAO,IAC9BnB,EAAgB,EAAK7C,MAArB6C,aAIP,OAAK,EAAKoB,IAIH,EAAKA,IACTC,eADI,yBAC6BrB,EAAaH,KAD1C,aAC2D,CAC9DqB,MAAO,CAACA,WAETI,MACC,SAAAC,GAAI,OAAIJ,EAAG,KAAMI,MACjB,SAAAC,GAAG,OAAIL,EAAGK,MATL,OAWR,KA7MkB,EA+MrBC,kBAAoB,WAClB,IAAMC,EAAiB,EAAKC,sBACtBC,EAAiB,EAAKC,sBACtBC,EAAoB,EAAKC,qBAAqBH,GAC9CI,EAAqBN,EAAeO,KAAI,qBAAEpE,MAAiBmB,MAGjE,OAAO,IAAIkD,SAAQ,SAACC,EAASC,GAC3B,EAAKpB,aAAa,EAAKzC,MAAME,YAAY,SAAC+C,EAAKa,GACzCb,EACFY,EAAOZ,GAEPW,EAAQE,SAIXf,MAAK,SAAAgB,GAAO,OAGXA,EACIA,EACGC,QAAO,gBAAEtE,EAAF,EAAEA,KAAF,OAAYA,IAAiD,IAAzC+D,EAAmBQ,QAAQvE,EAAKe,OAC3DiD,IAAI,EAAK7C,yBACZ,MAELkC,MAAK,SAAAgB,GAAO,MAAK,CAChBG,QAAS,GAAF,WAAMf,GAAN,IAAyBE,GAAzB,IAA4CE,GAA5C,IAAkEQ,SAvO7E,EAAKlB,IAAM,IAAIsB,IAGf,EAAKC,mBAAqBC,IAAOC,SAASC,KAAe,WACvD,EAAKC,qBANY,E,wDAgBfnF,KAAK+E,oBACP/E,KAAK+E,mBAAmBK,sB,6CAK1BpF,KAAKwD,IAAM,KAEPxD,KAAK+E,oBACP/E,KAAK+E,mBAAmBM,yB,4CAmF1B,OAAOC,IAAgBC,SAASlB,IAAIrE,KAAKkB,yB,4CAGrB,IACbsE,EAAWxF,KAAKT,MAAhBiG,QACDC,EAAcP,IAAcQ,UAAUF,EAAQvD,MAEpD,OAAKwD,EAIEA,EAAYE,MAAMtB,IAAIrE,KAAK8B,uBAHzB,K,6CAW+B,IAArBkC,EAAqB,uDAAJ,GAC9B2B,EAAQC,IAAUL,UAAY,GAC9BM,EAAkB7B,EAAeK,KAAI,qBAAEpE,MAAiBmB,MAE9D,OAAOuE,EACJhB,QAAO,SAAA5C,GAAI,OAA0C,IAAtC8D,EAAgBjB,QAAQ7C,EAAKX,OAC5CiD,IAAIrE,KAAKkC,2B,wCASZ,GAAIlC,KAAK8F,UAAW,CAElB,IAAMC,EAAQC,IAASC,YAAYjG,KAAK8F,WAAWI,cACjD,uBAEEH,GAEFA,EAAMI,U,gEAKiBpE,G,wFACY/B,KAAKT,MAArC6C,E,EAAAA,aAAcoD,E,EAAAA,QAAS1F,E,EAAAA,MAExBsG,E,IAAetG,GAGrBE,KAAKT,MAAMyD,SAAX,cAAwBhD,KAAKT,MAAMO,OAAnC,CAA0CE,KAAK8B,sBAAsBC,M,kBAQ7DsE,YAAiBrG,KAAKwD,IAAKpB,EAAaH,KAAMuD,EAAQvD,KAAMF,G,uDAGlE/B,KAAKT,MAAMyD,SAASoD,GACpBpG,KAAKmF,kB,sIAiEA,WACP,OACE,YAAC,EAAD,CACEmB,yBAAuB,EACvBC,cAAe,SAAC1B,EAAS2B,GAAV,OACb3B,EAAQF,QAAO,qBAAErD,UAAyBsD,QAAQ4B,IAAe,MAEnEhH,IAAK,SAAAA,GAAG,OAAK,EAAKsG,UAAYtG,GAC9BiH,YAAazG,KAAK6D,kBAClB6C,gBAAc,EACdC,OAAK,EACLC,WAAS,EACTnF,SAAUzB,KAAKT,MAAMkC,SACrBoF,OAAO,EACPC,eAAgBnH,GAChBoH,YAAalF,YAAE,UACfsB,cAAenD,KAAKiD,kBACpBD,SAAUhD,KAAK8C,aACfhD,MAAOE,KAAKT,MAAMO,MAClBkH,IAAG,S,GA1Q+B3H,IAAMc,WAA3BM,G,2BAgRrB,IAAM8B,GAAY,YAAO,MAAP,uCAAH,sEAKTb,GAAgB,YAAO,MAAP,2CAAH,wDAKbc,GAAqB,YAAOyE,IAAP,gDAAH,yC,ibCtTxB,IAAMC,GAAe,CACnBC,KAAM,GACNC,QAAS,GACT7F,KAAM,OACN8F,OAAQ,GACRC,SAAS,GAGX,SAASC,GAAoBhG,GAC3B,OAAQA,GACN,IAAK,OACH,MAAO,gBACT,IAAK,MACH,MAAO,iCACT,IAAK,MACH,MAAO,YACT,QACE,MAAO,I,IAIPiG,G,iCAUJ,WAAYjI,GAAO,0BACjB,cAAMA,IAIRkI,aAAe,WACb,EAAKvE,UAAS,SAAAvC,GAAK,MAAK,CACtB2G,UAAW3G,EAAMwG,MAAQxG,EAAM0G,UAAY1G,EAAM0G,OAAOK,YAPzC,EAWnBC,iBAAmB,SAAAC,GACjB,EAAK1E,SAAS,CAAC3B,KAAMqG,IACrB,EAAKH,gBAbY,EAgBnBI,yBAA2B,SAAAC,GACzB,EAAK5E,SAAS,CAACkE,QAASU,EAAEC,OAAOjI,OAAQ,EAAK2H,eAjB7B,EAoBnBO,kBAAoB,SAAAF,GAClB,EAAK5E,SAAS,CAACiE,KAAMW,EAAEC,OAAOjI,QAC9B,EAAK2H,gBAtBY,EAyBnBQ,mBAAqB,SAAAZ,GACnB,EAAKnE,SAAS,CAACmE,WACf,EAAKI,gBA3BY,EA8BnBS,cAAgB,WAAM,MAC2B,EAAKvH,MAA7CY,EADa,EACbA,KAAM4F,EADO,EACPA,KAAMC,EADC,EACDA,QAASC,EADR,EACQA,OAE5B,GAHoB,EACgBC,QAEpC,CAKA,IAAMa,EAAYd,EACfhD,KAAI,SAAA+D,GAAK,MACa,SAArBA,EAAMnI,MAAMsB,KAAZ,WACQ6G,EAAMnI,MAAMO,MAChB6H,IAAgBC,QAAQF,EAAMnI,MAAMmB,IAAId,SAE7CiI,KAAK,KAEFC,EAAarB,EAAKsB,MAAM,MAAX,WAAuBtB,EAAvB,KAAiCA,EAE9CuB,EAAO,GAAH,OACC,QAATnH,EAAA,eAAyB6F,GAAY7F,EAD7B,YAENiH,EAFM,YAEQL,GAClB,EAAK5I,MAAMoJ,UAAUD,GACrB,EAAKxF,SAASgE,SAlBZ0B,YAAgB,gEAlCD,EAuDnBC,sBAAwB,SAAC1B,EAAM5F,GAC7B,EAAK2B,SAAS,CAACiE,OAAM5F,SACrB,EAAKkG,gBAvDL,EAAK9G,MAAQuG,GAFI,E,6CA4DV,aACgDlH,KAAKT,MAArDuJ,EADA,EACAA,KAAMC,EADN,EACMA,MAAOtH,EADb,EACaA,SAAU+D,EADvB,EACuBA,QAASpD,EADhC,EACgCA,aADhC,EAEwCpC,KAAKW,MAA7CY,EAFA,EAEAA,KAAM4F,EAFN,EAEMA,KAAMC,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,OAAQC,EAF7B,EAE6BA,QAEpC,OACE,YAAC,IAAM0B,SAAP,MACID,GAASD,IACT,YAACG,GAAD,KACGF,GACCA,EAAM1E,KAAI,SAAA6E,GAAC,OACT,YAACC,GAAD,CACEC,IAAKF,EACLnJ,QAAS,kBAAM,EAAK8I,sBAAsBK,EAAG,UAE7C,YAACG,GAAD,CAAexG,WAAS,IACxB,YAACyG,GAAD,KAAqBJ,GACrB,YAACK,GAAD,mBAGLT,GACCA,EAAKzE,KAAI,SAAA6E,GAAC,OACR,YAACC,GAAD,CACEC,IAAKF,EACLnJ,QAAS,kBAAM,EAAK8I,sBAAsBK,EAAG,SAE7C,YAACG,GAAD,CAAexG,WAAS,IACxB,YAACyG,GAAD,KAAqBJ,GACrB,YAACK,GAAD,mBAKV,YAACC,GAAD,KACE,YAACC,GAAD,CACEnD,yBAAuB,EACvB9F,KAAK,cACLV,MAAOyB,EACPmI,YAAY,EACZ1G,SAAUhD,KAAK2H,iBACf9C,QAAS,CACP,CAAC/E,MAAO,OAAQuB,MAAOQ,YAAE,SACzB,CAAC/B,MAAO,MAAOuB,MAAOQ,YAAE,QACxB,CAAC/B,MAAO,MAAOuB,MAAOQ,YAAE,SAE1B8H,MAAO,CAACC,MAAO,KACfhD,WAAW,EACXnF,SAAUA,IAEF,QAATF,GACC,YAACsI,GAAD,CACEC,YAAU,EACVhK,MAAOsH,EACPpE,SAAUhD,KAAK6H,yBACfpG,SAAUA,EACVsF,YAAY,aAGhB,YAACgD,GAAD,CACED,YAAU,EACVhK,MAAOqH,EACPnE,SAAUhD,KAAKgI,kBACfvG,SAAUA,EACVsF,YAAaQ,GAAoBhG,KAEnC,YAACyI,GAAD,CAASC,UAAU,UACnB,YAACC,GAAD,KACE,YAAC,GAAD,CACE9H,aAAcA,EACdoD,QAASA,EACT1F,MAAOuH,EACPrE,SAAUhD,KAAKiI,mBACfxG,SAAUA,KAId,YAAC0I,GAAD,CACEC,SAAS,UACT3I,UAAW6F,EACXvH,QAASC,KAAKkI,cACdtF,KAAM,YAAC,IAAD,CAAS1C,KAAK,KAAK2C,WAAS,IAClC3C,KAAK,gB,GAtJSb,IAAMc,WAA1BqH,G,0BA6JN,IAAMyB,GAAa,YAAO,MAAP,yCAAH,+CAIVM,GAAW,YAAO,MAAP,uCAAH,UACH,SAAAc,GAAC,OAAIA,EAAEC,MAAMC,aADV,KAIRjB,GAAqB,YAAOkB,IAAP,iDAAH,mCAIlBrB,GAAgB,YAAO,MAAP,4CAAH,gBACF,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnD,KAAKsD,aADhB,sBAEG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,aAFhB,gIAYblB,GAAgB,YAAOqB,IAAP,4CAAH,UACR,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,aADL,oCAMbf,GAAa,YAAO,MAAP,yCAAH,6DAIGmB,aAAM,GAJT,KAOVlB,GAAgB,YAAOmB,IAAP,4CAAH,gBACDD,aAAM,KADL,8BAMbZ,GAAe,YAAOc,IAAP,2CAAH,WACLF,aAAM,GADD,kCAGAA,aAAM,IAHN,KAMZd,GAAsB,YAAOgB,IAAP,kDAAH,WACZF,aAAM,GADM,kCAGPA,aAAM,IAHC,iBAOnBX,GAAU,YAAOc,IAAP,sCAAH,UACF,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,aADX,oCAMPL,GAAsB,YAAO,MAAP,mDAAH,gDAGPS,aAAM,GAHC,KAMnBR,GAAY,YAAOlD,IAAP,yCAAH,WACF0D,aAAM,IADJ,KAIAnD,M,6aC3PTuD,G,iCAUJ,WAAYxL,GAAO,0BACjB,cAAMA,IA2BRyL,sBAAwB,WAAM,MACI,EAAKzL,MAA9B6C,EADqB,EACrBA,aAAcoD,EADO,EACPA,QACd2B,EAAQ,EAAKxG,MAAbwG,KACP,EAAKjE,SAAS,CAAC+H,MAAO,OAEtB,IACMC,GADM,IAAIpG,KACIrB,eAAJ,oBACDrB,EAAaH,KADZ,YACoBuD,EAAQvD,KAD5B,eAEd,CACEkJ,OAAQ,MACRxH,KAAM,CAACyH,IAAKjE,GAAQ,MAgCxB,OA5BA+D,EACGxH,MAAK,WACJ2H,YAAkBxJ,YAAE,kCACpB,EAAKqB,SAAS,CACZoI,YAAanE,OAJnB,OAOS,SAAA8D,GACL,EAAK/H,SAAS,CAAC+H,MAAOA,EAAMM,eACP,MAAjBN,EAAMO,OACR5C,YACE/G,YACE,+EAIa,MAAjBoJ,EAAMO,QACNP,EAAMM,aAAaH,KACnBH,EAAMM,aAAaH,IAAI,GAAGK,WAAW,wBAErC7C,YACE/G,YAAE,gDAAkDoJ,EAAMM,aAAaH,IAAI,KAG7ExC,YAAgB/G,YAAE,mDAIjBqJ,GAtEU,EA8FnBpI,aAAe,SAAAgF,GACb,EAAK5E,SAAS,CAACiE,KAAMW,EAAEC,OAAOjI,SA/Fb,EAkGnBoI,cAAgB,SAAAQ,GACd,EAAKxF,UACH,kBAAa,CACXiE,KADF,EAAEA,KACa,KAAOuB,KAEtB,EAAKsC,wBArGP,EAAKrK,MAAQ,CACXwG,KAAM5H,EAAM+L,YACZA,YAAa/L,EAAM+L,YACnBL,MAAO,MALQ,E,wEAS6B,IAAdK,EAAc,EAAdA,YAC5BA,IAAgBtL,KAAKW,MAAM2K,aAC7BtL,KAAKkD,SAAS,CAACoI,kB,iCAIRL,GACT,IAAM9D,EAAO8D,GAASA,EAAMG,KAAOH,EAAMG,IAAI,GAC7C,OAAKjE,EAIDA,EAAKsE,WAAW,wBACX,YAACC,GAAD,KAAgBvE,GAEhB,YAACwE,GAAD,CAAeC,KAAMzE,EAAKsB,MAAM,eAAe,GAAK,IANpD,O,yCAwDT,OAAOJ,IAAgB9C,SAASlB,KAAI,SAAAwH,GAAM,MAAK,CAC7CzK,GAAIyK,EAAOzK,GACX0K,QAASD,EAAOvL,MAChBA,MAAOuL,EAAOvL,Y,yCAIC,IACVkF,EAAWxF,KAAKT,MAAhBiG,QACP,OACEN,IAAcQ,UAAUF,EAAQvD,OAAS,CACvC0D,MAAO,KAETA,MAAMtB,KAAI,SAAAtC,GAAI,MAAK,CACnBX,GAAIW,EAAKX,GACT0K,QAAS,IAAF,OAAM/J,EAAKE,MAClB3B,MAAOyB,EAAKX,S,+BAiBP,aACgDpB,KAAKT,MAArDiG,EADA,EACAA,QAASpD,EADT,EACSA,aAAcX,EADvB,EACuBA,SAAUqH,EADjC,EACiCA,KAAMC,EADvC,EACuCA,MADvC,EAE4B/I,KAAKW,MAAjCwG,EAFA,EAEAA,KAAM8D,EAFN,EAEMA,MAAOK,EAFb,EAEaA,YAEpB,OACE,YAAC,IAAMtC,SAAP,KACE,YAAC,GAAD,CACEF,KAAMA,EACNC,MAAOA,EACP3G,aAAcA,EACdoD,QAASA,EACTmD,UAAW3I,KAAKkI,cAAcvF,KAAK3C,MACnCyB,SAAUA,IAEZ,mBACEkI,MAAO,CAAChI,SAAU,YAClBoK,UAAW,SAAAjE,GACLA,EAAEkE,SAAqB,UAAVlE,EAAEsB,KACjB,EAAK4B,0BAIT,YAACiB,GAAD,CACElF,YACE,yJAKF/D,SAAUhD,KAAK8C,aACfrB,SAAUA,EACV3B,MAAOqH,EACP+E,WAAW,QACXC,aAAa,MACbC,YAAY,MACZC,eAAe,QAEjB,YAACC,GAAD,KACE,uBAAMtM,KAAKuM,WAAWtB,IACtB,YAACuB,GAAD,KACE,YAAC,IAAD,CACEtM,KAAK,QACLkK,SAAS,UACTrK,QAASC,KAAKgL,sBACdvJ,SAAUA,GAAY0F,IAASmE,GAE9BzJ,YAAE,yB,GAnKMxC,IAAMc,WAAzB4K,G,yBA6KN,IAGMuB,GAAY,YAAO,MAAP,uCAAH,0FAMTX,GAAgB,YAAO,MAAP,2CAClBc,IADe,sBARU,GAQV,kFAQV,mBAjBgB,EAiBsB,GAAtC,EAAEb,OARQ,OAWbY,GAAa,YAAO,MAAP,wCAAH,4DAKVP,GAAiB,YAAOS,IAAP,4CACnBD,IADgB,0FAQH,SAAApC,GAAC,OAAIA,EAAEC,MAAMnD,KAAKsD,aARf,0DAzBK,EAyBL,kBAxBS,GAwBT,OAediB,GAAgB,YAAO,MAAP,2CAAH,UACR,SAAArB,GAAC,OAAIA,EAAEC,MAAMW,QADL,sCAMJF","file":"CreateOwnershipRuleModal~ProjectOwnership.js","sourcesContent":["import React from 'react';\n\nimport SelectControl from 'app/components/forms/selectControl';\n\nexport default React.forwardRef(function MultiSelectControl(props, ref) {\n  return <SelectControl forwardedRef={ref} {...props} multiple />;\n});\n","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Reflux from 'reflux';\nimport styled from '@emotion/styled';\n\nimport {addTeamToProject} from 'app/actionCreators/projects';\nimport {t} from 'app/locale';\nimport {buildUserId, buildTeamId} from 'app/utils';\nimport {Client} from 'app/api';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport TeamStore from 'app/stores/teamStore';\nimport IdBadge from 'app/components/idBadge';\nimport MultiSelectControl from 'app/components/forms/multiSelectControl';\nimport ActorAvatar from 'app/components/avatar/actorAvatar';\nimport SentryTypes from 'app/sentryTypes';\nimport Button from 'app/components/button';\nimport {IconAdd} from 'app/icons';\nimport Tooltip from 'app/components/tooltip';\n\nclass ValueComponent extends React.Component {\n  static propTypes = {\n    value: PropTypes.object,\n    onRemove: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.onRemove(this.props.value);\n  };\n\n  render() {\n    return (\n      <a onClick={this.handleClick}>\n        <ActorAvatar actor={this.props.value.actor} size={28} />\n      </a>\n    );\n  }\n}\n\nconst getSearchKeyForUser = user =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\nexport default class SelectOwners extends React.Component {\n  static propTypes = {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n    value: PropTypes.array,\n    onChange: PropTypes.func,\n    onInputChange: PropTypes.func,\n    disabled: PropTypes.bool,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.api = new Client();\n\n    // See comments in `handleAddTeamToProject` for why we close the menu this way\n    this.projectsStoreMixin = Reflux.listenTo(ProjectsStore, () => {\n      this.closeSelectMenu();\n    });\n  }\n\n  state = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidMount() {\n    if (this.projectsStoreMixin) {\n      this.projectsStoreMixin.componentDidMount();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api = null;\n\n    if (this.projectsStoreMixin) {\n      this.projectsStoreMixin.componentWillUnmount();\n    }\n  }\n\n  renderUserBadge = user => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = user => ({\n    value: buildUserId(user.id),\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user',\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}) => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  createMentionableTeam = team => ({\n    value: buildTeamId(team.id),\n    label: <IdBadge team={team} />,\n    searchKey: `#${team.slug}`,\n    actor: {\n      type: 'team',\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  createUnmentionableTeam = team => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Container>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n              icon={<IconAdd isCircled />}\n            />\n          </Tooltip>\n        </Container>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   *\n   * @param {Team[]} teamsInProject A list of teams that are in the current project\n   */\n  getTeamsNotInProject(teamsInProject = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const input = ReactDOM.findDOMNode(this.selectRef).querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(this.api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = newValue => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = inputValue => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!this.api) {\n      return null;\n    }\n\n    return this.api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        data => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members =>\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        members\n          ? members\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : []\n      )\n      .then(members => ({\n        options: [...usersInProject, ...teamsInProject, ...teamsNotInProject, ...members],\n      }));\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        deprecatedSelectControl\n        filterOptions={(options, filterText) =>\n          options.filter(({searchKey}) => searchKey.indexOf(filterText) > -1)\n        }\n        ref={ref => (this.selectRef = ref)}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        valueComponent={ValueComponent}\n        placeholder={t('owners')}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport memberListStore from 'app/stores/memberListStore';\nimport Button from 'app/components/button';\nimport SelectField from 'app/components/forms/selectField';\nimport TextOverflow from 'app/components/textOverflow';\nimport {IconAdd, IconChevron} from 'app/icons';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport SentryTypes from 'app/sentryTypes';\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport SelectOwners from 'app/views/settings/project/projectOwnership/selectOwners';\nimport space from 'app/styles/space';\n\nconst initialState = {\n  text: '',\n  tagName: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nfunction getMatchPlaceholder(type) {\n  switch (type) {\n    case 'path':\n      return 'src/example/*';\n    case 'url':\n      return 'https://example.com/settings/*';\n    case 'tag':\n      return 'tag-value';\n    default:\n      return '';\n  }\n}\n\nclass RuleBuilder extends React.Component {\n  static propTypes = {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n    onAddRule: PropTypes.func,\n    urls: PropTypes.arrayOf(PropTypes.string),\n    paths: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = val => {\n    this.setState({type: val});\n    this.checkIsValid();\n  };\n\n  handleTagNameChangeValue = e => {\n    this.setState({tagName: e.target.value}, this.checkIsValid);\n  };\n\n  handleChangeValue = e => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = owners => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A rule needs a type, a value, and one or more issue owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(owner =>\n        owner.actor.type === 'team'\n          ? `#${owner.actor.name}`\n          : memberListStore.getById(owner.actor.id).email\n      )\n      .join(' ');\n\n    const quotedText = text.match(/\\s/) ? `\"${text}\"` : text;\n\n    const rule = `${\n      type === 'tag' ? `tags.${tagName}` : type\n    }:${quotedText} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text, type) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    return (\n      <React.Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[PATH]</TypeHint>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[URL]</TypeHint>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            deprecatedSelectControl\n            name=\"select-type\"\n            value={type}\n            showSearch={false}\n            onChange={this.handleTypeChange}\n            options={[\n              {value: 'path', label: t('Path')},\n              {value: 'tag', label: t('Tag')},\n              {value: 'url', label: t('URL')},\n            ]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          {type === 'tag' && (\n            <BuilderTagNameInput\n              controlled\n              value={tagName}\n              onChange={this.handleTagNameChangeValue}\n              disabled={disabled}\n              placeholder=\"tag-name\"\n            />\n          )}\n          <BuilderInput\n            controlled\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={getMatchPlaceholder(type)}\n          />\n          <Divider direction=\"right\" />\n          <SelectOwnersWrapper>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </SelectOwnersWrapper>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon={<IconAdd size=\"xs\" isCircled />}\n            size=\"small\"\n          />\n        </BuilderBar>\n      </React.Fragment>\n    );\n  }\n}\nconst Candidates = styled('div')`\n  margin-bottom: 10px;\n`;\n\nconst TypeHint = styled('div')`\n  color: ${p => p.theme.borderDark};\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.borderDark};\n  background-color: #f8fafd;\n  padding-left: 5px;\n  margin-bottom: 3px;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconAdd = styled(IconAdd)`\n  color: ${p => p.theme.borderDark};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled('div')`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)`\n  margin-right: ${space(1.5)};\n  width: 50px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n`;\n\nconst BuilderTagNameInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n  width: 200px;\n`;\n\nconst Divider = styled(IconChevron)`\n  color: ${p => p.theme.borderDark};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst SelectOwnersWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nimport {Client} from 'app/api';\nimport memberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport Button from 'app/components/button';\nimport SentryTypes from 'app/sentryTypes';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport RuleBuilder from 'app/views/settings/project/projectOwnership/ruleBuilder';\n\nclass OwnerInput extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n    initialText: PropTypes.string,\n    urls: PropTypes.arrayOf(PropTypes.string),\n    paths: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.initialText,\n      initialText: props.initialText,\n      error: null,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps({initialText}) {\n    if (initialText !== this.state.initialText) {\n      this.setState({initialText});\n    }\n  }\n\n  parseError(error) {\n    const text = error && error.raw && error.raw[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    } else {\n      return <SyntaxOverlay line={text.match(/line (\\d*),/)[1] - 1} />;\n    }\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated issue ownership rules'));\n        this.setState({\n          initialText: text,\n        });\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\n              \"You don't have permission to modify issue ownership rules for this project\"\n            )\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save issue ownership rule changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save issue ownership rule changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return memberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    return (\n      ProjectsStore.getBySlug(project.slug) || {\n        teams: [],\n      }\n    ).teams.map(team => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  handleAddRule = rule => {\n    this.setState(\n      ({text}) => ({\n        text: text + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {project, organization, disabled, urls, paths} = this.props;\n    const {text, error, initialText} = this.state;\n\n    return (\n      <React.Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key === 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\n' +\n              'path:src/example/pipeline/* person@sentry.io #infra\\n' +\n              'url:http://example.com/settings/* #product\\n' +\n              'tags.sku_class:enterprise #enterprise'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={text}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n          />\n          <ActionBar>\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || text === initialText}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </ActionBar>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SyntaxOverlay = styled('div')`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled('div')`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${inputStyles};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default OwnerInput;\n"],"sourceRoot":""}