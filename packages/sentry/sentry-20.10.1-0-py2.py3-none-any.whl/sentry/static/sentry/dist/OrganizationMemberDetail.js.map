{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/radio.tsx","webpack:///./app/views/settings/components/teamSelect.jsx","webpack:///./app/views/settings/organizationMembers/inviteMember/roleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","checkedCss","css","theme","green400","growIn","disabled","Radio","borderLight","borderDark","type","TeamSelect","state","loading","teams","fetchTeams","debounce","query","a","api","organization","requestPromise","slug","per_page","TEAMS_PER_PAGE","setState","DEFAULT_DEBOUNCE_DURATION","handleQueryUpdate","event","target","value","handleAddTeam","option","team","find","tm","onAddTeam","handleRemove","teamSlug","onRemoveTeam","selectedTeams","menuHeader","noTeams","length","isDisabled","filter","includes","searchKey","label","TeamDropdownElement","items","busyItemsStillVisible","onChange","onSelect","emptyMessage","t","isOpen","aria-label","size","confirmLastTeamRemoveMessage","confirmMessage","TeamRow","key","orgId","onRemove","hasButtons","renderTeamAddDropDown","renderBody","TeamPanelItem","StyledLink","message","bypass","onConfirm","isCircled","PanelItem","Link","withApi","Label","RoleSelect","enforceAllowed","roleList","selectedRole","role","desc","name","id","allowed","onClick","setRole","color","cursor","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","OrganizationMemberDetail","handleSave","addLoadingMessage","busy","updateMember","memberId","data","member","addSuccessMessage","redirectToMemberPage","errorMessage","responseJSON","detail","addErrorMessage","handleInvite","regenerate","resendMemberInvite","push","handleRemoveTeam","removedTeam","handle2faReset","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","Sentry","showResetButton","require2FA","canReset2fa","getTooltip","members","browserHistory","access","inviteLink","invite_link","canEdit","email","canResend","expired","showAuth","pending","Fragment","ExtraHeaderText","OverflowWrapper","Details","DetailLabel","href","data-test-id","dateOnly","date","dateCreated","InviteSection","CodeInput","InviteActions","alignRight","flexibleControlStateSize","help","tct","priority","roles","Footer","withOrganization","gray500","fontSizeLarge","breakpoints","gray700","inputStyles"],"mappings":"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","file":"OrganizationMemberDetail.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\n\nimport {growIn} from 'app/styles/animations';\nimport {Theme} from 'app/utils/theme';\n\ntype CheckedProps = React.HTMLProps<HTMLInputElement> & {theme: Theme};\n\nconst checkedCss = (p: CheckedProps) => css`\n  display: block;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background-color: ${p.theme.green400};\n  animation: 0.2s ${growIn} ease;\n  opacity: ${p.disabled ? 0.4 : null};\n`;\n\nconst Radio = styled('input')`\n  display: flex;\n  padding: 0;\n  width: 1.5em;\n  height: 1.5em;\n  position: relative;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.borderLight};\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  background: none;\n  appearance: none;\n\n  /* TODO(bootstrap): Our bootstrap CSS adds this, we can remove when we remove that */\n  margin: 0 !important;\n\n  &:focus,\n  &.focus-visible {\n    outline: none !important;\n    border: 1px solid ${p => p.theme.borderDark};\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n\n  &:checked:after {\n    content: '';\n    ${checkedCss}\n  }\n`;\n\nRadio.defaultProps = {\n  type: 'radio',\n};\n\nexport default Radio;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport debounce from 'lodash/debounce';\nimport styled from '@emotion/styled';\n\nimport {DEFAULT_DEBOUNCE_DURATION, TEAMS_PER_PAGE} from 'app/constants';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport DropdownButton from 'app/components/dropdownButton';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nclass TeamSelect extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization.isRequired,\n\n    /**\n     * Should button be disabled\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Teams that are already selected.\n     */\n    selectedTeams: PropTypes.array.isRequired,\n    /**\n     * callback when teams are added\n     */\n    onAddTeam: PropTypes.func.isRequired,\n    /**\n     * Callback when teams are removed\n     */\n    onRemoveTeam: PropTypes.func.isRequired,\n\n    /**\n     * Optional menu header.\n     */\n    menuHeader: PropTypes.element,\n\n    /**\n     * Message to display when the last team is removed\n     * if empty no confirm will be displayed.\n     */\n    confirmLastTeamRemoveMessage: PropTypes.string,\n  };\n\n  state = {\n    loading: true,\n    teams: null,\n  };\n\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  fetchTeams = debounce(async query => {\n    const {api, organization} = this.props;\n    const teams = await api.requestPromise(`/organizations/${organization.slug}/teams/`, {\n      query: {query, per_page: TEAMS_PER_PAGE},\n    });\n    this.setState({teams, loading: false});\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  handleQueryUpdate = event => {\n    this.setState({loading: true});\n    this.fetchTeams(event.target.value);\n  };\n\n  handleAddTeam = option => {\n    const team = this.state.teams.find(tm => tm.slug === option.value);\n    this.props.onAddTeam(team);\n  };\n\n  handleRemove = teamSlug => {\n    this.props.onRemoveTeam(teamSlug);\n  };\n\n  renderTeamAddDropDown() {\n    const {disabled, selectedTeams, menuHeader} = this.props;\n    const {teams} = this.state;\n    const noTeams = teams === null || teams.length === 0;\n    const isDisabled = disabled;\n\n    let options;\n    if (noTeams) {\n      options = [];\n    } else {\n      options = teams\n        .filter(team => !selectedTeams.includes(team.slug))\n        .map(team => ({\n          value: team.slug,\n          searchKey: team.slug,\n          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,\n        }));\n    }\n\n    return (\n      <DropdownAutoComplete\n        items={options}\n        busyItemsStillVisible={this.state.loading}\n        onChange={this.handleQueryUpdate}\n        onSelect={this.handleAddTeam}\n        emptyMessage={t('No teams')}\n        menuHeader={menuHeader}\n        disabled={isDisabled}\n      >\n        {({isOpen}) => (\n          <DropdownButton\n            aria-label={t('Add Team')}\n            isOpen={isOpen}\n            size=\"xsmall\"\n            disabled={isDisabled}\n          >\n            {t('Add Team')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  renderBody() {\n    const {\n      organization,\n      selectedTeams,\n      disabled,\n      confirmLastTeamRemoveMessage,\n    } = this.props;\n\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team}\n        orgId={organization.slug}\n        team={team}\n        onRemove={this.handleRemove}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          {t('Team')}\n          {this.renderTeamAddDropDown()}\n        </PanelHeader>\n\n        <PanelBody>{this.renderBody()}</PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst TeamRow = props => {\n  const {orgId, team, onRemove, disabled, confirmMessage} = props;\n  return (\n    <TeamPanelItem>\n      <StyledLink to={`/settings/${orgId}/teams/${team}/`}>{`#${team}`}</StyledLink>\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemove(team)}\n        disabled={disabled}\n      >\n        <Button\n          size=\"xsmall\"\n          icon={<IconSubtract isCircled size=\"xs\" />}\n          disabled={disabled}\n        >\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n};\n\nTeamRow.propTypes = {\n  disabled: PropTypes.bool,\n  team: PropTypes.string.isRequired,\n  orgId: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  confirmMessage: PropTypes.string,\n};\n\nconst TeamDropdownElement = styled('div')`\n  padding: ${space(0.5)} ${space(0.25)};\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(TeamSelect);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {MemberRole} from 'app/types';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport Radio from 'app/components/radio';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  enforceAllowed: boolean;\n  disabled: boolean;\n  selectedRole: string;\n  roleList: MemberRole[];\n  setRole: (id: string) => void;\n};\n\nclass RoleSelect extends React.Component<Props> {\n  static propTypes = {\n    /**\n     * Whether to disable or not using `allowed` prop from API request\n     */\n    enforceAllowed: PropTypes.bool,\n    disabled: PropTypes.bool,\n    selectedRole: PropTypes.string,\n    roleList: PropTypes.array,\n    setRole: PropTypes.func,\n  };\n\n  render() {\n    const {disabled, enforceAllowed, roleList, selectedRole} = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Role')}</PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed} = role;\n            const isDisabled = disabled || (enforceAllowed && !allowed);\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && this.props.setRole(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === selectedRole} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default RoleSelect;\n","import {RouteComponentProps} from 'react-router/lib/Router';\nimport {browserHistory} from 'react-router';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {Member, Organization, Team} from 'app/types';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {inputStyles} from 'app/styles/input';\nimport {removeAuthenticator} from 'app/actionCreators/account';\nimport {resendMemberInvite, updateMember} from 'app/actionCreators/members';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DateTime from 'app/components/dateTime';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Field from 'app/views/settings/components/forms/field';\nimport NotFound from 'app/components/errors/notFound';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\nimport Tooltip from 'app/components/tooltip';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport RoleSelect from './inviteMember/roleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  orgId: string;\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n  member: Member | null;\n} & AsyncView['state'];\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): [string, string][] {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member!.teams.includes(team.slug)) {\n      member!.teams.push(team.slug);\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(`/settings/${organization.slug}/members/`);\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write');\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={\n            <React.Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </React.Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <OverflowWrapper>\n                <Details>\n                  <div>\n                    <DetailLabel>{t('Email')}</DetailLabel>\n                    <div>\n                      <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Status')}</DetailLabel>\n                    <div data-test-id=\"member-status\">\n                      {member.expired ? (\n                        <em>{t('Invitation Expired')}</em>\n                      ) : member.pending ? (\n                        <em>{t('Invitation Pending')}</em>\n                      ) : (\n                        t('Active')\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Added')}</DetailLabel>\n                    <div>\n                      <DateTime dateOnly date={member.dateCreated} />\n                    </div>\n                  </div>\n                </Details>\n\n                {inviteLink && (\n                  <InviteSection>\n                    <div>\n                      <DetailLabel>{t('Invite Link')}</DetailLabel>\n                      <AutoSelectText>\n                        <CodeInput>{inviteLink}</CodeInput>\n                      </AutoSelectText>\n                      <p className=\"help-block\">\n                        {t('This unique invite link may only be used by this member.')}\n                      </p>\n                    </div>\n                    <InviteActions>\n                      <Button onClick={() => this.handleInvite(true)}>\n                        {t('Generate New Invite')}\n                      </Button>\n                      {canResend && (\n                        <Button\n                          data-test-id=\"resend-invite\"\n                          onClick={() => this.handleInvite(false)}\n                        >\n                          {t('Resend Invite')}\n                        </Button>\n                      )}\n                    </InviteActions>\n                  </InviteSection>\n                )}\n              </OverflowWrapper>\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <Field\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip\n                  data-test-id=\"reset-2fa-tooltip\"\n                  disabled={this.showResetButton()}\n                  title={this.getTooltip()}\n                >\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                    data-test-id=\"reset-2fa-confirm\"\n                  >\n                    <Button data-test-id=\"reset-2fa\" priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </Field>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <RoleSelect\n          enforceAllowed={false}\n          disabled={!canEdit}\n          roleList={member.roles}\n          selectedRole={member.role}\n          setRole={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <TeamSelect\n          organization={organization}\n          selectedTeams={member.teams}\n          disabled={!canEdit}\n          onAddTeam={this.handleAddTeam}\n          onRemoveTeam={this.handleRemoveTeam}\n        />\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray500};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.gray700};\n`;\n\nconst OverflowWrapper = styled('div')`\n  overflow: hidden;\n  flex: 1;\n`;\n\nconst InviteSection = styled('div')`\n  border-top: 1px solid ${p => p.theme.borderLight};\n  margin-top: ${space(2)};\n  padding-top: ${space(2)};\n`;\n\nconst CodeInput = styled('code')`\n  ${p => inputStyles(p)}; /* Have to do this for typescript :( */\n`;\n\nconst InviteActions = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  margin-top: ${space(2)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"sourceRoot":""}