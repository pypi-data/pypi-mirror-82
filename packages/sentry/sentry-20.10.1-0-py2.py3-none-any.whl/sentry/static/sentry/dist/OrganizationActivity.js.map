{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PullRequestLink","pullRequest","repository","inline","displayId","name","id","externalUrl","className","href","repo","provider","includes","split","pop","size","renderIcon","IssueLink","children","orgId","issue","to","card","message","metadata","type","value","culprit","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","data","HovercardEventMessage","level","levelIndicatorSize","annotations","Fragment","logger","pathname","query","map","annotation","i","key","dangerouslySetInnerHTML","__html","Grid","GridHeader","t","StyledTimeSince","date","firstSeen","lastSeen","count","userCount","body","header","shortId","p","theme","fontSizeMedium","space","overflowEllipsis","gray500","EventMessage","TimeSince","ActivityItem","state","clipped","props","defaultClipped","activityBubbleRef","React","createRef","formatProjectActivity","author","item","organization","slug","project","basePath","issueLink","versionLink","version","projectSlug","releaseVersion","projectId","tct","commitId","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","length","source","assignee","assigneeType","team","TeamStore","getById","user","MemberListStore","email","assigneeEmail","help","issues","link","environment","current","offsetHeight","clipHeight","setState","avatar","hasBubble","bubbleProps","marked","text","location","ActivityAuthor","Bubble","ref","Meta","Project","dateCreated","Component","defaultProps","borderLight","gray700","fontSizeRelativeSmall","gray100","OrganizationActivity","params","routeTitle","renderBody","error","disableLog","disableReport","errors","notFound","Object","values","find","resp","loading","activity","activityPageLinks","withMargins","renderEmpty","data-test-id","mini","css","marginBottom","borderRadius","pageLinks","withOrganization"],"mappings":"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","file":"OrganizationActivity.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';\nimport {Repository, PullRequest} from 'app/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nconst PullRequestLink = ({pullRequest, repository, inline}: Props) => {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  return pullRequest.externalUrl ? (\n    <ExternalLink\n      className={inline ? 'inline-commit' : 'btn btn-default btn-sm'}\n      href={pullRequest.externalUrl}\n    >\n      {renderIcon(repository)}\n      {inline ? '' : ' '}\n      {displayId}\n    </ExternalLink>\n  ) : (\n    <span>{displayId}</span>\n  );\n};\n\nexport default PullRequestLink;\n","import {Link} from 'react-router';\nimport React from 'react';\nimport classNames from 'classnames';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport Count from 'app/components/count';\nimport EventAnnotation from 'app/components/events/eventAnnotation';\nimport EventMessage from 'app/components/events/eventMessage';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport Hovercard from 'app/components/hovercard';\nimport TimeSince from 'app/components/timeSince';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\ntype Props = {\n  orgId: string;\n  issue: Group;\n  to: string;\n  card: boolean;\n  children: React.ReactNode;\n};\n\nfunction getMessage(issue: Group) {\n  const metadata = issue.metadata;\n  switch (issue.type) {\n    case 'error':\n      return metadata.value;\n    case 'csp':\n      return metadata.message;\n    default:\n      return issue.culprit || '';\n  }\n}\n\nconst IssueLink = ({children, orgId, issue, to, card = true}: Props) => {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <EventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <React.Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </React.Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n};\n\nexport default IssueLink;\n\nconst Title = styled('h3')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0 0 ${space(0.5)};\n  ${overflowEllipsis};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    color: ${p => p.theme.gray500};\n    font-size: 90%;\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray500};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import {Link} from 'react-router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Activity, Organization} from 'app/types';\nimport {t, tn, tct} from 'app/locale';\nimport CommitLink from 'app/components/commitLink';\nimport Duration from 'app/components/duration';\nimport ExternalLink from 'app/components/links/externalLink';\nimport IssueLink from 'app/components/issueLink';\nimport MemberListStore from 'app/stores/memberListStore';\nimport PullRequestLink from 'app/components/pullRequestLink';\nimport TeamStore from 'app/stores/teamStore';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport VersionHoverCard from 'app/components/versionHoverCard';\nimport marked from 'app/utils/marked';\nimport space from 'app/styles/space';\nimport ActivityAvatar from 'app/components/activity/item/avatar';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  className?: string;\n  organization: Organization;\n  item: Activity;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  activityBubbleRef = React.createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const orgId = this.props.organization.slug;\n    const project = item.project;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink orgId={orgId} issue={issue} to={`${basePath}${issue.id}/`} card>\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = data.version ? (\n      <VersionHoverCard\n        orgSlug={orgId}\n        projectSlug={project.slug}\n        releaseVersion={data.version}\n      >\n        <Version version={data.version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        if (data.version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        } else if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        } else if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        } else if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar type={!item.user ? 'system' : 'user'} user={item.user} size={36} />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.gray700};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.gray100};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.borderLight};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray500};\n  padding-left: ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\n\nimport {Activity, Organization} from 'app/types';\nimport {PageContent} from 'app/styles/organization';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport routeTitle from 'app/utils/routeTitle';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  activity: Activity[];\n} & AsyncView['state'];\n\nclass OrganizationActivity extends AsyncView<Props, State> {\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitle(t('Activity'), orgId);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['activity', `/organizations/${this.props.params.orgId}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <PageContent>\n        <PageHeading withMargins>{t('Activity')}</PageHeading>\n        <Panel>\n          {loading && <LoadingIndicator />}\n          {!loading && !activity?.length && this.renderEmpty()}\n          {!loading && activity?.length > 0 && (\n            <div data-test-id=\"activity-feed-list\">\n              {activity.map(item => (\n                <ErrorBoundary\n                  mini\n                  css={{marginBottom: space(1), borderRadius: 0}}\n                  key={item.id}\n                >\n                  <ActivityFeedItem organization={this.props.organization} item={item} />\n                </ErrorBoundary>\n              ))}\n            </div>\n          )}\n        </Panel>\n        {activityPageLinks && (\n          <Pagination pageLinks={activityPageLinks} {...this.props} />\n        )}\n      </PageContent>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"sourceRoot":""}