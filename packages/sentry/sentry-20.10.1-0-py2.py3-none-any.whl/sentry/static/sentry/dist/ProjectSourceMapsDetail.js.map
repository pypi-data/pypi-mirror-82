{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","SearchBar","state","query","defaultQuery","dropdownVisible","searchInputRef","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","Input","type","placeholder","name","ref","autoComplete","onBlur","StyledIconSearch","size","color","onClick","PureComponent","undefined","IconSearch","FileSize","bytes","getDynamicText","formatBytes","fixed","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","dateCreated","dist","id","handleDeleteClick","Fragment","NameColumn","Name","t","TimeAndDistWrapper","TimeWrapper","date","inline","SizeColumn","ActionsColumn","gap","access","hasAccess","disabled","href","message","onConfirm","label","theme","fontSizeSmall","gray600","ProjectSourceMapsDetail","handleSearch","location","router","push","cursor","handleArtifactDelete","a","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","handleArchiveDelete","params","orgId","projectId","formatVersion","artifacts","getQuery","encodeURIComponent","decodeScalar","renderBody","artifactApiUrl","baseUrl","length","map","key","loading","artifactsPageLinks","project","StyledSettingsPageHeader","version","tooltipRawVersion","anchor","truncate","StyledButtonBar","ReleaseButton","to","StyledPanelTable","headers","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderArtifacts","pageLinks","SettingsPageHeader","breakpoints","ButtonBar","PanelTable","Button"],"mappings":"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","file":"ProjectSourceMapsDetail.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {IconClose} from 'app/icons/iconClose';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {IconSearch} from 'app/icons';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <Input\n              type=\"text\"\n              className=\"search-input form-control\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray500\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <div>\n                <a className=\"search-clear-form\" onClick={this.clearSearch}>\n                  <IconClose />\n                </a>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst Input = styled('input')`\n  width: ${p => (p.width ? p.width : undefined)};\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {formatBytes} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytes(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nFileSize.propTypes = {\n  className: PropTypes.string,\n  bytes: PropTypes.number.isRequired,\n};\n\nexport default FileSize;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport TimeSince from 'app/components/timeSince';\nimport Button from 'app/components/button';\nimport {IconClock, IconDelete, IconDownload} from 'app/icons';\nimport ButtonBar from 'app/components/buttonBar';\nimport FileSize from 'app/components/fileSize';\nimport {Artifact} from 'app/types';\nimport Confirm from 'app/components/confirm';\nimport Access from 'app/components/acl/access';\nimport Tooltip from 'app/components/tooltip';\nimport Tag from 'app/components/tag';\n\ntype Props = {\n  artifact: Artifact;\n  onDelete: (id: string) => void;\n  downloadUrl: string;\n};\n\nconst SourceMapsArtifactRow = ({artifact, onDelete, downloadUrl}: Props) => {\n  const {name, size, dateCreated, dist, id} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <React.Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"xs\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          {dist && <Tag inline>{dist}</Tag>}\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Access access={['project:write']}>\n            {({hasAccess}) => (\n              <Tooltip\n                title={t('You do not have permission to download artifacts.')}\n                disabled={hasAccess}\n              >\n                <Button\n                  size=\"small\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasAccess}\n                  href={downloadUrl}\n                  title={t('Download Artifact')}\n                />\n              </Tooltip>\n            )}\n          </Access>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={t('Remove Artifact')}\n                    label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </React.Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray600};\n`;\n\nexport default SourceMapsArtifactRow;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport {Organization, Project, Artifact} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport SearchBar from 'app/components/searchBar';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport {formatVersion} from 'app/utils/formatters';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {IconDelete} from 'app/icons';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {decodeScalar} from 'app/utils/queryString';\nimport Confirm from 'app/components/confirm';\nimport Version from 'app/components/version';\nimport TextOverflow from 'app/components/textOverflow';\nimport space from 'app/styles/space';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {orgId: string; projectId: string; name: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, name} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(name)}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {orgId, projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name, orgId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <React.Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Confirm\n                message={t(\n                  'Are you sure you want to remove all artifacts in this archive?'\n                )}\n                onConfirm={this.handleArchiveDelete}\n              >\n                <Button\n                  icon={<IconDelete size=\"sm\" />}\n                  title={t('Remove All Artifacts')}\n                  label={t('Remove All Artifacts')}\n                />\n              </Confirm>\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints[2]}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints[2]}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"sourceRoot":""}