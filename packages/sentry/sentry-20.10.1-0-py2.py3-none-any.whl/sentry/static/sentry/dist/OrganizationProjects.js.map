{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/placeholder.tsx","webpack:///./app/components/projectLabel.tsx","webpack:///./app/views/settings/components/settingsProjectItem.tsx","webpack:///./app/views/settings/organizationProjects/projectStatsGraph.jsx","webpack:///./app/views/settings/organizationProjects/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","Placeholder","className","children","error","data-test-id","theme","red100","gray200","red300","width","height","shape","bottomGutter","ProjectLabel","project","slug","PureComponent","ProjectItem","state","isBookmarked","handleToggleBookmark","setState","organization","Wrapper","BookmarkLink","onToggle","to","BookmarkStar","ProjectStatsGraph","stats","chartData","map","point","x","y","debounce","minHeights","gap","points","label","OrganizationProjects","nextProps","nextContext","searchQuery","location","query","orgId","params","per_page","since","Date","getTime","stat","group","t","renderBody","projectList","projectListPageLinks","projectStats","canCreateProjects","Set","access","has","priority","size","disabled","undefined","isCircled","hasButtons","renderSearchInput","updateRoute","placeholder","css","sortProjects","GridPanelItem","key","id","ProjectListItemWrapper","ProjectStatsGraphWrapper","length","pageLinks","contextTypes","router","PropTypes","object","isRequired","withOrganization","PanelItem"],"mappings":"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","file":"OrganizationProjects.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport space from 'app/styles/space';\n\nconst defaultProps = {\n  shape: 'rect' as 'rect' | 'circle',\n  bottomGutter: 0 as Parameters<typeof space>[0],\n  width: '100%',\n  height: '60px',\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n  error?: React.ReactNode;\n} & Partial<DefaultProps>;\n\nconst Placeholder = styled((props: Props) => {\n  const {className, children, error} = props;\n  return (\n    <div data-test-id=\"loading-placeholder\" className={className}>\n      {error || children}\n    </div>\n  );\n})<Props>`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  justify-content: center;\n\n  background-color: ${p => (p.error ? p.theme.red100 : p.theme.gray200)};\n  ${p => p.error && `color: ${p.theme.red300};`}\n  width: ${p => p.width};\n  height: ${p => p.height};\n  ${p => (p.shape === 'circle' ? 'border-radius: 100%;' : '')}\n  ${p =>\n    typeof p.bottomGutter === 'number' && p.bottomGutter > 0\n      ? `margin-bottom: ${space(p.bottomGutter)};`\n      : ''}\n`;\n\nPlaceholder.defaultProps = defaultProps;\n\nPlaceholder.propTypes = {\n  shape: PropTypes.oneOf(['rect', 'circle']),\n  width: PropTypes.string,\n  height: PropTypes.string,\n  bottomGutter: PropTypes.number as any,\n};\n\nexport default Placeholder;\n","import React from 'react';\n\nimport {Project} from 'app/types';\nimport {Project as ProjectPropType} from 'app/sentryTypes';\n\ntype Props = React.HTMLProps<HTMLSpanElement> & {\n  project: Project;\n};\n\nexport default class ProjectLabel extends React.PureComponent<Props> {\n  static propTypes = {\n    project: ProjectPropType.isRequired,\n  };\n\n  render() {\n    const {project, ...props} = this.props;\n\n    return (\n      <span className=\"project-label\" {...props}>\n        <span className=\"project-name\">{project.slug}</span>\n      </span>\n    );\n  }\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport Link from 'app/components/links/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport space from 'app/styles/space';\nimport {Project, Organization} from 'app/types';\n\ntype Props = {\n  project: Project;\n  organization: Organization;\n};\n\ntype State = {\n  isBookmarked: boolean;\n};\n\nclass ProjectItem extends React.Component<Props, State> {\n  state = {\n    isBookmarked: this.props.project.isBookmarked,\n  };\n\n  handleToggleBookmark = (isBookmarked: State['isBookmarked']) => {\n    this.setState({isBookmarked});\n  };\n\n  render() {\n    const {project, organization} = this.props;\n\n    return (\n      <Wrapper>\n        <BookmarkLink\n          organization={organization}\n          project={project}\n          isBookmarked={this.state.isBookmarked}\n          onToggle={this.handleToggleBookmark}\n        />\n        <Link to={`/settings/${organization.slug}/projects/${project.slug}/`}>\n          <ProjectLabel project={project} />\n        </Link>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst BookmarkLink = styled(BookmarkStar)`\n  margin-right: ${space(1)};\n  margin-top: -${space(0.25)};\n`;\n\nexport default ProjectItem;\n","import LazyLoad from 'react-lazyload';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BarChart from 'app/components/barChart';\nimport SentryTypes from 'app/sentryTypes';\n\nconst ProjectStatsGraph = ({project, stats}) => {\n  stats = stats || project.stats;\n  const chartData = stats && stats.map(point => ({x: point[0], y: point[1]}));\n\n  return (\n    <div>\n      {chartData && (\n        <LazyLoad height={25} debounce={50}>\n          <BarChart\n            height={25}\n            minHeights={[3]}\n            gap={1}\n            points={chartData}\n            label=\"events\"\n          />\n        </LazyLoad>\n      )}\n    </div>\n  );\n};\n\nProjectStatsGraph.propTypes = {\n  project: SentryTypes.Project,\n  stats: PropTypes.array,\n};\n\nexport default ProjectStatsGraph;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport ProjectListItem from 'app/views/settings/components/settingsProjectItem';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\nimport {IconAdd} from 'app/icons';\n\nimport ProjectStatsGraph from './projectStatsGraph';\n\nconst ITEMS_PER_PAGE = 50;\n\nclass OrganizationProjects extends AsyncView {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    super.UNSAFE_componentWillReceiveProps(nextProps, nextContext);\n    const searchQuery = nextProps.location.query.query;\n    if (searchQuery !== this.props.location.query.query) {\n      this.setState({searchQuery});\n    }\n  }\n\n  getEndpoints() {\n    const {orgId} = this.props.params;\n    return [\n      [\n        'projectList',\n        `/organizations/${orgId}/projects/`,\n        {\n          query: {\n            query: this.props.location.query.query,\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n      [\n        'projectStats',\n        `/organizations/${orgId}/stats/`,\n        {\n          query: {\n            since: new Date().getTime() / 1000 - 3600 * 24,\n            stat: 'generated',\n            group: 'project',\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n    ];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      searchQuery: this.props.location.query.query || '',\n    };\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    return routeTitleGen(t('Projects'), organization.slug, false);\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {projectList, projectListPageLinks, projectStats} = this.state;\n    const {organization} = this.props;\n    const canCreateProjects = new Set(organization.access).has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateProjects}\n        title={\n          !canCreateProjects\n            ? t('You do not have permission to create projects')\n            : undefined\n        }\n        to={`/organizations/${organization.slug}/projects/new/`}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create Project')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Projects\" action={action} />\n        <Panel>\n          <PanelHeader hasButtons>\n            {t('Projects')}\n\n            {this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Projects'),\n              className: 'search',\n            })}\n          </PanelHeader>\n          <PanelBody css={{width: '100%'}}>\n            {projectList ? (\n              sortProjects(projectList).map(project => (\n                <GridPanelItem key={project.id}>\n                  <ProjectListItemWrapper>\n                    <ProjectListItem project={project} organization={organization} />\n                  </ProjectListItemWrapper>\n                  <ProjectStatsGraphWrapper>\n                    {projectStats ? (\n                      <ProjectStatsGraph\n                        key={project.id}\n                        project={project}\n                        stats={projectStats[project.id]}\n                      />\n                    ) : (\n                      <Placeholder height=\"25px\" />\n                    )}\n                  </ProjectStatsGraphWrapper>\n                </GridPanelItem>\n              ))\n            ) : (\n              <LoadingIndicator />\n            )}\n            {projectList && projectList.length === 0 && (\n              <EmptyMessage>{t('No projects found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n        {projectListPageLinks && (\n          <Pagination pageLinks={projectListPageLinks} {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationProjects);\n\nconst GridPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ProjectListItemWrapper = styled('div')`\n  padding: ${space(2)};\n  flex: 1;\n`;\n\nconst ProjectStatsGraphWrapper = styled('div')`\n  padding: ${space(2)};\n  width: 25%;\n  margin-left: ${space(2)};\n`;\n"],"sourceRoot":""}