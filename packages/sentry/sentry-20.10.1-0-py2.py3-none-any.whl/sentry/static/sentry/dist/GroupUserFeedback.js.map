{"version":3,"sources":["webpack:///./app/views/organizationGroupDetails/groupUserFeedback.tsx"],"names":["GroupUserFeedback","state","loading","error","reportList","pageLinks","fetchData","setState","fetchGroupUserReports","props","group","id","params","then","data","jqXHR","getResponseHeader","this","prevProps","isEqual","organization","onRetry","length","className","map","item","idx","key","report","orgId","slug","issueId","projectIds","project","React","Component","withOrganization"],"mappings":"wuBAkCMA,E,kLACJC,MAAe,CACbC,SAAS,EACTC,OAAO,EACPC,WAAY,GACZC,UAAW,I,EAabC,UAAY,WACV,EAAKC,SAAS,CACZL,SAAS,EACTC,OAAO,IAGTK,YAAsB,EAAKC,MAAMC,MAAMC,GAAI,EAAKF,MAAMG,QACnDC,MAAK,YAAsB,eAApBC,EAAoB,KAAXC,GAAW,WAC1B,EAAKR,SAAS,CACZJ,OAAO,EACPD,SAAS,EACTE,WAAYU,EACZT,UAAWU,aAAF,EAAEA,EAAOC,kBAAkB,aAN1C,OASS,WACL,EAAKT,SAAS,CACZJ,OAAO,EACPD,SAAS,Q,0DA3Bfe,KAAKX,c,yCAGYY,GACZC,IAAQD,EAAUN,OAAQK,KAAKR,MAAMG,SACxCK,KAAKX,c,+BA2BA,MAC8BW,KAAKhB,MAAnCG,EADA,EACAA,WAAYF,EADZ,EACYA,QAASC,EADrB,EACqBA,MADrB,EAEuBc,KAAKR,MAA5BW,EAFA,EAEAA,aAAcV,EAFd,EAEcA,MAErB,OAAIR,EACK,YAAC,UAAD,MAGLC,EACK,YAAC,IAAD,CAAckB,QAASJ,KAAKX,YAGjCF,EAAWkB,OAEX,mBAAKC,UAAU,OACb,mBAAKA,UAAU,YACZnB,EAAWoB,KAAI,SAACC,EAAMC,GAAP,OACd,YAAC,IAAD,CACEC,IAAKD,EACLE,OAAQH,EACRI,MAAOT,EAAaU,KACpBC,QAASrB,EAAMC,QAGnB,YAAC,IAAD,CAAYN,UAAWY,KAAKhB,MAAMI,cAOxC,YAAC,IAAD,KACE,YAAC,IAAD,CAAmB2B,WAAY,CAACtB,EAAMuB,QAAQtB,W,GAzEtBuB,IAAMC,WAAhCnC,E,gCA+ESoC,sBAAiBpC","file":"GroupUserFeedback.js","sourcesContent":["import React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {Group, Organization, Project, UserReport} from 'app/types';\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel} from 'app/components/panels';\nimport Pagination from 'app/components/pagination';\nimport withOrganization from 'app/utils/withOrganization';\nimport UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  orgId: string;\n  groupId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n  environments: string[];\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.params, this.props.params)) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, this.props.params)\n      .then(([data, _, jqXHR]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: jqXHR?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Panel>\n        <UserFeedbackEmpty projectIds={[group.project.id]} />\n      </Panel>\n    );\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n"],"sourceRoot":""}