{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/components/internalStatChart.jsx","webpack:///./app/views/admin/adminQueue.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","InternalStatChart","state","error","loading","data","fetchData","_nextProps","nextState","prevProps","since","props","stat","resolution","setState","api","request","method","key","success","map","x","y","onRetry","points","getChartPoints","className","label","height","React","Component","defaultProps","withApi","AdminQueue","changeTask","value","activeTask","timeWindow","Date","getTime","taskName","seconds","Error","taskList","r","onClick","changeWindow","deprecatedSelectControl","name","onChange","allowClear","choices","concat","t"],"mappings":"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","file":"AdminQueue.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BarChart from 'app/components/barChart';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport withApi from 'app/utils/withApi';\n\nclass InternalStatChart extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    since: PropTypes.number.isRequired,\n    resolution: PropTypes.string.isRequired,\n    stat: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    height: 150,\n  };\n\n  state = {\n    error: false,\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  shouldComponentUpdate(_nextProps, nextState) {\n    return this.state.loading !== nextState.loading;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.since !== this.props.since ||\n      prevProps.stat !== this.props.stat ||\n      prevProps.resolution !== this.props.resolution\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    this.setState({loading: true});\n    this.props.api.request('/internal/stats/', {\n      method: 'GET',\n      data: {\n        since: this.props.since,\n        resolution: this.props.resolution,\n        key: this.props.stat,\n      },\n      success: data =>\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n        }),\n      error: () => this.setState({error: true}),\n    });\n  }\n\n  getChartPoints() {\n    return this.state.data.map(([x, y]) => ({x, y}));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    } else if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <BarChart\n        points={this.getChartPoints()}\n        className=\"standard-barchart\"\n        label={this.props.label}\n        height={this.props.height}\n      />\n    );\n  }\n}\n\nexport default withApi(InternalStatChart);\n","import React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport InternalStatChart from 'app/components/internalStatChart';\nimport {SelectField} from 'app/components/forms';\n\nexport default class AdminQueue extends AsyncView {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      timeWindow: '1w',\n      since: new Date().getTime() / 1000 - 3600 * 24 * 7,\n      resolution: '1h',\n      taskName: null,\n    };\n  }\n\n  getEndpoints() {\n    return [['taskList', '/internal/queue/tasks/']];\n  }\n\n  changeWindow(timeWindow) {\n    let seconds;\n    if (timeWindow === '1h') {\n      seconds = 3600;\n    } else if (timeWindow === '1d') {\n      seconds = 3600 * 24;\n    } else if (timeWindow === '1w') {\n      seconds = 3600 * 24 * 7;\n    } else {\n      throw new Error('Invalid time window');\n    }\n    this.setState({\n      since: new Date().getTime() / 1000 - seconds,\n      timeWindow,\n    });\n  }\n\n  changeTask = value => {\n    this.setState({activeTask: value});\n  };\n\n  renderBody() {\n    const {activeTask, taskList} = this.state;\n\n    return (\n      <div>\n        <div className=\"btn-group pull-right\">\n          {['1h', '1d', '1w'].map(r => (\n            <a\n              className={`btn btn-sm ${\n                r === this.state.timeWindow ? 'btn-primary' : 'btn-default'\n              }`}\n              onClick={() => this.changeWindow(r)}\n              key={r}\n            >\n              {r}\n            </a>\n          ))}\n        </div>\n\n        <h3 className=\"no-border\">Queue Overview</h3>\n\n        <div className=\"box\">\n          <div className=\"box-header\">\n            <h3>Global Throughput</h3>\n          </div>\n          <InternalStatChart\n            since={this.state.since}\n            resolution={this.state.resolution}\n            stat=\"jobs.all.started\"\n            label=\"jobs started\"\n          />\n        </div>\n\n        <h3 className=\"no-border\">Task Details</h3>\n\n        <div>\n          <div>\n            <label>Show details for task:</label>\n            <SelectField\n              deprecatedSelectControl\n              name=\"task\"\n              onChange={this.changeTask}\n              value={activeTask}\n              allowClear\n              choices={[''].concat(...taskList).map(t => [t, t])}\n            />\n          </div>\n          {activeTask ? (\n            <div>\n              <div className=\"box box-mini\" key=\"jobs.started\">\n                <div className=\"box-header\">\n                  Jobs Started <small>{activeTask}</small>\n                </div>\n                <InternalStatChart\n                  since={this.state.since}\n                  resolution={this.state.resolution}\n                  stat={`jobs.started.${this.state.activeTask}`}\n                  label=\"jobs\"\n                  height={100}\n                />\n              </div>\n              <div className=\"box box-mini\" key=\"jobs.finished\">\n                <div className=\"box-header\">\n                  Jobs Finished <small>{activeTask}</small>\n                </div>\n                <InternalStatChart\n                  since={this.state.since}\n                  resolution={this.state.resolution}\n                  stat={`jobs.finished.${this.state.activeTask}`}\n                  label=\"jobs\"\n                  height={100}\n                />\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}