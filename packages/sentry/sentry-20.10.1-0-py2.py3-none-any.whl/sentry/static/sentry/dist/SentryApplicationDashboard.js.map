{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/charts/lineChart.jsx","webpack:///./app/components/charts/barChart.jsx","webpack:///./app/components/charts/series/barSeries.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/requestLog.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","LineChart","series","seriesOptions","map","seriesName","data","dataArray","options","LineSeries","name","value","BarChart","stacked","xAxis","boundaryGap","type","BarSeries","stack","itemStyle","undefined","ALL_EVENTS","t","getEventTypes","memoize","app","issueLinkEvents","issueLinkComponent","schema","elements","find","element","hasSelectUri","fields","some","field","createHasSelectUri","create","required_fields","optional_fields","linkHasSelectUri","link","componentHasSelectUri","push","status","events","includes","isAlertable","ResponseCode","code","priority","TimestampLink","date","href","StyledIconOpen","size","RequestLog","shouldReload","handleChangeEventType","eventType","setState","currentPage","remountComponent","handleChangeErrorsOnly","errorsOnly","state","handleNextPage","handlePrevPage","slug","query","requests","renderBody","currentRequests","slice","Fragment","RequestLogFilters","label","menuWidth","button","isOpen","getActorProps","StyledDropdownButton","key","onSelect","eventKey","isActive","StyledErrorsOnlyButton","onClick","ErrorsOnlyCheckbox","checked","onChange","TableLayout","hasOrganization","loading","length","request","idx","errorUrl","responseCode","organization","OverflowBox","webhookUrl","PaginationButtons","direction","disabled","hasPrevPage","hasNextPage","DropdownButton","theme","zIndex","header","Button","IconOpen","gray600","SentryApplicationDashboard","appSlug","params","now","Math","floor","Date","getTime","since","until","stats","totalUninstalls","totalInstalls","Row","datePublished","StatsSection","StatsHeader","dateOnly","renderInstallCharts","installStats","uninstallStats","installSeries","point","uninstallSeries","ChartWrapper","height","isGroupedByDate","legend","show","orient","itemWidth","yAxis","minInterval","max","grid","left","right","views","interactions","orgId","Views","StyledFooter","to","componentInteractions","componentInteractionsDetails","Object","keys","component","renderInstallData","renderIntegrationViews","renderComponentInteractions","InteractionsChart","elementInteractionsSeries"],"mappings":"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","file":"SentryApplicationDashboard.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BaseChart from './baseChart';\nimport LineSeries from './series/lineSeries';\n\nexport default class LineChart extends React.Component {\n  static propTypes = {\n    ...BaseChart.propTypes,\n    seriesOptions: PropTypes.object,\n  };\n\n  render() {\n    const {series, seriesOptions, ...props} = this.props;\n\n    return (\n      <BaseChart\n        {...props}\n        series={series.map(({seriesName, data, dataArray, ...options}) =>\n          LineSeries({\n            ...seriesOptions,\n            ...options,\n            name: seriesName,\n            data: dataArray || data.map(({value, name}) => [name, value]),\n          })\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport BarSeries from './series/barSeries';\nimport BaseChart from './baseChart';\n\nexport default class BarChart extends React.Component {\n  static propTypes = {\n    ...BaseChart.propTypes,\n  };\n\n  render() {\n    const {series, stacked, xAxis, ...props} = this.props;\n\n    return (\n      <BaseChart\n        {...props}\n        xAxis={xAxis !== null ? {...(xAxis || {}), boundaryGap: true} : null}\n        series={series.map(({seriesName, data, ...options}) =>\n          BarSeries({\n            name: seriesName,\n            stack: stacked ? 'stack1' : null,\n            data: data.map(({value, name, itemStyle}) => {\n              if (itemStyle === undefined) {\n                return [name, value];\n              }\n              return {value: [name, value], itemStyle};\n            }),\n            ...options,\n          })\n        )}\n      />\n    );\n  }\n}\n","import {EChartOption} from 'echarts';\n\nexport default function barSeries(\n  props: EChartOption.SeriesBar = {}\n): EChartOption.SeriesBar {\n  return {\n    ...props,\n    type: 'bar',\n  };\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment-timezone';\nimport memoize from 'lodash/memoize';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport DateTime from 'app/components/dateTime';\nimport DropdownControl, {DropdownItem} from 'app/components/dropdownControl';\nimport DropdownButton from 'app/components/dropdownButton';\nimport Tag from 'app/components/tag';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Checkbox from 'app/components/checkbox';\nimport Button from 'app/components/button';\nimport space from 'app/styles/space';\nimport {IconChevron, IconFlag, IconOpen} from 'app/icons';\nimport {t} from 'app/locale';\nimport {SentryApp, SentryAppWebhookRequest, SentryAppSchemaIssueLink} from 'app/types';\nimport {Theme} from 'app/utils/theme';\n\nconst ALL_EVENTS = t('All Events');\nconst MAX_PER_PAGE = 10;\n\nconst componentHasSelectUri = (issueLinkComponent: SentryAppSchemaIssueLink): boolean => {\n  const hasSelectUri = (fields: any[]): boolean =>\n    fields.some(field => field.type === 'select' && 'uri' in field);\n\n  const createHasSelectUri =\n    hasSelectUri(issueLinkComponent.create.required_fields) ||\n    hasSelectUri(issueLinkComponent.create.optional_fields || []);\n\n  const linkHasSelectUri =\n    hasSelectUri(issueLinkComponent.link.required_fields) ||\n    hasSelectUri(issueLinkComponent.link.optional_fields || []);\n\n  return createHasSelectUri || linkHasSelectUri;\n};\n\nconst getEventTypes = memoize((app: SentryApp) => {\n  // TODO(nola): ideally this would be kept in sync with EXTENDED_VALID_EVENTS on the backend\n\n  let issueLinkEvents: string[] = [];\n  const issueLinkComponent = (app.schema.elements || []).find(\n    element => element.type === 'issue-link'\n  );\n  if (issueLinkComponent) {\n    issueLinkEvents = ['external_issue.created', 'external_issue.linked'];\n    if (componentHasSelectUri(issueLinkComponent as SentryAppSchemaIssueLink)) {\n      issueLinkEvents.push('select_options.requested');\n    }\n  }\n\n  const events = [\n    ALL_EVENTS,\n    // Internal apps don't have installation webhooks\n    ...(app.status !== 'internal'\n      ? ['installation.created', 'installation.deleted']\n      : []),\n    ...(app.events.includes('error') ? ['error.created'] : []),\n    ...(app.events.includes('issue')\n      ? ['issue.created', 'issue.resolved', 'issue.ignored', 'issue.assigned']\n      : []),\n    ...(app.isAlertable ? ['event_alert.triggered'] : []),\n    ...issueLinkEvents,\n  ];\n\n  return events;\n});\n\nconst ResponseCode = ({code}: {code: number}) => {\n  let priority: keyof Theme['alert'] = 'error';\n  if (code <= 399 && code >= 300) {\n    priority = 'warning';\n  } else if (code <= 299 && code >= 100) {\n    priority = 'success';\n  }\n\n  return (\n    <div>\n      <Tag priority={priority}>{code === 0 ? 'timeout' : code}</Tag>\n    </div>\n  );\n};\n\nconst TimestampLink = ({date, link}: {date: moment.MomentInput; link?: string}) =>\n  link ? (\n    <ExternalLink href={link}>\n      <DateTime date={date} />\n      <StyledIconOpen size=\"12px\" />\n    </ExternalLink>\n  ) : (\n    <DateTime date={date} />\n  );\n\ntype Props = AsyncComponent['props'] & {\n  app: SentryApp;\n};\n\ntype State = AsyncComponent['state'] & {\n  eventType: string;\n  errorsOnly: boolean;\n  currentPage: number;\n  requests: SentryAppWebhookRequest[];\n};\n\nexport default class RequestLog extends AsyncComponent<Props, State> {\n  shouldReload = true;\n\n  get hasNextPage() {\n    return (this.state.currentPage + 1) * MAX_PER_PAGE < this.state.requests.length;\n  }\n\n  get hasPrevPage() {\n    return this.state.currentPage > 0;\n  }\n\n  getEndpoints(): Array<[string, string, any] | [string, string]> {\n    const {slug} = this.props.app;\n\n    const query: any = {};\n    if (this.state) {\n      if (this.state.eventType !== ALL_EVENTS) {\n        query.eventType = this.state.eventType;\n      }\n      if (this.state.errorsOnly) {\n        query.errorsOnly = true;\n      }\n    }\n\n    return [['requests', `/sentry-apps/${slug}/requests/`, {query}]];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      requests: [],\n      eventType: ALL_EVENTS,\n      errorsOnly: false,\n      currentPage: 0,\n    };\n  }\n\n  handleChangeEventType = (eventType: string) => {\n    this.setState(\n      {\n        eventType,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleChangeErrorsOnly = () => {\n    this.setState(\n      {\n        errorsOnly: !this.state.errorsOnly,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleNextPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage + 1,\n    });\n  };\n\n  handlePrevPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage - 1,\n    });\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {requests, eventType, errorsOnly, currentPage} = this.state;\n    const {app} = this.props;\n\n    const currentRequests = requests.slice(\n      currentPage * MAX_PER_PAGE,\n      (currentPage + 1) * MAX_PER_PAGE\n    );\n\n    return (\n      <React.Fragment>\n        <h5>{t('Request Log')}</h5>\n\n        <div>\n          <p>\n            {t(\n              'This log shows the status of any outgoing webhook requests from Sentry to your integration.'\n            )}\n          </p>\n\n          <RequestLogFilters>\n            <DropdownControl\n              label={eventType}\n              menuWidth=\"220px\"\n              button={({isOpen, getActorProps}) => (\n                <StyledDropdownButton {...getActorProps()} isOpen={isOpen}>\n                  {eventType}\n                </StyledDropdownButton>\n              )}\n            >\n              {getEventTypes(app).map(type => (\n                <DropdownItem\n                  key={type}\n                  onSelect={this.handleChangeEventType}\n                  eventKey={type}\n                  isActive={eventType === type}\n                >\n                  {type}\n                </DropdownItem>\n              ))}\n            </DropdownControl>\n\n            <StyledErrorsOnlyButton onClick={this.handleChangeErrorsOnly}>\n              <ErrorsOnlyCheckbox>\n                <Checkbox checked={errorsOnly} onChange={() => {}} />\n                {t('Errors Only')}\n              </ErrorsOnlyCheckbox>\n            </StyledErrorsOnlyButton>\n          </RequestLogFilters>\n        </div>\n\n        <Panel>\n          <PanelHeader>\n            <TableLayout hasOrganization={app.status !== 'internal'}>\n              <div>{t('Time')}</div>\n              <div>{t('Status Code')}</div>\n              {app.status !== 'internal' && <div>{t('Organization')}</div>}\n              <div>{t('Event Type')}</div>\n              <div>{t('Webhook URL')}</div>\n            </TableLayout>\n          </PanelHeader>\n\n          {!this.state.loading ? (\n            <PanelBody>\n              {currentRequests.length > 0 ? (\n                currentRequests.map((request, idx) => (\n                  <PanelItem key={idx}>\n                    <TableLayout hasOrganization={app.status !== 'internal'}>\n                      <TimestampLink date={request.date} link={request.errorUrl} />\n                      <ResponseCode code={request.responseCode} />\n                      {app.status !== 'internal' && (\n                        <div>\n                          {request.organization ? request.organization.name : null}\n                        </div>\n                      )}\n                      <div>{request.eventType}</div>\n                      <OverflowBox>{request.webhookUrl}</OverflowBox>\n                    </TableLayout>\n                  </PanelItem>\n                ))\n              ) : (\n                <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n                  {t('No requests found in the last 30 days.')}\n                </EmptyMessage>\n              )}\n            </PanelBody>\n          ) : (\n            <LoadingIndicator />\n          )}\n        </Panel>\n\n        <PaginationButtons>\n          <Button\n            icon={<IconChevron direction=\"left\" size=\"sm\" />}\n            onClick={this.handlePrevPage}\n            disabled={!this.hasPrevPage}\n            label={t('Previous page')}\n          />\n          <Button\n            icon={<IconChevron direction=\"right\" size=\"sm\" />}\n            onClick={this.handleNextPage}\n            disabled={!this.hasNextPage}\n            label={t('Next page')}\n          />\n        </PaginationButtons>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TableLayout = styled('div')<{hasOrganization: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr 0.5fr ${p => (p.hasOrganization ? '1fr' : '')} 1fr 1fr;\n  grid-column-gap: ${space(1.5)};\n  width: 100%;\n  align-items: center;\n`;\n\nconst OverflowBox = styled('div')`\n  word-break: break-word;\n`;\n\nconst PaginationButtons = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  > :first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  > :nth-child(2) {\n    margin-left: -1px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nconst RequestLogFilters = styled('div')`\n  display: flex;\n  align-items: center;\n  padding-bottom: ${space(1)};\n`;\n\nconst ErrorsOnlyCheckbox = styled('div')`\n  input {\n    margin: 0 ${space(1)} 0 0;\n  }\n\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  z-index: ${p => p.theme.zIndex.header - 1};\n  white-space: nowrap;\n\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n`;\n\nconst StyledErrorsOnlyButton = styled(Button)`\n  margin-left: -1px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nconst StyledIconOpen = styled(IconOpen)`\n  margin-left: 6px;\n  color: ${p => p.theme.gray600};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport LineChart from 'app/components/charts/lineChart';\nimport {Panel, PanelBody, PanelHeader, PanelFooter} from 'app/components/panels';\nimport BarChart from 'app/components/charts/barChart';\nimport Link from 'app/components/links/link';\nimport DateTime from 'app/components/dateTime';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\nimport {SentryApp} from 'app/types';\n\nimport RequestLog from './requestLog';\n\ntype Props = RouteComponentProps<{appSlug: string; orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  stats: {\n    totalUninstalls: number;\n    totalInstalls: number;\n    installStats: [number, number][];\n    uninstallStats: [number, number][];\n  };\n  interactions: {\n    componentInteractions: {\n      [key: string]: [number, number][];\n    };\n    views: [number, number][];\n  };\n  app: SentryApp;\n};\n\nexport default class SentryApplicationDashboard extends AsyncView<Props, State> {\n  getEndpoints(): Array<[string, string, any] | [string, string]> {\n    const {appSlug} = this.props.params;\n\n    // Default time range for now: 90 days ago to now\n    const now = Math.floor(new Date().getTime() / 1000);\n    const ninety_days_ago = 3600 * 24 * 90;\n\n    return [\n      [\n        'stats',\n        `/sentry-apps/${appSlug}/stats/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n\n      [\n        'interactions',\n        `/sentry-apps/${appSlug}/interaction/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n      ['app', `/sentry-apps/${appSlug}/`],\n    ];\n  }\n\n  getTitle() {\n    return t('Integration Dashboard');\n  }\n\n  renderInstallData() {\n    const {app, stats} = this.state;\n    const {totalUninstalls, totalInstalls} = stats;\n    return (\n      <React.Fragment>\n        <h5>{t('Installation & Interaction Data')}</h5>\n        <Row>\n          {app.datePublished ? (\n            <StatsSection>\n              <StatsHeader>{t('Date published')}</StatsHeader>\n              <DateTime dateOnly date={app.datePublished} />\n            </StatsSection>\n          ) : null}\n          <StatsSection>\n            <StatsHeader>{t('Total installs')}</StatsHeader>\n            <p>{totalInstalls}</p>\n          </StatsSection>\n          <StatsSection>\n            <StatsHeader>{t('Total uninstalls')}</StatsHeader>\n            <p>{totalUninstalls}</p>\n          </StatsSection>\n        </Row>\n        {this.renderInstallCharts()}\n      </React.Fragment>\n    );\n  }\n\n  renderInstallCharts() {\n    const {installStats, uninstallStats} = this.state.stats;\n\n    const installSeries = {\n      data: installStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('installed'),\n    };\n    const uninstallSeries = {\n      data: uninstallStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('uninstalled'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Installations/Uninstallations over Last 90 Days')}</PanelHeader>\n        <ChartWrapper>\n          <BarChart\n            series={[installSeries, uninstallSeries]}\n            height={150}\n            stacked\n            isGroupedByDate\n            legend={{\n              show: true,\n              orient: 'horizontal',\n              data: ['installed', 'uninstalled'],\n              itemWidth: 15,\n            }}\n            yAxis={{type: 'value', minInterval: 1, max: 'dataMax'}}\n            xAxis={{type: 'time'}}\n            grid={{left: space(4), right: space(4)}}\n          />\n        </ChartWrapper>\n      </Panel>\n    );\n  }\n\n  renderIntegrationViews() {\n    const {views} = this.state.interactions;\n    const {appSlug, orgId} = this.props.params;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Integration Views')}</PanelHeader>\n        <PanelBody>\n          <InteractionsChart data={{Views: views}} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {t('Integration views are measured through views on the ')}\n            <Link to={`/sentry-apps/${appSlug}/external-install/`}>\n              {t('external installation page')}\n            </Link>\n            {t(' and views on the Learn More/Install modal on the ')}\n            <Link to={`/settings/${orgId}/integrations/`}>{t('integrations page')}</Link>\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderComponentInteractions() {\n    const {componentInteractions} = this.state.interactions;\n    const componentInteractionsDetails = {\n      'stacktrace-link': t(\n        'Each link click or context menu open counts as one interaction'\n      ),\n      'issue-link': t('Each open of the issue link modal counts as one interaction'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Component Interactions')}</PanelHeader>\n\n        <PanelBody>\n          <InteractionsChart data={componentInteractions} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {Object.keys(componentInteractions).map(\n              (component, idx) =>\n                componentInteractionsDetails[component] && (\n                  <React.Fragment key={idx}>\n                    <strong>{`${component}: `}</strong>\n                    {componentInteractionsDetails[component]}\n                    <br />\n                  </React.Fragment>\n                )\n            )}\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {app} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title={`${t('Integration Dashboard')} - ${app.name}`} />\n        {app.status === 'published' && this.renderInstallData()}\n        {app.status === 'published' && this.renderIntegrationViews()}\n        {app.schema.elements && this.renderComponentInteractions()}\n        <RequestLog app={app} />\n      </div>\n    );\n  }\n}\n\ntype InteractionsChartProps = {\n  data: {\n    [key: string]: [number, number][];\n  };\n};\nconst InteractionsChart = ({data}: InteractionsChartProps) => {\n  const elementInteractionsSeries = Object.keys(data).map((key: string) => {\n    const seriesData = data[key].map(point => ({\n      value: point[1],\n      name: point[0] * 1000,\n    }));\n    return {\n      seriesName: key,\n      data: seriesData,\n    };\n  });\n\n  return (\n    <ChartWrapper>\n      <LineChart\n        isGroupedByDate\n        series={elementInteractionsSeries}\n        grid={{left: space(4), right: space(4)}}\n        legend={{\n          show: true,\n          orient: 'horizontal',\n          data: Object.keys(data),\n        }}\n      />\n    </ChartWrapper>\n  );\n};\n\nconst Row = styled('div')`\n  display: flex;\n`;\n\nconst StatsSection = styled('div')`\n  margin-right: ${space(4)};\n`;\nconst StatsHeader = styled('h6')`\n  margin-bottom: ${space(1)};\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${p => p.theme.gray600};\n`;\n\nconst StyledFooter = styled('div')`\n  padding: ${space(1.5)};\n`;\n\nconst ChartWrapper = styled('div')`\n  padding-top: ${space(3)};\n`;\n"],"sourceRoot":""}