{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/views/monitors/monitorIcon.jsx","webpack:///./app/components/issues/snoozeAction.tsx","webpack:///./app/components/issues/compactIssue.jsx","webpack:///./app/views/monitors/checkInIcon.jsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeaderActions.jsx","webpack:///./app/views/monitors/monitorHeader.jsx","webpack:///./app/components/issueList.jsx","webpack:///./app/views/monitors/monitorIssues.jsx","webpack:///./app/views/monitors/monitorStats.jsx","webpack:///./app/views/monitors/details.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","logException","ex","context","Sentry","scope","setExtra","window","console","error","getBackgroundColor","p","color","status","theme","success","disabled","getSize","size","SnoozeTimes","SnoozeAction","state","isModalOpen","toggleModal","props","setState","closeModal","onSnooze","duration","Fragment","tooltip","className","onClick","t","show","animation","onHide","bsSize","bind","THIRTY_MINUTES","TWO_HOURS","TWENTY_FOUR_HOURS","undefined","type","React","Component","CompactIssueHeader","data","metadata","style","marginRight","culprit","directive","uri","getMessage","value","message","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","level","IconLink","to","isBookmarked","isSolid","project","numComments","CompactIssue","createReactClass","displayName","mixins","Reflux","listenTo","GroupStore","getInitialState","issue","get","componentWillReceiveProps","nextProps","onGroupChange","itemIds","has","ignoreDuration","onUpdate","addLoadingMessage","api","bulkUpdate","orgId","complete","clearIndicators","render","hasSeen","statsPeriod","toggleSelect","flexDirection","paddingTop","paddingBottom","showActions","topLevelClasses","caret","groupId","children","withApi","withOrganization","ErrorLevel","space","Link","MonitorCheckIns","monitor","query","per_page","ErrorWrapper","checkInList","map","checkIn","key","CheckInIconWrapper","TimeSinceWrapper","date","dateCreated","seconds","DivMargin","MonitorHeaderActions","handleDelete","redirectPath","requestPromise","method","then","browserHistory","push","addErrorMessage","updateMonitor","resp","err","toggleStatus","ButtonContainer","gap","icon","onConfirm","MonitorHeader","name","lastCheckIn","nextCheckIn","IssueList","getDefaultProps","pagination","noBorder","noMargin","issueIds","loading","pageLinks","componentWillMount","fetchData","location","nextLocation","pathname","search","remountComponent","clear","request","endpoint","cursor","_","jqXHR","item","getResponseHeader","renderResults","body","renderLoading","renderError","length","panelStyle","border","borderRadius","marginBottom","renderEmpty","margin","onRetry","emptyText","MonitorIssues","getIssuesPath","limit","params","MonitorStats","until","Math","floor","Date","getTime","since","resolution","point","_pointIdx","chart","timeLabel","getTimeLabel","y","ok","width","toLocaleString","emptyStats","stats","x","ts","description","points","height","label","barClasses","renderTooltip","MonitorDetails","monitorId"],"mappings":"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","file":"MonitorDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as Sentry from '@sentry/react';\n\nexport function logException(ex: Error, context?: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /*eslint no-console:0*/\n  window.console && console.error && console.error(ex);\n}\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Modal from 'react-bootstrap/lib/Modal';\n\nimport {t} from 'app/locale';\n\nenum SnoozeTimes {\n  // all values in minutes\n  THIRTY_MINUTES = 30,\n  TWO_HOURS = 60 * 2,\n  TWENTY_FOUR_HOURS = 60 * 24,\n}\n\ntype SnoozeActionProps = {\n  disabled: boolean;\n  tooltip: string;\n  onSnooze: (duration: SnoozeTimes) => {};\n  className?: string;\n};\n\nclass SnoozeAction extends React.Component<SnoozeActionProps> {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    onSnooze: PropTypes.func.isRequired,\n    tooltip: PropTypes.string,\n  };\n\n  state = {\n    isModalOpen: false,\n  };\n\n  toggleModal = () => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({isModalOpen: false});\n  };\n\n  onSnooze = (duration: SnoozeTimes) => {\n    this.props.onSnooze(duration);\n    this.closeModal();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <a\n          title={this.props.tooltip}\n          className={this.props.className}\n          onClick={this.toggleModal}\n        >\n          <span>{t('zZz')}</span>\n        </a>\n        <Modal\n          show={this.state.isModalOpen}\n          title={t('Please confirm')}\n          animation={false}\n          onHide={this.closeModal}\n          bsSize=\"sm\"\n        >\n          <div className=\"modal-body\">\n            <h5>{t('How long should we ignore this issue?')}</h5>\n            <ul className=\"nav nav-stacked nav-pills\">\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.THIRTY_MINUTES)}>\n                  {t('30 minutes')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWO_HOURS)}>\n                  {t('2 hours')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWENTY_FOUR_HOURS)}>\n                  {t('24 hours')}\n                </a>\n              </li>\n              {/* override click event object w/ undefined to indicate \"no duration\" */}\n              <li>\n                <a onClick={this.onSnooze.bind(this, undefined)}>{t('Forever')}</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.closeModal}>\n              {t('Cancel')}\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SnoozeAction;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {IconChat, IconCheckmark, IconEllipsis, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport DropdownLink from 'app/components/dropdownLink';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport GroupChart from 'app/components/stream/groupChart';\nimport GroupStore from 'app/stores/groupStore';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport SnoozeAction from 'app/components/issues/snoozeAction';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nclass CompactIssueHeader extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projectId: PropTypes.string,\n    eventId: PropTypes.string,\n    data: PropTypes.object.isRequired,\n  };\n\n  getTitle = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.type}</span>\n            <em>{data.culprit}</em>\n            <br />\n          </span>\n        );\n      case 'csp':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.directive}</span>\n            <em>{metadata.uri}</em>\n            <br />\n          </span>\n        );\n      case 'default':\n        return <span>{metadata.title}</span>;\n      default:\n        return <span>{data.title}</span>;\n    }\n  };\n\n  getMessage = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return metadata.value;\n      case 'csp':\n        return metadata.message;\n      default:\n        return '';\n    }\n  };\n\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'green400'\n        : 'currentColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              {this.getTitle()}\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{this.getMessage()}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst CompactIssue = createReactClass({\n  displayName: 'CompactIssue',\n\n  propTypes: {\n    api: PropTypes.object,\n    data: PropTypes.object,\n    id: PropTypes.string,\n    eventId: PropTypes.string,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    organization: SentryTypes.Organization.isRequired,\n  },\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.props.api.bulkUpdate(\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {id, organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart\n              id={id}\n              statsPeriod={this.props.statsPeriod}\n              data={this.props.data}\n            />\n          </div>\n        )}\n        {this.props.showActions && (\n          <div className=\"more-menu-container align-right\">\n            <DropdownLink\n              topLevelClasses=\"more-menu\"\n              className=\"more-menu-toggle\"\n              caret={false}\n              title={<IconEllipsis size=\"xs\" />}\n            >\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {\n                    status: issue.status !== 'resolved' ? 'resolved' : 'unresolved',\n                  })}\n                >\n                  <IconCheckmark size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}\n                >\n                  <IconStar isSolid size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <SnoozeAction\n                  orgId={organization.slug}\n                  groupId={id}\n                  onSnooze={this.onSnooze}\n                />\n              </li>\n            </DropdownLink>\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Monitor} from 'app/views/monitors/types';\nimport {PanelBody, PanelItem} from 'app/components/panels';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Duration from 'app/components/duration';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getEndpoints(): [string, string, {query: {per_page: number}}][] {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => (\n          <PanelItem key={checkIn.id}>\n            <CheckInIconWrapper>\n              <CheckInIcon status={checkIn.status} size={16} />\n            </CheckInIconWrapper>\n            <TimeSinceWrapper>\n              <TimeSince date={checkIn.dateCreated} />\n            </TimeSinceWrapper>\n            <div>{checkIn.duration && <Duration seconds={checkIn.duration / 100} />}</div>\n          </PanelItem>\n        ))}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)``;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {logException} from 'app/utils/logging';\nimport {t} from 'app/locale';\nimport ButtonBar from 'app/components/buttonBar';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete, IconEdit} from 'app/icons';\nimport SentryTypes from 'app/sentryTypes';\nimport withApi from 'app/utils/withApi';\nimport space from 'app/styles/space';\n\nclass MonitorHeaderActions extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    orgId: PropTypes.string.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  handleDelete = () => {\n    const {api, orgId, monitor} = this.props;\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  updateMonitor = data => {\n    const {api, monitor} = this.props;\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        this.props.onUpdate && this.props.onUpdate(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  toggleStatus = () => {\n    const {monitor} = this.props;\n    this.updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n  };\n\n  render() {\n    const {monitor, orgId} = this.props;\n    return (\n      <ButtonContainer>\n        <ButtonBar gap={1}>\n          <Button\n            size=\"small\"\n            icon={<IconEdit size=\"xs\" />}\n            to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n          >\n            &nbsp;\n            {t('Edit')}\n          </Button>\n          <Button size=\"small\" onClick={this.toggleStatus}>\n            {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n          </Button>\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this monitor is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon={<IconDelete size=\"xs\" />}>\n              {t('Delete')}\n            </Button>\n          </Confirm>\n        </ButtonBar>\n      </ButtonContainer>\n    );\n  }\n}\n\nconst ButtonContainer = styled('div')`\n  margin-bottom: ${space(3)};\n  display: flex;\n  flex-shrink: 1;\n`;\n\nexport default withApi(MonitorHeaderActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\nexport default class MonitorHeader extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {monitor} = this.props;\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-10\">\n            <h3>{monitor.name}</h3>\n            <div className=\"release-meta\">{monitor.id}</div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n            {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n            {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n          </div>\n          <div className=\"col-sm-2\">\n            <h6 className=\"nav-header\">{t('Status')}</h6>\n            <MonitorIcon status={monitor.status} size={16} />\n          </div>\n        </div>\n        <MonitorHeaderActions\n          orgId={this.props.orgId}\n          monitor={monitor}\n          onUpdate={this.props.onUpdate}\n        />\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelBody} from 'app/components/panels';\nimport withApi from 'app/utils/withApi';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {IconSearch} from 'app/icons';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst IssueList = createReactClass({\n  displayName: 'IssueList',\n\n  propTypes: {\n    api: PropTypes.object,\n    endpoint: PropTypes.string.isRequired,\n    emptyText: PropTypes.string,\n    query: PropTypes.object,\n    pagination: PropTypes.bool,\n    renderEmpty: PropTypes.func,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    noBorder: PropTypes.bool,\n    noMargin: PropTypes.bool,\n  },\n\n  getDefaultProps() {\n    return {\n      pagination: true,\n      query: {},\n      noBorder: false,\n      noMargin: false,\n    };\n  },\n\n  getInitialState() {\n    return {\n      issueIds: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const location = this.props.location;\n    const nextLocation = nextProps.location;\n    if (!location) {\n      return;\n    }\n\n    if (\n      location.pathname !== nextLocation.pathname ||\n      location.search !== nextLocation.search\n    ) {\n      this.remountComponent();\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  fetchData() {\n    const location = this.props.location;\n    this.props.api.clear();\n    this.props.api.request(this.props.endpoint, {\n      method: 'GET',\n      query: {\n        cursor: (location && location.query && location.query.cursor) || '',\n        ...this.props.query,\n      },\n      success: (data, _, jqXHR) => {\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n          issueIds: data.map(item => item.id),\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  renderResults() {\n    let body;\n    const {noBorder, noMargin} = this.props;\n\n    if (this.state.loading) {\n      body = this.renderLoading();\n    } else if (this.state.error) {\n      body = this.renderError();\n    } else if (this.state.issueIds.length > 0) {\n      const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n      if (noMargin) {\n        panelStyle.marginBottom = 0;\n      }\n\n      body = (\n        <Panel style={panelStyle}>\n          <PanelBody className=\"issue-list\">\n            {this.state.data.map(issue => (\n              <CompactIssue\n                key={issue.id}\n                id={issue.id}\n                data={issue}\n                statsPeriod={this.props.statsPeriod}\n                showActions={this.props.showActions}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      );\n    } else {\n      body = (this.props.renderEmpty || this.renderEmpty)();\n    }\n\n    return body;\n  },\n\n  renderError() {\n    return (\n      <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n        <LoadingError onRetry={this.fetchData} />\n      </div>\n    );\n  },\n\n  renderLoading() {\n    return (\n      <div style={{margin: '18px 18px 0'}}>\n        <LoadingIndicator />\n      </div>\n    );\n  },\n\n  renderEmpty() {\n    const {emptyText} = this.props;\n    const {noBorder, noMargin} = this.props;\n    const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n    if (noMargin) {\n      panelStyle.marginBottom = 0;\n    }\n\n    return (\n      <Panel style={panelStyle}>\n        <EmptyMessage icon={<IconSearch size=\"xl\" />}>\n          {emptyText ? emptyText : t('Nothing to show here, move along.')}\n        </EmptyMessage>\n      </Panel>\n    );\n  },\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderResults()}\n        {this.props.pagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  },\n});\n\nexport {IssueList};\n\nexport default withApi(IssueList);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport IssueList from 'app/components/issueList';\nimport {t} from 'app/locale';\n\nexport default class MonitorIssues extends Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getIssuesPath() {\n    const {orgId} = this.props;\n    return `/organizations/${orgId}/issues/`;\n  }\n\n  render() {\n    const {monitor, orgId} = this.props;\n\n    return (\n      <IssueList\n        endpoint={this.getIssuesPath()}\n        query={{\n          query: 'monitor.id:\"' + monitor.id + '\"',\n          project: monitor.project.id,\n          limit: 5,\n        }}\n        statsPeriod=\"0\"\n        pagination={false}\n        emptyText={t('No issues found')}\n        showActions={false}\n        noBorder\n        noMargin\n        params={{orgId}}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport StackedBarChart from 'app/components/stackedBarChart';\n\nexport default class MonitorStats extends AsyncComponent {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n    ...AsyncComponent.PropTypes,\n  };\n\n  getDefaultState() {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    return {\n      since,\n      until,\n    };\n  }\n\n  getEndpoints() {\n    const {monitor} = this.props;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since: this.state.since,\n            until: this.state.until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderTooltip(point, _pointIdx, chart) {\n    const timeLabel = chart.getTimeLabel(point);\n    const [error, ok] = point.y;\n\n    return (\n      <div style={{width: '150px'}}>\n        <div className=\"time-label\">{timeLabel}</div>\n        <div className=\"value-label\">\n          {t('%s successful', ok.toLocaleString())}\n          <br />\n          {t('%s failed', error.toLocaleString())}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const stats = this.state.stats.map(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      return {\n        x: p.ts,\n        y: [p.error, p.ok],\n      };\n    });\n\n    return (\n      <Panel>\n        <PanelBody>\n          {!emptyStats ? (\n            <StackedBarChart\n              points={stats}\n              height={150}\n              label=\"events\"\n              barClasses={['error', 'success']}\n              className=\"standard-barchart\"\n              style={{border: 'none'}}\n              tooltip={this.renderTooltip}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\n\nclass MonitorDetails extends AsyncView {\n  getEndpoints() {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitor',\n        `/monitors/${params.monitorId}/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = data => {\n    this.setState({\n      monitor: {\n        ...this.state.monitor,\n        ...data,\n      },\n    });\n  };\n\n  renderBody() {\n    const {monitor} = this.state;\n    return (\n      <React.Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n"],"sourceRoot":""}