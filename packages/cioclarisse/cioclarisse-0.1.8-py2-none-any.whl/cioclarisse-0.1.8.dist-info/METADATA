Metadata-Version: 2.1
Name: cioclarisse
Version: 0.1.8
Summary: Clarisse plugin for Conductor Cloud Rendering Platform.
Home-page: https://github.com/AtomicConductor/conductor-clarisse
Author: conductor
Author-email: info@conductortech.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python
Classifier: Topic :: Multimedia :: Graphics :: 3D Rendering
Requires-Python: ~=2.7
Description-Content-Type: text/markdown
Requires-Dist: ciocore (<1.0.0,>=0.2.11)

# Conductor for Clarisse

Clarisse Scripted Class submitter for the Conductor Cloud rendering service.

## Install


**To install the latest version.**
```bash
pip install --upgrade cioclarisse --target=$HOME/Conductor
```

**To install a specific version, for example 0.1.0.**
```bash
pip install --upgrade --force-reinstall cioclarisse==0.1.0 --target=$HOME/Conductor
```
**Then tell Clarisse how to find the plugin on startup.** 

Set the following path in the Startup Script section of the preferences window.

```bash
$CIO_DIR/cioclarisse/startup.py
```


## Usage

Right mouse click on a browser window and choose New->ConductorJob.

For detailed help, checkout the [tutorial](https://docs.conductortech.com/tutorials/clarisse) and [reference](https://docs.conductortech.com/reference/clarisse) documentation.

## Contributing

For help setting up your dev environment please visit [https://docs.conductortech.com/dev/contributing](https://docs.conductortech.com/dev/contributing)

Pull requests are welcome. For major changes, please [open an issue](https://github.com/AtomicConductor/conductor-clarisse/issues) to discuss what you would like to change.


## License
[MIT](https://choosealicense.com/licenses/mit)

## Changelog

### Version:0.1.8 -- 19 Oct 2020

* Fix tmpfile name error, which was causing a failure to make the file linux suitabole for our linux backend. [d7d958e]

### Version:0.1.7 -- 08 Oct 2020

* Fixed bug where the response window would fail to show the job url. [d0f74f8]

### Version:0.1.7 -- 08 Oct 2020

* Bump version file to 0.1.7. [9e998d8]
* Fixed bug where the response window would fail to show the job url. [d0f74f8]
* Update changelog. [fc10fa7]

### Version:0.1.6 -- 08 Oct 2020

* Refactored/combined  Job and Submission. 
* Adds better dependency scraping and variable resolution. Only follows branch used.
* Adds some validations around daemon - also better validation window. [3aa8ecc]

### Version:0.1.5 -- 02 Oct 2020

* Fixed bug where dependency scan was not currectly evaluating expressions, or returning them to their original value.  [6676679]
* Flattened directory structure. [39255ed]
* Remove dry run validation. [0b330da]

### Version:0.1.4 -- 01 Oct 2020

* Render file sanitized, and missing assets dont include sys files. [88adba3]
* Branch based dependency scan and refactor. [171d871]

### Version:0.1.3 -- 28 Sep 2020

* Post install makes backap and is more verbose. [82f0669]

### Version:0.1.2 -- 28 Sep 2020


* Removes some atts and use export_w_deps. [f836f69]
* Make sure cio line always written. [84cd18d]
* Simplify tokens, remove unneeded attributes. [e951c33]


### Version:0.1.1 -- 06 Sep 2020

* Require core 0.2.9 in setup.py. [bffc68d]
* Remove best chunk size. [6b9b08e]
* Remove timestamp. [e536849]
* Fixed sequence call that didn't use factory. [7c9e590]
* Dry up windows linuxify code. [d1966fd]
* Remove offset kludge. [748c741]
* Replace log_error with real errors and catch them properly. [240cc29]
* Converted to use coredata connection and adds post_install. [cdc9854]

### Version:0.1.0 -- 25 Jul 2020

* Pip build working. [2edf325]
* Rename package to cioclarisse. [b480d50]
* Flatter structure. [318a1c5]
* Implement setup.py for pip installation. [cc3cc39]
* Fix import statements from conductor_client fork/reorg

## OLD CHANGELOG

### Version:v2.11.7 -  2019.12.09

*  Fixed bug where empty config.yaml could not be parsed.

### Version:v2.11.6 -  2019.11.30

* Better detection of windows paths to be replaced. Less chance of false positives.

### Version:v2.11.5 -  2019.11.25

* Path manipulation code now runs on Windows only.

### Version:v2.11.4 -  2019.11.19


* Now handles windows path management offline by replacing paths in project files. In some situations links to resources in files with nested references could get erased while loading a project if all the references are not resolved. For this reason, its not sufficient to replace the paths in the session with the clarrisse sdk. Paths must be valid before the project loads. 
* Fixed bug where render file would be cleaned up before the upload daemon had a chance to upload it.

### Version:v2.11.3  -  2019.11.14

* Catch invalid glob path that caused Clarisse to crash.

### Version:v2.10.1  -  2019.09.26

* Submitter title defaults to $PNAME.
* Images attribute changed to images_and_layers.
* Instance types menu entries are now ordered by machine spec.
* Pre render script replaces backslashes as well as drive letters.
* Better error on failure to make subdirectories.

### Version:v2.9.1  -  2019.08.30

*  Supports rendering of individual image layers without rendering the containing image.
*  You can proceed with a render if some dependencies are missing. You are shown a list of missing files first. Offending files are removed from the upload list, which would previously cause a submission failure.
*  Supports shipping of the clarisse.cfg file so that preferences such as "output AOV to separate files" are respected. It has been necessary to strip some UI-focused categories to avoid a crash on Windows.
*  Choose between localizing contexts, or shipping the job with nested xrefs in tact. Due to a bug in the Clarisse undo mechanism after localizing contexts, the only way to restore the project previously was to reload a saved backup after submitting. Now we can handle shipping xrefs, there's no need to modify the scene before submission and therefore the whole operation is faster.
*  `<angle bracket tokens>` are now used to build the task command. The previous release used Clarisse `$VARIABLES` which could be confusing and less robust.
*  Some CLI args, like -license_server, -config_file, and -debug_level, have been moved into the wrapper in order to keep the task command clean. They are implemented as default values that make sense for submissions to the cloud, but can be overridden b,y including them in the task template.
*  Dependency scanning now has improved handling and information display when badly formed paths are encountered.
* Render package: Ship a regular project ASCII file to Conductor, in favour of the now deprecated render package binary.
*   Removed the over-complicated tree view widget for software package selection in favor of a dropdown menu.
*   If several images or layers are being rendered to different locations, we determine the writable output as the common location among them. If this path turns out to be the root path, it is considered invalid.

