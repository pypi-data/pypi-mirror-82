# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ResourceSecretService_pb2 as ResourceSecretService__pb2


class ResourceSecretServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSecret = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getSecret',
                request_serializer=ResourceSecretService__pb2.GetSecretRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.SecretMetadata.FromString,
                )
        self.getResourceCredentialSummary = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getResourceCredentialSummary',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.SecretMetadata.FromString,
                )
        self.getAllResourceCredentialSummaries = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getAllResourceCredentialSummaries',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialSummariesRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.ResourceCredentialSummaries.FromString,
                )
        self.addSSHCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/addSSHCredential',
                request_serializer=ResourceSecretService__pb2.SSHCredential.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
                )
        self.addPasswordCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/addPasswordCredential',
                request_serializer=ResourceSecretService__pb2.PasswordCredential.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
                )
        self.addCertificateCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/addCertificateCredential',
                request_serializer=ResourceSecretService__pb2.CertificateCredential.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
                )
        self.getSSHCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getSSHCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.SSHCredential.FromString,
                )
        self.getPasswordCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getPasswordCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.PasswordCredential.FromString,
                )
        self.getCertificateCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/getCertificateCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.CertificateCredential.FromString,
                )
        self.deleteSSHCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/deleteSSHCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
                )
        self.deletePWDCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/deletePWDCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
                )
        self.deleteCertificateCredential = channel.unary_unary(
                '/org.apache.custos.resource.secret.service.ResourceSecretService/deleteCertificateCredential',
                request_serializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
                response_deserializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
                )


class ResourceSecretServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResourceCredentialSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllResourceCredentialSummaries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addSSHCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addPasswordCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addCertificateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSSHCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPasswordCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCertificateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteSSHCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletePWDCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteCertificateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceSecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.getSecret,
                    request_deserializer=ResourceSecretService__pb2.GetSecretRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.SecretMetadata.SerializeToString,
            ),
            'getResourceCredentialSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.getResourceCredentialSummary,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.SecretMetadata.SerializeToString,
            ),
            'getAllResourceCredentialSummaries': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllResourceCredentialSummaries,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialSummariesRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.ResourceCredentialSummaries.SerializeToString,
            ),
            'addSSHCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.addSSHCredential,
                    request_deserializer=ResourceSecretService__pb2.SSHCredential.FromString,
                    response_serializer=ResourceSecretService__pb2.AddResourceCredentialResponse.SerializeToString,
            ),
            'addPasswordCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.addPasswordCredential,
                    request_deserializer=ResourceSecretService__pb2.PasswordCredential.FromString,
                    response_serializer=ResourceSecretService__pb2.AddResourceCredentialResponse.SerializeToString,
            ),
            'addCertificateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.addCertificateCredential,
                    request_deserializer=ResourceSecretService__pb2.CertificateCredential.FromString,
                    response_serializer=ResourceSecretService__pb2.AddResourceCredentialResponse.SerializeToString,
            ),
            'getSSHCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.getSSHCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.SSHCredential.SerializeToString,
            ),
            'getPasswordCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.getPasswordCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.PasswordCredential.SerializeToString,
            ),
            'getCertificateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.getCertificateCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.CertificateCredential.SerializeToString,
            ),
            'deleteSSHCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteSSHCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.SerializeToString,
            ),
            'deletePWDCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.deletePWDCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.SerializeToString,
            ),
            'deleteCertificateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteCertificateCredential,
                    request_deserializer=ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.FromString,
                    response_serializer=ResourceSecretService__pb2.ResourceCredentialOperationStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.custos.resource.secret.service.ResourceSecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ResourceSecretService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getSecret',
            ResourceSecretService__pb2.GetSecretRequest.SerializeToString,
            ResourceSecretService__pb2.SecretMetadata.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResourceCredentialSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getResourceCredentialSummary',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.SecretMetadata.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllResourceCredentialSummaries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getAllResourceCredentialSummaries',
            ResourceSecretService__pb2.GetResourceCredentialSummariesRequest.SerializeToString,
            ResourceSecretService__pb2.ResourceCredentialSummaries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addSSHCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/addSSHCredential',
            ResourceSecretService__pb2.SSHCredential.SerializeToString,
            ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addPasswordCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/addPasswordCredential',
            ResourceSecretService__pb2.PasswordCredential.SerializeToString,
            ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addCertificateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/addCertificateCredential',
            ResourceSecretService__pb2.CertificateCredential.SerializeToString,
            ResourceSecretService__pb2.AddResourceCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSSHCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getSSHCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.SSHCredential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPasswordCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getPasswordCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.PasswordCredential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCertificateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/getCertificateCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.CertificateCredential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteSSHCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/deleteSSHCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deletePWDCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/deletePWDCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteCertificateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.custos.resource.secret.service.ResourceSecretService/deleteCertificateCredential',
            ResourceSecretService__pb2.GetResourceCredentialByTokenRequest.SerializeToString,
            ResourceSecretService__pb2.ResourceCredentialOperationStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
