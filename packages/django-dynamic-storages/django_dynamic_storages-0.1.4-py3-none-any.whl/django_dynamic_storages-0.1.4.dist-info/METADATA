Metadata-Version: 2.1
Name: django-dynamic-storages
Version: 0.1.4
Summary: A collection of file fields and associated components to allow for dynamic configuration of storage properties for file-based fields within Django models.
Home-page: https://github.com/mcclory/django-dynamic-storages
License: BSD-3-Clause
Author: Patrick McClory
Author-email: patrick@mcclory.io
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: Pillow (>=8.0.0,<9.0.0)
Requires-Dist: django (>=3.0.0,<4.0.0)
Requires-Dist: django-fernet-fields (>=0.6,<0.7)
Requires-Dist: django-storages[dropbox,google,sftp,azure,boto3,libcloud] (>=1.10.1,<2.0.0)
Project-URL: Repository, https://github.com/mcclory/django-dynamic-storages
Description-Content-Type: text/markdown

# Django Dynamic Storages

I'll fill this in with more detail later, but the basic reasoning for this project is that I needed something I could use to extend the already excellent [django-storages](https://github.com/jschneier/django-storages) project such that the storage field on any given `FileField` was a callable I could source a model instance value from. I've also included an abstract class for holding a configuration that stores (securely via [django-fernet-fields](https://github.com/orcasgit/django-fernet-fields)) the access configuration for a given storage backend as well.  

